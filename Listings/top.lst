


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Top, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000         Main
    5 00000000 E3A00201        MOV              r0, 0x10000000
    6 00000004 E3A01202        MOV              r1, 0x20000000
    7 00000008         
    8 00000008 E59F2C34        LDR              r2, =Matrix_data
    9 0000000C E3A0C206        MOV              r12, 0x60000000
   10 00000010         
   11 00000010         ;MOV r3, #0x39000000
   12 00000010         ;ADD r3, #0x00FF0000
   13 00000010         ;ADD r3, #0x00008000
   14 00000010         ;ADD r3, #0x0000003E
   15 00000010         ;MOV r4, #0xC1000000
   16 00000010         ;ADD r4, #0x00680000
   17 00000010         ;ADD r4, #0x00000000
   18 00000010         ;ADD r4, #0x00000000
   19 00000010         
   20 00000010         ;STR r3, [r1], #4
   21 00000010         ;STR r4, [r1], #-4
   22 00000010         
   23 00000010         ;BL Addition
   24 00000010         ;BL Subtraction
   25 00000010         ;BL Multiplication
   26 00000010         ;BL Division
   27 00000010         
   28 00000010 E4923004        LDR              r3, [r2], #4 ;r2 = size of matr
                                                            ix
   29 00000014         
   30 00000014 E3530001        CMP              r3, #1      ;when size is 1
   31 00000018 0B0001B8        BLEQ             Makeidentity1
   32 0000001C E3530002        CMP              r3, #2      ;when size is 2
   33 00000020 0B0001BE        BLEQ             Makeidentity2
   34 00000024 E3530003        CMP              r3, #3      ;when size is 3
   35 00000028 0B0001EF        BLEQ             Makeidentity3
   36 0000002C E3530004        CMP              r3, #4      ;when size is 4
   37 00000030 0B000304        BLEQ             Makeidentity4
   38 00000034 E3530005        CMP              r3, #5      ;when size is 5
   39 00000038 0B00051C        BLEQ             Makeidentity5
   40 0000003C E3530006        CMP              r3, #6      ;when size is 6
   41 00000040 0B000875        BLEQ             Makeidentity10
   42 00000044 E3530007        CMP              r3, #7      ;when size is 7
   43 00000048 0B000873        BLEQ             Makeidentity10
   44 0000004C E3530008        CMP              r3, #8      ;when size is 8
   45 00000050 0B000871        BLEQ             Makeidentity10
   46 00000054 E3530009        CMP              r3, #9      ;when size is 9
   47 00000058 0B00086F        BLEQ             Makeidentity10
   48 0000005C E353000A        CMP              r3, #10     ;when size is 10
   49 00000060 0B00086D        BLEQ             Makeidentity10
   50 00000064 E353000B        CMP              r3, #11     ;when size is 11
   51 00000068 0B000CA5        BLEQ             Makeidentity20
   52 0000006C E353000C        CMP              r3, #12     ;when size is 12
   53 00000070 0B000CA3        BLEQ             Makeidentity20
   54 00000074 E353000D        CMP              r3, #13     ;when size is 13
   55 00000078 0B000CA1        BLEQ             Makeidentity20
   56 0000007C E353000E        CMP              r3, #14     ;when size is 14
   57 00000080 0B000C9F        BLEQ             Makeidentity20
   58 00000084 E353000F        CMP              r3, #15     ;when size is 15



ARM Macro Assembler    Page 2 


   59 00000088 0B000C9D        BLEQ             Makeidentity20
   60 0000008C E3530010        CMP              r3, #16     ;when size is 16
   61 00000090 0B000C9B        BLEQ             Makeidentity20
   62 00000094 E3530011        CMP              r3, #17     ;when size is 17
   63 00000098 0B000C99        BLEQ             Makeidentity20
   64 0000009C E3530012        CMP              r3, #18     ;when size is 18
   65 000000A0 0B000C97        BLEQ             Makeidentity20
   66 000000A4 E3530013        CMP              r3, #19     ;when size is 19
   67 000000A8 0B000C95        BLEQ             Makeidentity20
   68 000000AC E3530014        CMP              r3, #20     ;when size is 20
   69 000000B0 0B000C93        BLEQ             Makeidentity20
   70 000000B4         
   71 000000B4 E3A0F000        MOV              pc, #0      ;Program end
   72 000000B8 00000000        LTORG
   73 000000BC         
   74 000000BC         Matrix_data                          ;label for input
   75 000000BC 00000014        DCD              20
   76 000000C0 41A00000        DCD              2_01000001101000000000000000000
000
   77 000000C4 43700000        DCD              2_01000011011100000000000000000
000
   78 000000C8 41240000        DCD              2_01000001001001000000000000000
000
   79 000000CC 42400000        DCD              2_01000010010000000000000000000
000
   80 000000D0 41F00000        DCD              2_01000001111100000000000000000
000
   81 000000D4 40040000        DCD              2_01000000000001000000000000000
000
   82 000000D8 40500000        DCD              2_01000000010100000000000000000
000
   83 000000DC C19C0000        DCD              2_11000001100111000000000000000
000
   84 000000E0 43180000        DCD              2_01000011000110000000000000000
000
   85 000000E4 C1A00000        DCD              2_11000001101000000000000000000
000
   86 000000E8 43020000        DCD              2_01000011000000100000000000000
000
   87 000000EC C1280000        DCD              2_11000001001010000000000000000
000
   88 000000F0 41900000        DCD              2_01000001100100000000000000000
000
   89 000000F4 C0D80000        DCD              2_11000000110110000000000000000
000
   90 000000F8 C2940000        DCD              2_11000010100101000000000000000
000
   91 000000FC 44480000        DCD              2_01000100010010000000000000000
000
   92 00000100 C0E80000        DCD              2_11000000111010000000000000000
000
   93 00000104 C1B00000        DCD              2_11000001101100000000000000000
000
   94 00000108 C41C0000        DCD              2_11000100000111000000000000000
000
   95 0000010C C1480000        DCD              2_11000001010010000000000000000
000
   96 00000110 43440000        DCD              2_01000011010001000000000000000
000



ARM Macro Assembler    Page 3 


   97 00000114 40380000        DCD              2_01000000001110000000000000000
000
   98 00000118 43480000        DCD              2_01000011010010000000000000000
000
   99 0000011C 43200000        DCD              2_01000011001000000000000000000
000
  100 00000120 C3580000        DCD              2_11000011010110000000000000000
000
  101 00000124 C0500000        DCD              2_11000000010100000000000000000
000
  102 00000128 C4340000        DCD              2_11000100001101000000000000000
000
  103 0000012C 40F40000        DCD              2_01000000111101000000000000000
000
  104 00000130 C36C0000        DCD              2_11000011011011000000000000000
000
  105 00000134 43580000        DCD              2_01000011010110000000000000000
000
  106 00000138 42E80000        DCD              2_01000010111010000000000000000
000
  107 0000013C 41C80000        DCD              2_01000001110010000000000000000
000
  108 00000140 435C0000        DCD              2_01000011010111000000000000000
000
  109 00000144 C1B80000        DCD              2_11000001101110000000000000000
000
  110 00000148 C4380000        DCD              2_11000100001110000000000000000
000
  111 0000014C 42F80000        DCD              2_01000010111110000000000000000
000
  112 00000150 40140000        DCD              2_01000000000101000000000000000
000
  113 00000154 42300000        DCD              2_01000010001100000000000000000
000
  114 00000158 41A00000        DCD              2_01000001101000000000000000000
000
  115 0000015C C2180000        DCD              2_11000010000110000000000000000
000
  116 00000160 C1600000        DCD              2_11000001011000000000000000000
000
  117 00000164 42D40000        DCD              2_01000010110101000000000000000
000
  118 00000168 C3580000        DCD              2_11000011010110000000000000000
000
  119 0000016C 43E80000        DCD              2_01000011111010000000000000000
000
  120 00000170 44680000        DCD              2_01000100011010000000000000000
000
  121 00000174 C3F00000        DCD              2_11000011111100000000000000000
000
  122 00000178 C0D00000        DCD              2_11000000110100000000000000000
000
  123 0000017C C38C0000        DCD              2_11000011100011000000000000000
000
  124 00000180 40A40000        DCD              2_01000000101001000000000000000
000
  125 00000184 C3D00000        DCD              2_11000011110100000000000000000
000
  126 00000188 C2F80000        DCD              2_11000010111110000000000000000



ARM Macro Assembler    Page 4 


000
  127 0000018C C2A40000        DCD              2_11000010101001000000000000000
000
  128 00000190 43780000        DCD              2_01000011011110000000000000000
000
  129 00000194 C1B00000        DCD              2_11000001101100000000000000000
000
  130 00000198 C3180000        DCD              2_11000011000110000000000000000
000
  131 0000019C 43D40000        DCD              2_01000011110101000000000000000
000
  132 000001A0 42540000        DCD              2_01000010010101000000000000000
000
  133 000001A4 C0800000        DCD              2_11000000100000000000000000000
000
  134 000001A8 C0440000        DCD              2_11000000010001000000000000000
000
  135 000001AC C0840000        DCD              2_11000000100001000000000000000
000
  136 000001B0 43140000        DCD              2_01000011000101000000000000000
000
  137 000001B4 43700000        DCD              2_01000011011100000000000000000
000
  138 000001B8 40380000        DCD              2_01000000001110000000000000000
000
  139 000001BC 40480000        DCD              2_01000000010010000000000000000
000
  140 000001C0 C2480000        DCD              2_11000010010010000000000000000
000
  141 000001C4 C0780000        DCD              2_11000000011110000000000000000
000
  142 000001C8 C3F80000        DCD              2_11000011111110000000000000000
000
  143 000001CC 41020000        DCD              2_01000001000000100000000000000
000
  144 000001D0 429C0000        DCD              2_01000010100111000000000000000
000
  145 000001D4 41100000        DCD              2_01000001000100000000000000000
000
  146 000001D8 C0E00000        DCD              2_11000000111000000000000000000
000
  147 000001DC 42A80000        DCD              2_01000010101010000000000000000
000
  148 000001E0 C40C0000        DCD              2_11000100000011000000000000000
000
  149 000001E4 42D40000        DCD              2_01000010110101000000000000000
000
  150 000001E8 C4500000        DCD              2_11000100010100000000000000000
000
  151 000001EC 42000000        DCD              2_01000010000000000000000000000
000
  152 000001F0 42140000        DCD              2_01000010000101000000000000000
000
  153 000001F4 C0C00000        DCD              2_11000000110000000000000000000
000
  154 000001F8 433C0000        DCD              2_01000011001111000000000000000
000
  155 000001FC 40840000        DCD              2_01000000100001000000000000000
000



ARM Macro Assembler    Page 5 


  156 00000200 C1D00000        DCD              2_11000001110100000000000000000
000
  157 00000204 C2300000        DCD              2_11000010001100000000000000000
000
  158 00000208 40F00000        DCD              2_01000000111100000000000000000
000
  159 0000020C 40A00000        DCD              2_01000000101000000000000000000
000
  160 00000210 421C0000        DCD              2_01000010000111000000000000000
000
  161 00000214 40F40000        DCD              2_01000000111101000000000000000
000
  162 00000218 43140000        DCD              2_01000011000101000000000000000
000
  163 0000021C C4500000        DCD              2_11000100010100000000000000000
000
  164 00000220 42700000        DCD              2_01000010011100000000000000000
000
  165 00000224 41200000        DCD              2_01000001001000000000000000000
000
  166 00000228 C1040000        DCD              2_11000001000001000000000000000
000
  167 0000022C C30C0000        DCD              2_11000011000011000000000000000
000
  168 00000230 41740000        DCD              2_01000001011101000000000000000
000
  169 00000234 C1CC0000        DCD              2_11000001110011000000000000000
000
  170 00000238 41B00000        DCD              2_01000001101100000000000000000
000
  171 0000023C C11C0000        DCD              2_11000001000111000000000000000
000
  172 00000240 41080000        DCD              2_01000001000010000000000000000
000
  173 00000244 C0580000        DCD              2_11000000010110000000000000000
000
  174 00000248 C3200000        DCD              2_11000011001000000000000000000
000
  175 0000024C C4300000        DCD              2_11000100001100000000000000000
000
  176 00000250 C3D80000        DCD              2_11000011110110000000000000000
000
  177 00000254 42580000        DCD              2_01000010010110000000000000000
000
  178 00000258 44280000        DCD              2_01000100001010000000000000000
000
  179 0000025C 43F00000        DCD              2_01000011111100000000000000000
000
  180 00000260 405C0000        DCD              2_01000000010111000000000000000
000
  181 00000264 42E00000        DCD              2_01000010111000000000000000000
000
  182 00000268 41800000        DCD              2_01000001100000000000000000000
000
  183 0000026C C12C0000        DCD              2_11000001001011000000000000000
000
  184 00000270 C3B00000        DCD              2_11000011101100000000000000000
000
  185 00000274 C4440000        DCD              2_11000100010001000000000000000



ARM Macro Assembler    Page 6 


000
  186 00000278 42D80000        DCD              2_01000010110110000000000000000
000
  187 0000027C 41B00000        DCD              2_01000001101100000000000000000
000
  188 00000280 C1640000        DCD              2_11000001011001000000000000000
000
  189 00000284 C0700000        DCD              2_11000000011100000000000000000
000
  190 00000288 C0080000        DCD              2_11000000000010000000000000000
000
  191 0000028C C0040000        DCD              2_11000000000001000000000000000
000
  192 00000290 43900000        DCD              2_01000011100100000000000000000
000
  193 00000294 40400000        DCD              2_01000000010000000000000000000
000
  194 00000298 42F80000        DCD              2_01000010111110000000000000000
000
  195 0000029C 40C40000        DCD              2_01000000110001000000000000000
000
  196 000002A0 44400000        DCD              2_01000100010000000000000000000
000
  197 000002A4 C4300000        DCD              2_11000100001100000000000000000
000
  198 000002A8 C1F00000        DCD              2_11000001111100000000000000000
000
  199 000002AC 44400000        DCD              2_01000100010000000000000000000
000
  200 000002B0 C3000000        DCD              2_11000011000000000000000000000
000
  201 000002B4 C0F00000        DCD              2_11000000111100000000000000000
000
  202 000002B8 C1E00000        DCD              2_11000001111000000000000000000
000
  203 000002BC C0F00000        DCD              2_11000000111100000000000000000
000
  204 000002C0 C0040000        DCD              2_11000000000001000000000000000
000
  205 000002C4 42EC0000        DCD              2_01000010111011000000000000000
000
  206 000002C8 C1540000        DCD              2_11000001010101000000000000000
000
  207 000002CC 41020000        DCD              2_01000001000000100000000000000
000
  208 000002D0 41000000        DCD              2_01000001000000000000000000000
000
  209 000002D4 41500000        DCD              2_01000001010100000000000000000
000
  210 000002D8 C2380000        DCD              2_11000010001110000000000000000
000
  211 000002DC C4680000        DCD              2_11000100011010000000000000000
000
  212 000002E0 41A00000        DCD              2_01000001101000000000000000000
000
  213 000002E4 C3800000        DCD              2_11000011100000000000000000000
000
  214 000002E8 41040000        DCD              2_01000001000001000000000000000
000



ARM Macro Assembler    Page 7 


  215 000002EC 44180000        DCD              2_01000100000110000000000000000
000
  216 000002F0 40B80000        DCD              2_01000000101110000000000000000
000
  217 000002F4 42240000        DCD              2_01000010001001000000000000000
000
  218 000002F8 C3580000        DCD              2_11000011010110000000000000000
000
  219 000002FC 42A00000        DCD              2_01000010101000000000000000000
000
  220 00000300 C0C80000        DCD              2_11000000110010000000000000000
000
  221 00000304 C4700000        DCD              2_11000100011100000000000000000
000
  222 00000308 41B40000        DCD              2_01000001101101000000000000000
000
  223 0000030C C3040000        DCD              2_11000011000001000000000000000
000
  224 00000310 43600000        DCD              2_01000011011000000000000000000
000
  225 00000314 40F00000        DCD              2_01000000111100000000000000000
000
  226 00000318 44020000        DCD              2_01000100000000100000000000000
000
  227 0000031C C4600000        DCD              2_11000100011000000000000000000
000
  228 00000320 40EC0000        DCD              2_01000000111011000000000000000
000
  229 00000324 C16C0000        DCD              2_11000001011011000000000000000
000
  230 00000328 C1DC0000        DCD              2_11000001110111000000000000000
000
  231 0000032C C3E80000        DCD              2_11000011111010000000000000000
000
  232 00000330 C0000000        DCD              2_11000000000000000000000000000
000
  233 00000334 C1740000        DCD              2_11000001011101000000000000000
000
  234 00000338 C3580000        DCD              2_11000011010110000000000000000
000
  235 0000033C 42E00000        DCD              2_01000010111000000000000000000
000
  236 00000340 C0840000        DCD              2_11000000100001000000000000000
000
  237 00000344 43880000        DCD              2_01000011100010000000000000000
000
  238 00000348 40D00000        DCD              2_01000000110100000000000000000
000
  239 0000034C C1DC0000        DCD              2_11000001110111000000000000000
000
  240 00000350 C2E00000        DCD              2_11000010111000000000000000000
000
  241 00000354 43B80000        DCD              2_01000011101110000000000000000
000
  242 00000358 C0F80000        DCD              2_11000000111110000000000000000
000
  243 0000035C C4140000        DCD              2_11000100000101000000000000000
000
  244 00000360 41500000        DCD              2_01000001010100000000000000000



ARM Macro Assembler    Page 8 


000
  245 00000364 C0480000        DCD              2_11000000010010000000000000000
000
  246 00000368 C1020000        DCD              2_11000001000000100000000000000
000
  247 0000036C 41180000        DCD              2_01000001000110000000000000000
000
  248 00000370 40900000        DCD              2_01000000100100000000000000000
000
  249 00000374 C35C0000        DCD              2_11000011010111000000000000000
000
  250 00000378 40680000        DCD              2_01000000011010000000000000000
000
  251 0000037C C4480000        DCD              2_11000100010010000000000000000
000
  252 00000380 42F80000        DCD              2_01000010111110000000000000000
000
  253 00000384 C3280000        DCD              2_11000011001010000000000000000
000
  254 00000388 C4040000        DCD              2_11000100000001000000000000000
000
  255 0000038C 41300000        DCD              2_01000001001100000000000000000
000
  256 00000390 43FC0000        DCD              2_01000011111111000000000000000
000
  257 00000394 40500000        DCD              2_01000000010100000000000000000
000
  258 00000398 406C0000        DCD              2_01000000011011000000000000000
000
  259 0000039C C4440000        DCD              2_11000100010001000000000000000
000
  260 000003A0 C2480000        DCD              2_11000010010010000000000000000
000
  261 000003A4 44000000        DCD              2_01000100000000000000000000000
000
  262 000003A8 C31C0000        DCD              2_11000011000111000000000000000
000
  263 000003AC 42B00000        DCD              2_01000010101100000000000000000
000
  264 000003B0 43C00000        DCD              2_01000011110000000000000000000
000
  265 000003B4 C4400000        DCD              2_11000100010000000000000000000
000
  266 000003B8 C1240000        DCD              2_11000001001001000000000000000
000
  267 000003BC C2880000        DCD              2_11000010100010000000000000000
000
  268 000003C0 42F00000        DCD              2_01000010111100000000000000000
000
  269 000003C4 C0040000        DCD              2_11000000000001000000000000000
000
  270 000003C8 C40C0000        DCD              2_11000100000011000000000000000
000
  271 000003CC 40700000        DCD              2_01000000011100000000000000000
000
  272 000003D0 C1640000        DCD              2_11000001011001000000000000000
000
  273 000003D4 C1B80000        DCD              2_11000001101110000000000000000
000



ARM Macro Assembler    Page 9 


  274 000003D8 40680000        DCD              2_01000000011010000000000000000
000
  275 000003DC 428C0000        DCD              2_01000010100011000000000000000
000
  276 000003E0 C1F00000        DCD              2_11000001111100000000000000000
000
  277 000003E4 C2900000        DCD              2_11000010100100000000000000000
000
  278 000003E8 C3700000        DCD              2_11000011011100000000000000000
000
  279 000003EC C0000000        DCD              2_11000000000000000000000000000
000
  280 000003F0 41500000        DCD              2_01000001010100000000000000000
000
  281 000003F4 43240000        DCD              2_01000011001001000000000000000
000
  282 000003F8 C1580000        DCD              2_11000001010110000000000000000
000
  283 000003FC 44080000        DCD              2_01000100000010000000000000000
000
  284 00000400 40F80000        DCD              2_01000000111110000000000000000
000
  285 00000404 C2680000        DCD              2_11000010011010000000000000000
000
  286 00000408 43C00000        DCD              2_01000011110000000000000000000
000
  287 0000040C 44600000        DCD              2_01000100011000000000000000000
000
  288 00000410 C1C00000        DCD              2_11000001110000000000000000000
000
  289 00000414 41380000        DCD              2_01000001001110000000000000000
000
  290 00000418 41780000        DCD              2_01000001011110000000000000000
000
  291 0000041C 43640000        DCD              2_01000011011001000000000000000
000
  292 00000420 41880000        DCD              2_01000001100010000000000000000
000
  293 00000424 C4280000        DCD              2_11000100001010000000000000000
000
  294 00000428 C2C40000        DCD              2_11000010110001000000000000000
000
  295 0000042C C1400000        DCD              2_11000001010000000000000000000
000
  296 00000430 40E80000        DCD              2_01000000111010000000000000000
000
  297 00000434 C36C0000        DCD              2_11000011011011000000000000000
000
  298 00000438 42200000        DCD              2_01000010001000000000000000000
000
  299 0000043C 414C0000        DCD              2_01000001010011000000000000000
000
  300 00000440 43200000        DCD              2_01000011001000000000000000000
000
  301 00000444 42800000        DCD              2_01000010100000000000000000000
000
  302 00000448 C2480000        DCD              2_11000010010010000000000000000
000
  303 0000044C C2200000        DCD              2_11000010001000000000000000000



ARM Macro Assembler    Page 10 


000
  304 00000450 C1680000        DCD              2_11000001011010000000000000000
000
  305 00000454 40780000        DCD              2_01000000011110000000000000000
000
  306 00000458 40E00000        DCD              2_01000000111000000000000000000
000
  307 0000045C 40280000        DCD              2_01000000001010000000000000000
000
  308 00000460 41580000        DCD              2_01000001010110000000000000000
000
  309 00000464 C2700000        DCD              2_11000010011100000000000000000
000
  310 00000468 42640000        DCD              2_01000010011001000000000000000
000
  311 0000046C 41900000        DCD              2_01000001100100000000000000000
000
  312 00000470 C07C0000        DCD              2_11000000011111000000000000000
000
  313 00000474 C1880000        DCD              2_11000001100010000000000000000
000
  314 00000478 44600000        DCD              2_01000100011000000000000000000
000
  315 0000047C 438C0000        DCD              2_01000011100011000000000000000
000
  316 00000480 44500000        DCD              2_01000100010100000000000000000
000
  317 00000484 41900000        DCD              2_01000001100100000000000000000
000
  318 00000488 C3100000        DCD              2_11000011000100000000000000000
000
  319 0000048C C3200000        DCD              2_11000011001000000000000000000
000
  320 00000490 44700000        DCD              2_01000100011100000000000000000
000
  321 00000494 C13C0000        DCD              2_11000001001111000000000000000
000
  322 00000498 C4300000        DCD              2_11000100001100000000000000000
000
  323 0000049C 40DC0000        DCD              2_01000000110111000000000000000
000
  324 000004A0 440C0000        DCD              2_01000100000011000000000000000
000
  325 000004A4 C0BC0000        DCD              2_11000000101111000000000000000
000
  326 000004A8 C1000000        DCD              2_11000001000000000000000000000
000
  327 000004AC C2EC0000        DCD              2_11000010111011000000000000000
000
  328 000004B0 41840000        DCD              2_01000001100001000000000000000
000
  329 000004B4 43040000        DCD              2_01000011000001000000000000000
000
  330 000004B8 C1700000        DCD              2_11000001011100000000000000000
000
  331 000004BC C23C0000        DCD              2_11000010001111000000000000000
000
  332 000004C0 42FC0000        DCD              2_01000010111111000000000000000
000



ARM Macro Assembler    Page 11 


  333 000004C4 43000000        DCD              2_01000011000000000000000000000
000
  334 000004C8 C0000000        DCD              2_11000000000000000000000000000
000
  335 000004CC 41880000        DCD              2_01000001100010000000000000000
000
  336 000004D0 C4600000        DCD              2_11000100011000000000000000000
000
  337 000004D4 40800000        DCD              2_01000000100000000000000000000
000
  338 000004D8 C1800000        DCD              2_11000001100000000000000000000
000
  339 000004DC C3BC0000        DCD              2_11000011101111000000000000000
000
  340 000004E0 C2D00000        DCD              2_11000010110100000000000000000
000
  341 000004E4 40F80000        DCD              2_01000000111110000000000000000
000
  342 000004E8 43CC0000        DCD              2_01000011110011000000000000000
000
  343 000004EC 42880000        DCD              2_01000010100010000000000000000
000
  344 000004F0 44000000        DCD              2_01000100000000000000000000000
000
  345 000004F4 40480000        DCD              2_01000000010010000000000000000
000
  346 000004F8 C26C0000        DCD              2_11000010011011000000000000000
000
  347 000004FC C3B00000        DCD              2_11000011101100000000000000000
000
  348 00000500 C3F40000        DCD              2_11000011111101000000000000000
000
  349 00000504 41A40000        DCD              2_01000001101001000000000000000
000
  350 00000508 43D00000        DCD              2_01000011110100000000000000000
000
  351 0000050C 41340000        DCD              2_01000001001101000000000000000
000
  352 00000510 42880000        DCD              2_01000010100010000000000000000
000
  353 00000514 40F00000        DCD              2_01000000111100000000000000000
000
  354 00000518 C1A00000        DCD              2_11000001101000000000000000000
000
  355 0000051C C2300000        DCD              2_11000010001100000000000000000
000
  356 00000520 42280000        DCD              2_01000010001010000000000000000
000
  357 00000524 C1880000        DCD              2_11000001100010000000000000000
000
  358 00000528 40D00000        DCD              2_01000000110100000000000000000
000
  359 0000052C C1B00000        DCD              2_11000001101100000000000000000
000
  360 00000530 42380000        DCD              2_01000010001110000000000000000
000
  361 00000534 41280000        DCD              2_01000001001010000000000000000
000
  362 00000538 C1200000        DCD              2_11000001001000000000000000000



ARM Macro Assembler    Page 12 


000
  363 0000053C C2680000        DCD              2_11000010011010000000000000000
000
  364 00000540 C2F00000        DCD              2_11000010111100000000000000000
000
  365 00000544 C1800000        DCD              2_11000001100000000000000000000
000
  366 00000548 43CC0000        DCD              2_01000011110011000000000000000
000
  367 0000054C 40140000        DCD              2_01000000000101000000000000000
000
  368 00000550 C06C0000        DCD              2_11000000011011000000000000000
000
  369 00000554 C25C0000        DCD              2_11000010010111000000000000000
000
  370 00000558 C1740000        DCD              2_11000001011101000000000000000
000
  371 0000055C C0A00000        DCD              2_11000000101000000000000000000
000
  372 00000560 43600000        DCD              2_01000011011000000000000000000
000
  373 00000564 40880000        DCD              2_01000000100010000000000000000
000
  374 00000568 C1840000        DCD              2_11000001100001000000000000000
000
  375 0000056C C0840000        DCD              2_11000000100001000000000000000
000
  376 00000570 C2CC0000        DCD              2_11000010110011000000000000000
000
  377 00000574 C2440000        DCD              2_11000010010001000000000000000
000
  378 00000578 C0A00000        DCD              2_11000000101000000000000000000
000
  379 0000057C C0A00000        DCD              2_11000000101000000000000000000
000
  380 00000580 C3540000        DCD              2_11000011010101000000000000000
000
  381 00000584 C1A00000        DCD              2_11000001101000000000000000000
000
  382 00000588 43880000        DCD              2_01000011100010000000000000000
000
  383 0000058C 41580000        DCD              2_01000001010110000000000000000
000
  384 00000590 C0100000        DCD              2_11000000000100000000000000000
000
  385 00000594 C3F80000        DCD              2_11000011111110000000000000000
000
  386 00000598 C0000000        DCD              2_11000000000000000000000000000
000
  387 0000059C C4080000        DCD              2_11000100000010000000000000000
000
  388 000005A0 C2F00000        DCD              2_11000010111100000000000000000
000
  389 000005A4 41D00000        DCD              2_01000001110100000000000000000
000
  390 000005A8 C2440000        DCD              2_11000010010001000000000000000
000
  391 000005AC C0600000        DCD              2_11000000011000000000000000000
000



ARM Macro Assembler    Page 13 


  392 000005B0 40200000        DCD              2_01000000001000000000000000000
000
  393 000005B4 43580000        DCD              2_01000011010110000000000000000
000
  394 000005B8 41940000        DCD              2_01000001100101000000000000000
000
  395 000005BC C0880000        DCD              2_11000000100010000000000000000
000
  396 000005C0 C3200000        DCD              2_11000011001000000000000000000
000
  397 000005C4 40380000        DCD              2_01000000001110000000000000000
000
  398 000005C8 40680000        DCD              2_01000000011010000000000000000
000
  399 000005CC 44000000        DCD              2_01000100000000000000000000000
000
  400 000005D0 40780000        DCD              2_01000000011110000000000000000
000
  401 000005D4 43A40000        DCD              2_01000011101001000000000000000
000
  402 000005D8 42300000        DCD              2_01000010001100000000000000000
000
  403 000005DC 42800000        DCD              2_01000010100000000000000000000
000
  404 000005E0 42500000        DCD              2_01000010010100000000000000000
000
  405 000005E4 41280000        DCD              2_01000001001010000000000000000
000
  406 000005E8 C3D00000        DCD              2_11000011110100000000000000000
000
  407 000005EC 41D80000        DCD              2_01000001110110000000000000000
000
  408 000005F0 C0CC0000        DCD              2_11000000110011000000000000000
000
  409 000005F4 40280000        DCD              2_01000000001010000000000000000
000
  410 000005F8 43A00000        DCD              2_01000011101000000000000000000
000
  411 000005FC 40C80000        DCD              2_01000000110010000000000000000
000
  412 00000600 42B00000        DCD              2_01000010101100000000000000000
000
  413 00000604 42180000        DCD              2_01000010000110000000000000000
000
  414 00000608 C3A00000        DCD              2_11000011101000000000000000000
000
  415 0000060C 425C0000        DCD              2_01000010010111000000000000000
000
  416 00000610 C1880000        DCD              2_11000001100010000000000000000
000
  417 00000614 C0E00000        DCD              2_11000000111000000000000000000
000
  418 00000618 41C80000        DCD              2_01000001110010000000000000000
000
  419 0000061C C3600000        DCD              2_11000011011000000000000000000
000
  420 00000620 C1B00000        DCD              2_11000001101100000000000000000
000
  421 00000624 C1C80000        DCD              2_11000001110010000000000000000



ARM Macro Assembler    Page 14 


000
  422 00000628 42400000        DCD              2_01000010010000000000000000000
000
  423 0000062C 407C0000        DCD              2_01000000011111000000000000000
000
  424 00000630 C1020000        DCD              2_11000001000000100000000000000
000
  425 00000634 C14C0000        DCD              2_11000001010011000000000000000
000
  426 00000638 C0B80000        DCD              2_11000000101110000000000000000
000
  427 0000063C C3640000        DCD              2_11000011011001000000000000000
000
  428 00000640 41140000        DCD              2_01000001000101000000000000000
000
  429 00000644 C4000000        DCD              2_11000100000000000000000000000
000
  430 00000648 42B80000        DCD              2_01000010101110000000000000000
000
  431 0000064C C2400000        DCD              2_11000010010000000000000000000
000
  432 00000650 C3940000        DCD              2_11000011100101000000000000000
000
  433 00000654 43000000        DCD              2_01000011000000000000000000000
000
  434 00000658 42000000        DCD              2_01000010000000000000000000000
000
  435 0000065C C2500000        DCD              2_11000010010100000000000000000
000
  436 00000660 C0E00000        DCD              2_11000000111000000000000000000
000
  437 00000664 C4000000        DCD              2_11000100000000000000000000000
000
  438 00000668 42000000        DCD              2_01000010000000000000000000000
000
  439 0000066C C1980000        DCD              2_11000001100110000000000000000
000
  440 00000670 43680000        DCD              2_01000011011010000000000000000
000
  441 00000674 C2080000        DCD              2_11000010000010000000000000000
000
  442 00000678 C2500000        DCD              2_11000010010100000000000000000
000
  443 0000067C C0080000        DCD              2_11000000000010000000000000000
000
  444 00000680 42F80000        DCD              2_01000010111110000000000000000
000
  445 00000684 C1E00000        DCD              2_11000001111000000000000000000
000
  446 00000688 41940000        DCD              2_01000001100101000000000000000
000
  447 0000068C C2A80000        DCD              2_11000010101010000000000000000
000
  448 00000690 C0020000        DCD              2_11000000000000100000000000000
000
  449 00000694 406C0000        DCD              2_01000000011011000000000000000
000
  450 00000698 41A00000        DCD              2_01000001101000000000000000000
000



ARM Macro Assembler    Page 15 


  451 0000069C C2900000        DCD              2_11000010100100000000000000000
000
  452 000006A0 40A80000        DCD              2_01000000101010000000000000000
000
  453 000006A4 C3780000        DCD              2_11000011011110000000000000000
000
  454 000006A8 C2040000        DCD              2_11000010000001000000000000000
000
  455 000006AC C1380000        DCD              2_11000001001110000000000000000
000
  456 000006B0 C1C40000        DCD              2_11000001110001000000000000000
000
  457 000006B4 C1D00000        DCD              2_11000001110100000000000000000
000
  458 000006B8 C1980000        DCD              2_11000001100110000000000000000
000
  459 000006BC 43640000        DCD              2_01000011011001000000000000000
000
  460 000006C0 42400000        DCD              2_01000010010000000000000000000
000
  461 000006C4 C1140000        DCD              2_11000001000101000000000000000
000
  462 000006C8 40000000        DCD              2_01000000000000000000000000000
000
  463 000006CC C1DC0000        DCD              2_11000001110111000000000000000
000
  464 000006D0 42A00000        DCD              2_01000010101000000000000000000
000
  465 000006D4 C3D40000        DCD              2_11000011110101000000000000000
000
  466 000006D8 40FC0000        DCD              2_01000000111111000000000000000
000
  467 000006DC 41100000        DCD              2_01000001000100000000000000000
000
  468 000006E0 43100000        DCD              2_01000011000100000000000000000
000
  469 000006E4 43300000        DCD              2_01000011001100000000000000000
000
  470 000006E8 44780000        DCD              2_01000100011110000000000000000
000
  471 000006EC C3640000        DCD              2_11000011011001000000000000000
000
  472 000006F0 40D40000        DCD              2_01000000110101000000000000000
000
  473 000006F4 C0280000        DCD              2_11000000001010000000000000000
000
  474 000006F8 41300000        DCD              2_01000001001100000000000000000
000
  475 000006FC 40D00000        DCD              2_01000000110100000000000000000
000
  476 00000700         
  477 00000700         Makeidentity1                        ;when matrix is 1x1
                                                            
  478 00000700 E4923004        LDR              r3, [r2], #4 ;r3 = first elemen
                                                            t of matrix (a)
  479 00000704 E3A045FE        MOV              r4, #0x3F800000
  480 00000708 E4814004        STR              r4, [r1], #4 ;store 1
  481 0000070C E4013008        STR              r3, [r1], #-8 ;store a
  482 00000710 EB001877        BL               Division



ARM Macro Assembler    Page 16 


  483 00000714 E5905000        LDR              r5, [r0]    ;load 1/a
  484 00000718 E58C5000        STR              r5, [r12]   ;first element of i
                                                            nverse matrix is 1/
                                                            a
  485 0000071C         
  486 0000071C E3A0F000        MOV              pc, #0      ;Program end
  487 00000720                 LTORG
  488 00000720         
  489 00000720         Makeidentity2                        ;when matrix is 2x2
                                                            
  490 00000720 E4923004        LDR              r3, [r2], #4 ;r3 = 11 element o
                                                            f matrix (a)
  491 00000724 E4924004        LDR              r4, [r2], #4 ;r4 = 12 element o
                                                            f matrix (b)
  492 00000728 E4925004        LDR              r5, [r2], #4 ;r5 = 21 element o
                                                            f matrix (c)
  493 0000072C E4926004        LDR              r6, [r2], #4 ;r6 = 22 element o
                                                            f matrix (d)
  494 00000730         
  495 00000730 E4813004        STR              r3, [r1], #4
  496 00000734 E4016004        STR              r6, [r1], #-4
  497 00000738 EB001828        BL               Multiplication
  498 0000073C E5907000        LDR              r7, [r0]    ;get ad
  499 00000740         
  500 00000740 E4814004        STR              r4, [r1], #4
  501 00000744 E4015004        STR              r5, [r1], #-4
  502 00000748 EB001824        BL               Multiplication
  503 0000074C E5908000        LDR              r8, [r0]    ;get bc
  504 00000750         
  505 00000750 E4817004        STR              r7, [r1], #4
  506 00000754 E4018004        STR              r8, [r1], #-4
  507 00000758 EB0017D3        BL               Subtraction
  508 0000075C E5909000        LDR              r9, [r0]    ;get ad - bc
  509 00000760         
  510 00000760 E3A0A5FE        MOV              r10, #0x3F800000
  511 00000764 E481A004        STR              r10, [r1], #4
  512 00000768 E4019004        STR              r9, [r1], #-4
  513 0000076C EB001860        BL               Division
  514 00000770 E590B000        LDR              r11, [r0]   ;get 1 / (ad - bc)
  515 00000774         
  516 00000774 E481B004        STR              r11, [r1], #4
  517 00000778 E4016004        STR              r6, [r1], #-4
  518 0000077C EB001817        BL               Multiplication ;get (1 / (ad - 
                                                            bc)) * d
  519 00000780 E5907000        LDR              r7, [r0]    ;get 11 element of 
                                                            inverse matrix
  520 00000784 E48C7004        STR              r7, [r12], #4 ;store 11 element
                                                             of inverse matrix
  521 00000788         
  522 00000788 E3A09000        MOV              r9, #0x00000000
  523 0000078C         
  524 0000078C E4819004        STR              r9, [r1], #4
  525 00000790 E4014004        STR              r4, [r1], #-4
  526 00000794 EB0017C4        BL               Subtraction
  527 00000798 E5908000        LDR              r8, [r0]    ;get -b   
  528 0000079C E481B004        STR              r11, [r1], #4
  529 000007A0 E4018004        STR              r8, [r1], #-4
  530 000007A4 EB00180D        BL               Multiplication ;get (1 / (ad - 
                                                            bc)) * (-b)



ARM Macro Assembler    Page 17 


  531 000007A8 E5907000        LDR              r7, [r0]    ;get 12 element of 
                                                            inverse matrix
  532 000007AC E48C7004        STR              r7, [r12], #4 ;store 12 element
                                                             of inverse matrix
  533 000007B0         
  534 000007B0 E4819004        STR              r9, [r1], #4
  535 000007B4 E4015004        STR              r5, [r1], #-4
  536 000007B8 EB0017BB        BL               Subtraction
  537 000007BC E5908000        LDR              r8, [r0]    ;get -c
  538 000007C0 E481B004        STR              r11, [r1], #4
  539 000007C4 E4018004        STR              r8, [r1], #-4
  540 000007C8 EB001804        BL               Multiplication ;get (1 / (ad - 
                                                            bc)) * (-c)
  541 000007CC E5907000        LDR              r7, [r0]    ;get 21 element of 
                                                            inverse matrix
  542 000007D0 E48C7004        STR              r7, [r12], #4 ;store 21 element
                                                             of inverse matrix
  543 000007D4         
  544 000007D4 E481B004        STR              r11, [r1], #4
  545 000007D8 E4013004        STR              r3, [r1], #-4
  546 000007DC EB0017FF        BL               Multiplication ;get (1 / (ad - 
                                                            bc)) * a
  547 000007E0 E5907000        LDR              r7, [r0]    ;get 22 element of 
                                                            inverse matrix
  548 000007E4 E48C7004        STR              r7, [r12], #4 ;store 22 element
                                                             of inverse matrix
  549 000007E8         
  550 000007E8 E3A0F000        MOV              pc, #0      ;Program end
  551 000007EC                 LTORG
  552 000007EC         
  553 000007EC         Makeidentity3
  554 000007EC E59FC450        LDR              r12, =Matrix_data ;r12 = addres
                                                            s of given matrix
  555 000007F0 E49C9004        LDR              r9, [r12], #4 ;get size
  556 000007F4 E3A0B205        MOV              r11, 0x50000000
  557 000007F8 E58B9000        STR              r9, [r11]   ;store size
  558 000007FC E3A0B203        MOV              r11, 0x30000000 ;r11 = address 
                                                            of first matrix
  559 00000800 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
  560 00000804 E89C01FF        LDMFD            r12, {r0 - r8}
  561 00000808 E88B01FF        STMEA            r11, {r0 - r8} ;store copy of g
                                                            iven matrix
  562 0000080C E3A005FE        MOV              r0, #0x3F800000
  563 00000810 E3A01000        MOV              r1, #0x00000000
  564 00000814 E3A02000        MOV              r2, #0x00000000
  565 00000818         
  566 00000818 E3A03000        MOV              r3, #0x00000000
  567 0000081C E3A045FE        MOV              r4, #0x3F800000
  568 00000820 E3A05000        MOV              r5, #0x00000000
  569 00000824         
  570 00000824 E3A06000        MOV              r6, #0x00000000 ;1 0 0
  571 00000828 E3A07000        MOV              r7, #0x00000000 ;0 1 0
  572 0000082C E3A085FE        MOV              r8, #0x3F800000 ;0 0 1
  573 00000830 E88A01FF        STMEA            r10, {r0 - r8} ;store identity 
                                                            matrix
  574 00000834         
  575 00000834         ;m1[i][j] = 0x30000000 + 12 * (i-1) + 4 * (j-1)
  576 00000834         ;m2[i][j] = 0x40000000 + 12 * (i-1) + 4 * (j-1)



ARM Macro Assembler    Page 18 


  577 00000834         
  578 00000834 E3A02202        MOV              r2, 0x20000000
  579 00000838 E3A03201        MOV              r3, 0x10000000
  580 0000083C         
  581 0000083C E49B000C        LDR              r0, [r11], #12 ;m1[1][1] (a)
  582 00000840 E41B100C        LDR              r1, [r11], #-12 ;m1[2][1] (d)
  583 00000844         ;compare m1[1][1] and m1[2][1]
  584 00000844 E3500000        CMP              r0, #0x00000000
  585 00000848 03A00001        MOVEQ            r0, #1      ;when a is 0
  586 0000084C 13A00000        MOVNE            r0, #0
  587 00000850 E3510000        CMP              r1, #0x00000000
  588 00000854 13A01001        MOVNE            r1, #1      ;when d is non-0
  589 00000858 03A01000        MOVEQ            r1, #0
  590 0000085C E0811000        ADD              r1, r0
  591 00000860 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
  592 00000864 03A06207        MOVEQ            r6, 0x70000000
  593 00000868 03A07000        MOVEQ            r7, #0
  594 0000086C 04867004        STREQ            r7, [r6], #4 ;store i
  595 00000870 03A0700C        MOVEQ            r7, #12
  596 00000874 04067004        STREQ            r7, [r6], #-4 ;store j
  597 00000878 0B001714        BLEQ             Eij
  598 0000087C E49B000C        LDR              r0, [r11], #12 ;(a)
  599 00000880 E41B100C        LDR              r1, [r11], #-12 ;(d)
  600 00000884         ;recompare a and d
  601 00000884 E4821004        STR              r1, [r2], #4
  602 00000888 E4020004        STR              r0, [r2], #-4
  603 0000088C EB001818        BL               Division
  604 00000890 E5934000        LDR              r4, [r3]    ;get d/a
  605 00000894 E3540102        CMP              r4, #0x80000000
  606 00000898 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
  607 0000089C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
  608 000008A0         ;get -d/a
  609 000008A0 E3A05205        MOV              r5, 0x50000000
  610 000008A4 E5859000        STR              r9, [r5]    ;store size
  611 000008A8 E3A06207        MOV              r6, 0x70000000
  612 000008AC E3A07000        MOV              r7, #0
  613 000008B0 E4867004        STR              r7, [r6], #4 ;store i
  614 000008B4 E3A0700C        MOV              r7, #12
  615 000008B8 E4867004        STR              r7, [r6], #4 ;store j
  616 000008BC E4064008        STR              r4, [r6], #-8 ;store k
  617 000008C0 EB001690        BL               Eijk
  618 000008C4         ;? ? ?
  619 000008C4         ;0 ? ?
  620 000008C4         ;? ? ?
  621 000008C4         
  622 000008C4 E49B0018        LDR              r0, [r11], #24 ;m1[1][1] (a)
  623 000008C8 E41B1018        LDR              r1, [r11], #-24 ;m1[3][1] (g)
  624 000008CC         ;compare m1[1][1] and m1[3][1]
  625 000008CC E3500000        CMP              r0, #0x00000000
  626 000008D0 03A00001        MOVEQ            r0, #1      ;when a is 0
  627 000008D4 13A00000        MOVNE            r0, #0
  628 000008D8 E3510000        CMP              r1, #0x00000000
  629 000008DC 13A01001        MOVNE            r1, #1      ;when d is non-0
  630 000008E0 03A01000        MOVEQ            r1, #0
  631 000008E4 E0811000        ADD              r1, r0
  632 000008E8 E3510002        CMP              r1, #2      ;when a is 0 and d 



ARM Macro Assembler    Page 19 


                                                            is non-0
  633 000008EC 03A06207        MOVEQ            r6, 0x70000000
  634 000008F0 03A07000        MOVEQ            r7, #0
  635 000008F4 04867004        STREQ            r7, [r6], #4 ;store i
  636 000008F8 03A07018        MOVEQ            r7, #24
  637 000008FC 04067004        STREQ            r7, [r6], #-4 ;store j
  638 00000900 0B0016F2        BLEQ             Eij
  639 00000904 E49B0018        LDR              r0, [r11], #24 ;(a)
  640 00000908 E41B1018        LDR              r1, [r11], #-24 ;(d)
  641 0000090C         ;recompare a and d
  642 0000090C E4821004        STR              r1, [r2], #4
  643 00000910 E4020004        STR              r0, [r2], #-4
  644 00000914 EB0017F6        BL               Division
  645 00000918 E5934000        LDR              r4, [r3]    ;get g/a
  646 0000091C E3540102        CMP              r4, #0x80000000
  647 00000920 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
  648 00000924 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
  649 00000928         ;get -g/a
  650 00000928 E3A05205        MOV              r5, 0x50000000
  651 0000092C E5859000        STR              r9, [r5]    ;store size
  652 00000930 E3A06207        MOV              r6, 0x70000000
  653 00000934 E3A07000        MOV              r7, #0
  654 00000938 E4867004        STR              r7, [r6], #4 ;store i
  655 0000093C E3A07018        MOV              r7, #24
  656 00000940 E4867004        STR              r7, [r6], #4 ;store j
  657 00000944 E4064008        STR              r4, [r6], #-8 ;store k
  658 00000948 EB00166E        BL               Eijk
  659 0000094C         ;? ? ?
  660 0000094C         ;0 ? ?
  661 0000094C         ;0 ? ?
  662 0000094C         
  663 0000094C E28BB010        ADD              r11, #16
  664 00000950 E49B000C        LDR              r0, [r11], #12 ;m1[2][2] (e)
  665 00000954 E41B101C        LDR              r1, [r11], #-28 ;m1[3][2] (h)
  666 00000958         ;compare m1[2][2] and m1[3][2]
  667 00000958 E3500000        CMP              r0, #0x00000000
  668 0000095C 03A00001        MOVEQ            r0, #1      ;when a is 0
  669 00000960 13A00000        MOVNE            r0, #0
  670 00000964 E3510000        CMP              r1, #0x00000000
  671 00000968 13A01001        MOVNE            r1, #1      ;when d is non-0
  672 0000096C 03A01000        MOVEQ            r1, #0
  673 00000970 E0811000        ADD              r1, r0
  674 00000974 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
  675 00000978 03A06207        MOVEQ            r6, 0x70000000
  676 0000097C 03A0700C        MOVEQ            r7, #12
  677 00000980 04867004        STREQ            r7, [r6], #4 ;store i
  678 00000984 03A07018        MOVEQ            r7, #24
  679 00000988 04067004        STREQ            r7, [r6], #-4 ;store j
  680 0000098C 0B0016CF        BLEQ             Eij
  681 00000990 E28BB010        ADD              r11, #16
  682 00000994 E49B000C        LDR              r0, [r11], #12 ;(a)
  683 00000998 E41B101C        LDR              r1, [r11], #-28 ;(d)
  684 0000099C         ;recompare a and d
  685 0000099C E4821004        STR              r1, [r2], #4
  686 000009A0 E4020004        STR              r0, [r2], #-4
  687 000009A4 EB0017D2        BL               Division



ARM Macro Assembler    Page 20 


  688 000009A8 E5934000        LDR              r4, [r3]    ;get h/e
  689 000009AC E3540102        CMP              r4, #0x80000000
  690 000009B0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
  691 000009B4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
  692 000009B8         ;get -h/e
  693 000009B8 E3A05205        MOV              r5, 0x50000000
  694 000009BC E5859000        STR              r9, [r5]    ;store size
  695 000009C0 E3A06207        MOV              r6, 0x70000000
  696 000009C4 E3A0700C        MOV              r7, #12
  697 000009C8 E4867004        STR              r7, [r6], #4 ;store i
  698 000009CC E3A07018        MOV              r7, #24
  699 000009D0 E4867004        STR              r7, [r6], #4 ;store j
  700 000009D4 E4064008        STR              r4, [r6], #-8 ;store k
  701 000009D8 EB00164A        BL               Eijk
  702 000009DC         ;? ? ?
  703 000009DC         ;0 ? ?
  704 000009DC         ;0 0 ?
  705 000009DC         ;now, given matrix -> upper matrix
  706 000009DC         
  707 000009DC E28BB020        ADD              r11, #32
  708 000009E0 E41B000C        LDR              r0, [r11], #-12 ;m1[3][3] (i)
  709 000009E4 E41B1014        LDR              r1, [r11], #-20 ;m1[2][3] (f)
  710 000009E8         ;compare m1[3][3] and m1[2][3]
  711 000009E8 E3500000        CMP              r0, #0x00000000
  712 000009EC 03A00001        MOVEQ            r0, #1      ;when a is 0
  713 000009F0 13A00000        MOVNE            r0, #0
  714 000009F4 E3510000        CMP              r1, #0x00000000
  715 000009F8 13A01001        MOVNE            r1, #1      ;when d is non-0
  716 000009FC 03A01000        MOVEQ            r1, #0
  717 00000A00 E0811000        ADD              r1, r0
  718 00000A04 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
  719 00000A08 03A06207        MOVEQ            r6, 0x70000000
  720 00000A0C 03A07018        MOVEQ            r7, #24
  721 00000A10 04867004        STREQ            r7, [r6], #4 ;store i
  722 00000A14 03A0700C        MOVEQ            r7, #12
  723 00000A18 04067004        STREQ            r7, [r6], #-4 ;store j
  724 00000A1C 0B0016AB        BLEQ             Eij
  725 00000A20 E28BB020        ADD              r11, #32
  726 00000A24 E41B000C        LDR              r0, [r11], #-12 ;(a)
  727 00000A28 E41B1014        LDR              r1, [r11], #-20 ;(d)
  728 00000A2C         ;recompare a and d
  729 00000A2C E4821004        STR              r1, [r2], #4
  730 00000A30 E4020004        STR              r0, [r2], #-4
  731 00000A34 EB0017AE        BL               Division
  732 00000A38 E5934000        LDR              r4, [r3]    ;get f/i
  733 00000A3C E3540102        CMP              r4, #0x80000000
  734 00000A40 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
  735 00000A44 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
  736 00000A48         ;get -f/i
  737 00000A48 E3A05205        MOV              r5, 0x50000000
  738 00000A4C E5859000        STR              r9, [r5]    ;store size
  739 00000A50 E3A06207        MOV              r6, 0x70000000
  740 00000A54 E3A07018        MOV              r7, #24
  741 00000A58 E4867004        STR              r7, [r6], #4 ;store i



ARM Macro Assembler    Page 21 


  742 00000A5C E3A0700C        MOV              r7, #12
  743 00000A60 E4867004        STR              r7, [r6], #4 ;store j
  744 00000A64 E4064008        STR              r4, [r6], #-8 ;store k
  745 00000A68 EB001626        BL               Eijk
  746 00000A6C         ;? ? ?
  747 00000A6C         ;0 ? 0
  748 00000A6C         ;0 0 ?
  749 00000A6C         
  750 00000A6C E28BB020        ADD              r11, #32
  751 00000A70 E41B0018        LDR              r0, [r11], #-24 ;m1[3][3] (i)
  752 00000A74 E41B1008        LDR              r1, [r11], #-8 ;m1[1][3] (c)
  753 00000A78         ;compare m1[3][3] and m1[1][3]
  754 00000A78 E3500000        CMP              r0, #0x00000000
  755 00000A7C 03A00001        MOVEQ            r0, #1      ;when a is 0
  756 00000A80 13A00000        MOVNE            r0, #0
  757 00000A84 E3510000        CMP              r1, #0x00000000
  758 00000A88 13A01001        MOVNE            r1, #1      ;when d is non-0
  759 00000A8C 03A01000        MOVEQ            r1, #0
  760 00000A90 E0811000        ADD              r1, r0
  761 00000A94 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
  762 00000A98 03A06207        MOVEQ            r6, 0x70000000
  763 00000A9C 03A07018        MOVEQ            r7, #24
  764 00000AA0 04867004        STREQ            r7, [r6], #4 ;store i
  765 00000AA4 03A07000        MOVEQ            r7, #0
  766 00000AA8 04067004        STREQ            r7, [r6], #-4 ;store j
  767 00000AAC 0B001687        BLEQ             Eij
  768 00000AB0 E28BB020        ADD              r11, #32
  769 00000AB4 E41B0018        LDR              r0, [r11], #-24 ;(a)
  770 00000AB8 E41B1008        LDR              r1, [r11], #-8 ;(d)
  771 00000ABC         ;recompare a and d
  772 00000ABC E4821004        STR              r1, [r2], #4
  773 00000AC0 E4020004        STR              r0, [r2], #-4
  774 00000AC4 EB00178A        BL               Division
  775 00000AC8 E5934000        LDR              r4, [r3]    ;get c/i
  776 00000ACC E3540102        CMP              r4, #0x80000000
  777 00000AD0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
  778 00000AD4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
  779 00000AD8         ;get -c/i
  780 00000AD8 E3A05205        MOV              r5, 0x50000000
  781 00000ADC E5859000        STR              r9, [r5]    ;store size
  782 00000AE0 E3A06207        MOV              r6, 0x70000000
  783 00000AE4 E3A07018        MOV              r7, #24
  784 00000AE8 E4867004        STR              r7, [r6], #4 ;store i
  785 00000AEC E3A07000        MOV              r7, #0
  786 00000AF0 E4867004        STR              r7, [r6], #4 ;store j
  787 00000AF4 E4064008        STR              r4, [r6], #-8 ;store k
  788 00000AF8 EB001602        BL               Eijk
  789 00000AFC         ;? ? 0
  790 00000AFC         ;0 ? 0
  791 00000AFC         ;0 0 ?
  792 00000AFC         
  793 00000AFC E28BB010        ADD              r11, #16
  794 00000B00 E41B000C        LDR              r0, [r11], #-12 ;m1[2][2] (e)
  795 00000B04 E41B1004        LDR              r1, [r11], #-4 ;m1[1][2] (b)
  796 00000B08         ;compare m1[2][2] and m1[1][2]
  797 00000B08 E3500000        CMP              r0, #0x00000000



ARM Macro Assembler    Page 22 


  798 00000B0C 03A00001        MOVEQ            r0, #1      ;when a is 0
  799 00000B10 13A00000        MOVNE            r0, #0
  800 00000B14 E3510000        CMP              r1, #0x00000000
  801 00000B18 13A01001        MOVNE            r1, #1      ;when d is non-0
  802 00000B1C 03A01000        MOVEQ            r1, #0
  803 00000B20 E0811000        ADD              r1, r0
  804 00000B24 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
  805 00000B28 03A06207        MOVEQ            r6, 0x70000000
  806 00000B2C 03A0700C        MOVEQ            r7, #12
  807 00000B30 04867004        STREQ            r7, [r6], #4 ;store i
  808 00000B34 03A07000        MOVEQ            r7, #0
  809 00000B38 04067004        STREQ            r7, [r6], #-4 ;store j
  810 00000B3C 0B001663        BLEQ             Eij
  811 00000B40 E28BB010        ADD              r11, #16
  812 00000B44 E41B000C        LDR              r0, [r11], #-12 ;(a)
  813 00000B48 E41B1004        LDR              r1, [r11], #-4 ;(d)
  814 00000B4C         ;recompare a and d
  815 00000B4C E4821004        STR              r1, [r2], #4
  816 00000B50 E4020004        STR              r0, [r2], #-4
  817 00000B54 EB001766        BL               Division
  818 00000B58 E5934000        LDR              r4, [r3]    ;get b/e
  819 00000B5C E3540102        CMP              r4, #0x80000000
  820 00000B60 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
  821 00000B64 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
  822 00000B68         ;get -b/e
  823 00000B68 E3A05205        MOV              r5, 0x50000000
  824 00000B6C E5859000        STR              r9, [r5]    ;store size
  825 00000B70 E3A06207        MOV              r6, 0x70000000
  826 00000B74 E3A0700C        MOV              r7, #12
  827 00000B78 E4867004        STR              r7, [r6], #4 ;store i
  828 00000B7C E3A07000        MOV              r7, #0
  829 00000B80 E4867004        STR              r7, [r6], #4 ;store j
  830 00000B84 E4064008        STR              r4, [r6], #-8 ;store k
  831 00000B88 EB0015DE        BL               Eijk
  832 00000B8C         ;? 0 0
  833 00000B8C         ;0 ? 0
  834 00000B8C         ;0 0 ?
  835 00000B8C         
  836 00000B8C E28BB000        ADD              r11, #0
  837 00000B90 E59B0000        LDR              r0, [r11]   ;m1[1][1]
  838 00000B94 E3A015FE        MOV              r1, #0x3F800000
  839 00000B98 E4821004        STR              r1, [r2], #4
  840 00000B9C E4020004        STR              r0, [r2], #-4
  841 00000BA0 EB001753        BL               Division
  842 00000BA4 E5934000        LDR              r4, [r3]    ;get 1/a
  843 00000BA8 E3A05205        MOV              r5, 0x50000000
  844 00000BAC E5859000        STR              r9, [r5]    ;store size
  845 00000BB0 E3A06207        MOV              r6, 0x70000000
  846 00000BB4 E3A07000        MOV              r7, #0
  847 00000BB8 E4867004        STR              r7, [r6], #4 ;store i
  848 00000BBC E1A07000        MOV              r7, r0
  849 00000BC0 E4064004        STR              r4, [r6], #-4 ;store k
  850 00000BC4 EB00160F        BL               Eik
  851 00000BC8         ;1 0 0
  852 00000BC8         ;0 ? 0
  853 00000BC8         ;0 0 ?



ARM Macro Assembler    Page 23 


  854 00000BC8         
  855 00000BC8 E28BB010        ADD              r11, #16
  856 00000BCC E41B0010        LDR              r0, [r11], #-16 ;m1[2][2]
  857 00000BD0 E3A015FE        MOV              r1, #0x3F800000
  858 00000BD4 E4821004        STR              r1, [r2], #4
  859 00000BD8 E4020004        STR              r0, [r2], #-4
  860 00000BDC EB001744        BL               Division
  861 00000BE0 E5934000        LDR              r4, [r3]    ;get 1/e
  862 00000BE4 E3A05205        MOV              r5, 0x50000000
  863 00000BE8 E5859000        STR              r9, [r5]    ;store size
  864 00000BEC E3A06207        MOV              r6, 0x70000000
  865 00000BF0 E3A0700C        MOV              r7, #12
  866 00000BF4 E4867004        STR              r7, [r6], #4 ;store i
  867 00000BF8 E1A07000        MOV              r7, r0
  868 00000BFC E4064004        STR              r4, [r6], #-4 ;store k
  869 00000C00 EB001600        BL               Eik
  870 00000C04         ;1 0 0
  871 00000C04         ;0 1 0
  872 00000C04         ;0 0 ?
  873 00000C04         
  874 00000C04 E28BB020        ADD              r11, #32
  875 00000C08 E41B0020        LDR              r0, [r11], #-32 ;m1[3][3]
  876 00000C0C E3A015FE        MOV              r1, #0x3F800000
  877 00000C10 E4821004        STR              r1, [r2], #4
  878 00000C14 E4020004        STR              r0, [r2], #-4
  879 00000C18 EB001735        BL               Division
  880 00000C1C E5934000        LDR              r4, [r3]    ;get 1/i
  881 00000C20 E3A05205        MOV              r5, 0x50000000
  882 00000C24 E5859000        STR              r9, [r5]    ;store size
  883 00000C28 E3A06207        MOV              r6, 0x70000000
  884 00000C2C E3A07018        MOV              r7, #24
  885 00000C30 E4867004        STR              r7, [r6], #4 ;store i
  886 00000C34 E1A07000        MOV              r7, r0
  887 00000C38 E4064004        STR              r4, [r6], #-4 ;store k
  888 00000C3C EB0015F1        BL               Eik
  889 00000C40         ;1 0 0
  890 00000C40         ;0 1 0
  891 00000C40         ;0 0 1
  892 00000C40         ;now upper triangle -> identity matrix
  893 00000C40         
  894 00000C40 E3A0F000        MOV              pc, #0      ;Program end
  895 00000C44 00000000        LTORG
  896 00000C48         
  897 00000C48         Makeidentity4
  898 00000C48 E51FC00C        LDR              r12, =Matrix_data ;r12 = addres
                                                            s of given matrix
  899 00000C4C E49C9004        LDR              r9, [r12], #4 ;get size
  900 00000C50 E3A0B205        MOV              r11, 0x50000000
  901 00000C54 E58B9000        STR              r9, [r11]   ;store size
  902 00000C58 E3A0B203        MOV              r11, 0x30000000 ;r11 = address 
                                                            of first matrix
  903 00000C5C E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
  904 00000C60 E89C000F        LDMFD            r12, {r0 - r3}
  905 00000C64 E28CC010        ADD              r12, #16
  906 00000C68 E88B000F        STMEA            r11, {r0 - r3}
  907 00000C6C E28BB010        ADD              r11, #16
  908 00000C70 E89C000F        LDMFD            r12, {r0 - r3}
  909 00000C74 E28CC010        ADD              r12, #16



ARM Macro Assembler    Page 24 


  910 00000C78 E88B000F        STMEA            r11, {r0 - r3}
  911 00000C7C E28BB010        ADD              r11, #16
  912 00000C80 E89C000F        LDMFD            r12, {r0 - r3}
  913 00000C84 E28CC010        ADD              r12, #16
  914 00000C88 E88B000F        STMEA            r11, {r0 - r3}
  915 00000C8C E28BB010        ADD              r11, #16
  916 00000C90 E89C000F        LDMFD            r12, {r0 - r3}
  917 00000C94 E24CC030        SUB              r12, #48
  918 00000C98 E88B000F        STMEA            r11, {r0 - r3}
  919 00000C9C E24BB030        SUB              r11, #48
  920 00000CA0         ;store copy of given matrix
  921 00000CA0 E3A005FE        MOV              r0, #0x3F800000
  922 00000CA4 E3A01000        MOV              r1, #0x00000000
  923 00000CA8 E3A02000        MOV              r2, #0x00000000
  924 00000CAC E3A03000        MOV              r3, #0x00000000
  925 00000CB0 E88A000F        STMEA            r10, {r0 - r3} ;store identity 
                                                            matrix
  926 00000CB4 E3A00000        MOV              r0, #0x00000000
  927 00000CB8 E3A015FE        MOV              r1, #0x3F800000
  928 00000CBC E3A02000        MOV              r2, #0x00000000
  929 00000CC0 E3A03000        MOV              r3, #0x00000000
  930 00000CC4 E28AA010        ADD              r10, #16
  931 00000CC8 E88A000F        STMEA            r10, {r0 - r3} ;store identity 
                                                            matrix
  932 00000CCC E3A00000        MOV              r0, #0x00000000
  933 00000CD0 E3A01000        MOV              r1, #0x00000000
  934 00000CD4 E3A025FE        MOV              r2, #0x3F800000
  935 00000CD8 E3A03000        MOV              r3, #0x00000000
  936 00000CDC E28AA010        ADD              r10, #16
  937 00000CE0 E88A000F        STMEA            r10, {r0 - r3} ;store identity 
                                                            matrix
  938 00000CE4 E3A00000        MOV              r0, #0x00000000
  939 00000CE8 E3A01000        MOV              r1, #0x00000000
  940 00000CEC E3A02000        MOV              r2, #0x00000000
  941 00000CF0 E3A035FE        MOV              r3, #0x3F800000
  942 00000CF4 E28AA010        ADD              r10, #16
  943 00000CF8 E88A000F        STMEA            r10, {r0 - r3} ;store identity 
                                                            matrix
  944 00000CFC E24AA030        SUB              r10, #48
  945 00000D00         ;m1[i][j] = 0x30000000 + 12 * (i-1) + 4 * (j-1)
  946 00000D00         ;m2[i][j] = 0x40000000 + 12 * (i-1) + 4 * (j-1)
  947 00000D00         
  948 00000D00 E3A02202        MOV              r2, 0x20000000
  949 00000D04 E3A03201        MOV              r3, 0x10000000
  950 00000D08         
  951 00000D08 E28BB000        ADD              r11, #0
  952 00000D0C E49B0010        LDR              r0, [r11], #16 ;(a)
  953 00000D10 E41B1010        LDR              r1, [r11], #-16 ;(d)
  954 00000D14         ;compare a and d
  955 00000D14 E3500000        CMP              r0, #0x00000000
  956 00000D18 03A00001        MOVEQ            r0, #1      ;when a is 0
  957 00000D1C 13A00000        MOVNE            r0, #0
  958 00000D20 E3510000        CMP              r1, #0x00000000
  959 00000D24 13A01001        MOVNE            r1, #1      ;when d is non-0
  960 00000D28 03A01000        MOVEQ            r1, #0
  961 00000D2C E0811000        ADD              r1, r0
  962 00000D30 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
  963 00000D34 03A06207        MOVEQ            r6, 0x70000000



ARM Macro Assembler    Page 25 


  964 00000D38 03A07000        MOVEQ            r7, #0
  965 00000D3C 04867004        STREQ            r7, [r6], #4 ;store i
  966 00000D40 03A07010        MOVEQ            r7, #16
  967 00000D44 04067004        STREQ            r7, [r6], #-4 ;store j
  968 00000D48 0B0015E0        BLEQ             Eij
  969 00000D4C E49B0010        LDR              r0, [r11], #16 ;(a)
  970 00000D50 E41B1010        LDR              r1, [r11], #-16 ;(d)
  971 00000D54         ;recompare a and d
  972 00000D54 E4821004        STR              r1, [r2], #4
  973 00000D58 E4020004        STR              r0, [r2], #-4
  974 00000D5C EB0016E4        BL               Division
  975 00000D60 E5934000        LDR              r4, [r3]    ;get d/a
  976 00000D64 E3540102        CMP              r4, #0x80000000
  977 00000D68 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
  978 00000D6C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
  979 00000D70         ;get -d/a
  980 00000D70 E3A05205        MOV              r5, 0x50000000
  981 00000D74 E5859000        STR              r9, [r5]    ;store size
  982 00000D78 E3A06207        MOV              r6, 0x70000000
  983 00000D7C E3A07000        MOV              r7, #0
  984 00000D80 E4867004        STR              r7, [r6], #4 ;store i
  985 00000D84 E3A07010        MOV              r7, #16
  986 00000D88 E4867004        STR              r7, [r6], #4 ;store j
  987 00000D8C E4064008        STR              r4, [r6], #-8 ;store k
  988 00000D90 EB00155C        BL               Eijk
  989 00000D94         ;1
  990 00000D94         
  991 00000D94 E28BB000        ADD              r11, #0
  992 00000D98 E49B0020        LDR              r0, [r11], #32 ;(a)
  993 00000D9C E41B1020        LDR              r1, [r11], #-32 ;(d)
  994 00000DA0         ;compare a and d
  995 00000DA0 E3500000        CMP              r0, #0x00000000
  996 00000DA4 03A00001        MOVEQ            r0, #1      ;when a is 0
  997 00000DA8 13A00000        MOVNE            r0, #0
  998 00000DAC E3510000        CMP              r1, #0x00000000
  999 00000DB0 13A01001        MOVNE            r1, #1      ;when d is non-0
 1000 00000DB4 03A01000        MOVEQ            r1, #0
 1001 00000DB8 E0811000        ADD              r1, r0
 1002 00000DBC E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1003 00000DC0 03A06207        MOVEQ            r6, 0x70000000
 1004 00000DC4 03A07000        MOVEQ            r7, #0
 1005 00000DC8 04867004        STREQ            r7, [r6], #4 ;store i
 1006 00000DCC 03A07020        MOVEQ            r7, #32
 1007 00000DD0 04067004        STREQ            r7, [r6], #-4 ;store j
 1008 00000DD4 0B0015BD        BLEQ             Eij
 1009 00000DD8 E49B0020        LDR              r0, [r11], #32 ;(a)
 1010 00000DDC E41B1020        LDR              r1, [r11], #-32 ;(d)
 1011 00000DE0         ;recompare a and d
 1012 00000DE0 E4821004        STR              r1, [r2], #4
 1013 00000DE4 E4020004        STR              r0, [r2], #-4
 1014 00000DE8 EB0016C1        BL               Division
 1015 00000DEC E5934000        LDR              r4, [r3]    ;get d/a
 1016 00000DF0 E3540102        CMP              r4, #0x80000000
 1017 00000DF4 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1018 00000DF8 B2844102        ADDLT            r4, #0x80000000 ;positive to ne



ARM Macro Assembler    Page 26 


                                                            gative
 1019 00000DFC         ;get -d/a
 1020 00000DFC E3A05205        MOV              r5, 0x50000000
 1021 00000E00 E5859000        STR              r9, [r5]    ;store size
 1022 00000E04 E3A06207        MOV              r6, 0x70000000
 1023 00000E08 E3A07000        MOV              r7, #0
 1024 00000E0C E4867004        STR              r7, [r6], #4 ;store i
 1025 00000E10 E3A07020        MOV              r7, #32
 1026 00000E14 E4867004        STR              r7, [r6], #4 ;store j
 1027 00000E18 E4064008        STR              r4, [r6], #-8 ;store k
 1028 00000E1C EB001539        BL               Eijk
 1029 00000E20         ;2
 1030 00000E20         
 1031 00000E20 E28BB000        ADD              r11, #0
 1032 00000E24 E49B0030        LDR              r0, [r11], #48 ;(a)
 1033 00000E28 E41B1030        LDR              r1, [r11], #-48 ;(d)
 1034 00000E2C         ;compare a and d
 1035 00000E2C E3500000        CMP              r0, #0x00000000
 1036 00000E30 03A00001        MOVEQ            r0, #1      ;when a is 0
 1037 00000E34 13A00000        MOVNE            r0, #0
 1038 00000E38 E3510000        CMP              r1, #0x00000000
 1039 00000E3C 13A01001        MOVNE            r1, #1      ;when d is non-0
 1040 00000E40 03A01000        MOVEQ            r1, #0
 1041 00000E44 E0811000        ADD              r1, r0
 1042 00000E48 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1043 00000E4C 03A06207        MOVEQ            r6, 0x70000000
 1044 00000E50 03A07000        MOVEQ            r7, #0
 1045 00000E54 04867004        STREQ            r7, [r6], #4 ;store i
 1046 00000E58 03A07030        MOVEQ            r7, #48
 1047 00000E5C 04067004        STREQ            r7, [r6], #-4 ;store j
 1048 00000E60 0B00159A        BLEQ             Eij
 1049 00000E64 E49B0030        LDR              r0, [r11], #48 ;(a)
 1050 00000E68 E41B1030        LDR              r1, [r11], #-48 ;(d)
 1051 00000E6C         ;recompare a and d
 1052 00000E6C E4821004        STR              r1, [r2], #4
 1053 00000E70 E4020004        STR              r0, [r2], #-4
 1054 00000E74 EB00169E        BL               Division
 1055 00000E78 E5934000        LDR              r4, [r3]    ;get d/a
 1056 00000E7C E3540102        CMP              r4, #0x80000000
 1057 00000E80 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1058 00000E84 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1059 00000E88         ;get -d/a
 1060 00000E88 E3A05205        MOV              r5, 0x50000000
 1061 00000E8C E5859000        STR              r9, [r5]    ;store size
 1062 00000E90 E3A06207        MOV              r6, 0x70000000
 1063 00000E94 E3A07000        MOV              r7, #0
 1064 00000E98 E4867004        STR              r7, [r6], #4 ;store i
 1065 00000E9C E3A07030        MOV              r7, #48
 1066 00000EA0 E4867004        STR              r7, [r6], #4 ;store j
 1067 00000EA4 E4064008        STR              r4, [r6], #-8 ;store k
 1068 00000EA8 EB001516        BL               Eijk
 1069 00000EAC         ;3
 1070 00000EAC         
 1071 00000EAC E28BB014        ADD              r11, #20
 1072 00000EB0 E49B0010        LDR              r0, [r11], #16 ;(a)
 1073 00000EB4 E41B1024        LDR              r1, [r11], #-36 ;(d)



ARM Macro Assembler    Page 27 


 1074 00000EB8         ;compare a and d
 1075 00000EB8 E3500000        CMP              r0, #0x00000000
 1076 00000EBC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1077 00000EC0 13A00000        MOVNE            r0, #0
 1078 00000EC4 E3510000        CMP              r1, #0x00000000
 1079 00000EC8 13A01001        MOVNE            r1, #1      ;when d is non-0
 1080 00000ECC 03A01000        MOVEQ            r1, #0
 1081 00000ED0 E0811000        ADD              r1, r0
 1082 00000ED4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1083 00000ED8 03A06207        MOVEQ            r6, 0x70000000
 1084 00000EDC 03A07010        MOVEQ            r7, #16
 1085 00000EE0 04867004        STREQ            r7, [r6], #4 ;store i
 1086 00000EE4 03A07020        MOVEQ            r7, #32
 1087 00000EE8 04067004        STREQ            r7, [r6], #-4 ;store j
 1088 00000EEC 0B001577        BLEQ             Eij
 1089 00000EF0 E28BB014        ADD              r11, #20
 1090 00000EF4 E49B0010        LDR              r0, [r11], #16 ;(a)
 1091 00000EF8 E41B1024        LDR              r1, [r11], #-36 ;(d)
 1092 00000EFC         ;recompare a and d
 1093 00000EFC E4821004        STR              r1, [r2], #4
 1094 00000F00 E4020004        STR              r0, [r2], #-4
 1095 00000F04 EB00167A        BL               Division
 1096 00000F08 E5934000        LDR              r4, [r3]    ;get d/a
 1097 00000F0C E3540102        CMP              r4, #0x80000000
 1098 00000F10 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1099 00000F14 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1100 00000F18         ;get -d/a
 1101 00000F18 E3A05205        MOV              r5, 0x50000000
 1102 00000F1C E5859000        STR              r9, [r5]    ;store size
 1103 00000F20 E3A06207        MOV              r6, 0x70000000
 1104 00000F24 E3A07010        MOV              r7, #16
 1105 00000F28 E4867004        STR              r7, [r6], #4 ;store i
 1106 00000F2C E3A07020        MOV              r7, #32
 1107 00000F30 E4867004        STR              r7, [r6], #4 ;store j
 1108 00000F34 E4064008        STR              r4, [r6], #-8 ;store k
 1109 00000F38 EB0014F2        BL               Eijk
 1110 00000F3C         ;4
 1111 00000F3C         
 1112 00000F3C E28BB014        ADD              r11, #20
 1113 00000F40 E49B0020        LDR              r0, [r11], #32 ;(a)
 1114 00000F44 E41B1034        LDR              r1, [r11], #-52 ;(d)
 1115 00000F48         ;compare a and d
 1116 00000F48 E3500000        CMP              r0, #0x00000000
 1117 00000F4C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1118 00000F50 13A00000        MOVNE            r0, #0
 1119 00000F54 E3510000        CMP              r1, #0x00000000
 1120 00000F58 13A01001        MOVNE            r1, #1      ;when d is non-0
 1121 00000F5C 03A01000        MOVEQ            r1, #0
 1122 00000F60 E0811000        ADD              r1, r0
 1123 00000F64 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1124 00000F68 03A06207        MOVEQ            r6, 0x70000000
 1125 00000F6C 03A07010        MOVEQ            r7, #16
 1126 00000F70 04867004        STREQ            r7, [r6], #4 ;store i
 1127 00000F74 03A07030        MOVEQ            r7, #48
 1128 00000F78 04067004        STREQ            r7, [r6], #-4 ;store j



ARM Macro Assembler    Page 28 


 1129 00000F7C 0B001553        BLEQ             Eij
 1130 00000F80 E28BB014        ADD              r11, #20
 1131 00000F84 E49B0020        LDR              r0, [r11], #32 ;(a)
 1132 00000F88 E41B1034        LDR              r1, [r11], #-52 ;(d)
 1133 00000F8C         ;recompare a and d
 1134 00000F8C E4821004        STR              r1, [r2], #4
 1135 00000F90 E4020004        STR              r0, [r2], #-4
 1136 00000F94 EB001656        BL               Division
 1137 00000F98 E5934000        LDR              r4, [r3]    ;get d/a
 1138 00000F9C E3540102        CMP              r4, #0x80000000
 1139 00000FA0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1140 00000FA4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1141 00000FA8         ;get -d/a
 1142 00000FA8 E3A05205        MOV              r5, 0x50000000
 1143 00000FAC E5859000        STR              r9, [r5]    ;store size
 1144 00000FB0 E3A06207        MOV              r6, 0x70000000
 1145 00000FB4 E3A07010        MOV              r7, #16
 1146 00000FB8 E4867004        STR              r7, [r6], #4 ;store i
 1147 00000FBC E3A07030        MOV              r7, #48
 1148 00000FC0 E4867004        STR              r7, [r6], #4 ;store j
 1149 00000FC4 E4064008        STR              r4, [r6], #-8 ;store k
 1150 00000FC8 EB0014CE        BL               Eijk
 1151 00000FCC         ;5
 1152 00000FCC         
 1153 00000FCC E28BB028        ADD              r11, #40
 1154 00000FD0 E49B0010        LDR              r0, [r11], #16 ;(a)
 1155 00000FD4 E41B1038        LDR              r1, [r11], #-56 ;(d)
 1156 00000FD8         ;compare a and d
 1157 00000FD8 E3500000        CMP              r0, #0x00000000
 1158 00000FDC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1159 00000FE0 13A00000        MOVNE            r0, #0
 1160 00000FE4 E3510000        CMP              r1, #0x00000000
 1161 00000FE8 13A01001        MOVNE            r1, #1      ;when d is non-0
 1162 00000FEC 03A01000        MOVEQ            r1, #0
 1163 00000FF0 E0811000        ADD              r1, r0
 1164 00000FF4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1165 00000FF8 03A06207        MOVEQ            r6, 0x70000000
 1166 00000FFC 03A07020        MOVEQ            r7, #32
 1167 00001000 04867004        STREQ            r7, [r6], #4 ;store i
 1168 00001004 03A07030        MOVEQ            r7, #48
 1169 00001008 04067004        STREQ            r7, [r6], #-4 ;store j
 1170 0000100C 0B00152F        BLEQ             Eij
 1171 00001010 E28BB028        ADD              r11, #40
 1172 00001014 E49B0010        LDR              r0, [r11], #16 ;(a)
 1173 00001018 E41B1038        LDR              r1, [r11], #-56 ;(d)
 1174 0000101C         ;recompare a and d
 1175 0000101C E4821004        STR              r1, [r2], #4
 1176 00001020 E4020004        STR              r0, [r2], #-4
 1177 00001024 EB001632        BL               Division
 1178 00001028 E5934000        LDR              r4, [r3]    ;get d/a
 1179 0000102C E3540102        CMP              r4, #0x80000000
 1180 00001030 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1181 00001034 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1182 00001038         ;get -d/a



ARM Macro Assembler    Page 29 


 1183 00001038 E3A05205        MOV              r5, 0x50000000
 1184 0000103C E5859000        STR              r9, [r5]    ;store size
 1185 00001040 E3A06207        MOV              r6, 0x70000000
 1186 00001044 E3A07020        MOV              r7, #32
 1187 00001048 E4867004        STR              r7, [r6], #4 ;store i
 1188 0000104C E3A07030        MOV              r7, #48
 1189 00001050 E4867004        STR              r7, [r6], #4 ;store j
 1190 00001054 E4064008        STR              r4, [r6], #-8 ;store k
 1191 00001058 EB0014AA        BL               Eijk
 1192 0000105C         ;6
 1193 0000105C         
 1194 0000105C E28BB03C        ADD              r11, #60
 1195 00001060 E41B0010        LDR              r0, [r11], #-16 ;(a)
 1196 00001064 E41B102C        LDR              r1, [r11], #-44 ;(d)
 1197 00001068         ;compare a and d
 1198 00001068 E3500000        CMP              r0, #0x00000000
 1199 0000106C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1200 00001070 13A00000        MOVNE            r0, #0
 1201 00001074 E3510000        CMP              r1, #0x00000000
 1202 00001078 13A01001        MOVNE            r1, #1      ;when d is non-0
 1203 0000107C 03A01000        MOVEQ            r1, #0
 1204 00001080 E0811000        ADD              r1, r0
 1205 00001084 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1206 00001088 03A06207        MOVEQ            r6, 0x70000000
 1207 0000108C 03A07030        MOVEQ            r7, #48
 1208 00001090 04867004        STREQ            r7, [r6], #4 ;store i
 1209 00001094 03A07020        MOVEQ            r7, #32
 1210 00001098 04067004        STREQ            r7, [r6], #-4 ;store j
 1211 0000109C 0B00150B        BLEQ             Eij
 1212 000010A0 E28BB03C        ADD              r11, #60
 1213 000010A4 E41B0010        LDR              r0, [r11], #-16 ;(a)
 1214 000010A8 E41B102C        LDR              r1, [r11], #-44 ;(d)
 1215 000010AC         ;recompare a and d
 1216 000010AC E4821004        STR              r1, [r2], #4
 1217 000010B0 E4020004        STR              r0, [r2], #-4
 1218 000010B4 EB00160E        BL               Division
 1219 000010B8 E5934000        LDR              r4, [r3]    ;get d/a
 1220 000010BC E3540102        CMP              r4, #0x80000000
 1221 000010C0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1222 000010C4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1223 000010C8         ;get -d/a
 1224 000010C8 E3A05205        MOV              r5, 0x50000000
 1225 000010CC E5859000        STR              r9, [r5]    ;store size
 1226 000010D0 E3A06207        MOV              r6, 0x70000000
 1227 000010D4 E3A07030        MOV              r7, #48
 1228 000010D8 E4867004        STR              r7, [r6], #4 ;store i
 1229 000010DC E3A07020        MOV              r7, #32
 1230 000010E0 E4867004        STR              r7, [r6], #4 ;store j
 1231 000010E4 E4064008        STR              r4, [r6], #-8 ;store k
 1232 000010E8 EB001486        BL               Eijk
 1233 000010EC         ;7
 1234 000010EC         
 1235 000010EC E28BB03C        ADD              r11, #60
 1236 000010F0 E41B0020        LDR              r0, [r11], #-32 ;(a)
 1237 000010F4 E41B101C        LDR              r1, [r11], #-28 ;(d)
 1238 000010F8         ;compare a and d



ARM Macro Assembler    Page 30 


 1239 000010F8 E3500000        CMP              r0, #0x00000000
 1240 000010FC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1241 00001100 13A00000        MOVNE            r0, #0
 1242 00001104 E3510000        CMP              r1, #0x00000000
 1243 00001108 13A01001        MOVNE            r1, #1      ;when d is non-0
 1244 0000110C 03A01000        MOVEQ            r1, #0
 1245 00001110 E0811000        ADD              r1, r0
 1246 00001114 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1247 00001118 03A06207        MOVEQ            r6, 0x70000000
 1248 0000111C 03A07030        MOVEQ            r7, #48
 1249 00001120 04867004        STREQ            r7, [r6], #4 ;store i
 1250 00001124 03A07010        MOVEQ            r7, #16
 1251 00001128 04067004        STREQ            r7, [r6], #-4 ;store j
 1252 0000112C 0B0014E7        BLEQ             Eij
 1253 00001130 E28BB03C        ADD              r11, #60
 1254 00001134 E41B0020        LDR              r0, [r11], #-32 ;(a)
 1255 00001138 E41B101C        LDR              r1, [r11], #-28 ;(d)
 1256 0000113C         ;recompare a and d
 1257 0000113C E4821004        STR              r1, [r2], #4
 1258 00001140 E4020004        STR              r0, [r2], #-4
 1259 00001144 EB0015EA        BL               Division
 1260 00001148 E5934000        LDR              r4, [r3]    ;get d/a
 1261 0000114C E3540102        CMP              r4, #0x80000000
 1262 00001150 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1263 00001154 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1264 00001158         ;get -d/a
 1265 00001158 E3A05205        MOV              r5, 0x50000000
 1266 0000115C E5859000        STR              r9, [r5]    ;store size
 1267 00001160 E3A06207        MOV              r6, 0x70000000
 1268 00001164 E3A07030        MOV              r7, #48
 1269 00001168 E4867004        STR              r7, [r6], #4 ;store i
 1270 0000116C E3A07010        MOV              r7, #16
 1271 00001170 E4867004        STR              r7, [r6], #4 ;store j
 1272 00001174 E4064008        STR              r4, [r6], #-8 ;store k
 1273 00001178 EB001462        BL               Eijk
 1274 0000117C         ;8
 1275 0000117C         
 1276 0000117C E28BB03C        ADD              r11, #60
 1277 00001180 E41B0030        LDR              r0, [r11], #-48 ;(a)
 1278 00001184 E41B100C        LDR              r1, [r11], #-12 ;(d)
 1279 00001188         ;compare a and d
 1280 00001188 E3500000        CMP              r0, #0x00000000
 1281 0000118C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1282 00001190 13A00000        MOVNE            r0, #0
 1283 00001194 E3510000        CMP              r1, #0x00000000
 1284 00001198 13A01001        MOVNE            r1, #1      ;when d is non-0
 1285 0000119C 03A01000        MOVEQ            r1, #0
 1286 000011A0 E0811000        ADD              r1, r0
 1287 000011A4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1288 000011A8 03A06207        MOVEQ            r6, 0x70000000
 1289 000011AC 03A07030        MOVEQ            r7, #48
 1290 000011B0 04867004        STREQ            r7, [r6], #4 ;store i
 1291 000011B4 03A07000        MOVEQ            r7, #0
 1292 000011B8 04067004        STREQ            r7, [r6], #-4 ;store j
 1293 000011BC 0B0014C3        BLEQ             Eij



ARM Macro Assembler    Page 31 


 1294 000011C0 E28BB03C        ADD              r11, #60
 1295 000011C4 E41B0030        LDR              r0, [r11], #-48 ;(a)
 1296 000011C8 E41B100C        LDR              r1, [r11], #-12 ;(d)
 1297 000011CC         ;recompare a and d
 1298 000011CC E4821004        STR              r1, [r2], #4
 1299 000011D0 E4020004        STR              r0, [r2], #-4
 1300 000011D4 EB0015C6        BL               Division
 1301 000011D8 E5934000        LDR              r4, [r3]    ;get d/a
 1302 000011DC E3540102        CMP              r4, #0x80000000
 1303 000011E0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1304 000011E4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1305 000011E8         ;get -d/a
 1306 000011E8 E3A05205        MOV              r5, 0x50000000
 1307 000011EC E5859000        STR              r9, [r5]    ;store size
 1308 000011F0 E3A06207        MOV              r6, 0x70000000
 1309 000011F4 E3A07030        MOV              r7, #48
 1310 000011F8 E4867004        STR              r7, [r6], #4 ;store i
 1311 000011FC E3A07000        MOV              r7, #0
 1312 00001200 E4867004        STR              r7, [r6], #4 ;store j
 1313 00001204 E4064008        STR              r4, [r6], #-8 ;store k
 1314 00001208 EB00143E        BL               Eijk
 1315 0000120C         ;9
 1316 0000120C         
 1317 0000120C E28BB028        ADD              r11, #40
 1318 00001210 E41B0010        LDR              r0, [r11], #-16 ;(a)
 1319 00001214 E41B1018        LDR              r1, [r11], #-24 ;(d)
 1320 00001218         ;compare a and d
 1321 00001218 E3500000        CMP              r0, #0x00000000
 1322 0000121C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1323 00001220 13A00000        MOVNE            r0, #0
 1324 00001224 E3510000        CMP              r1, #0x00000000
 1325 00001228 13A01001        MOVNE            r1, #1      ;when d is non-0
 1326 0000122C 03A01000        MOVEQ            r1, #0
 1327 00001230 E0811000        ADD              r1, r0
 1328 00001234 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1329 00001238 03A06207        MOVEQ            r6, 0x70000000
 1330 0000123C 03A07020        MOVEQ            r7, #32
 1331 00001240 04867004        STREQ            r7, [r6], #4 ;store i
 1332 00001244 03A07010        MOVEQ            r7, #16
 1333 00001248 04067004        STREQ            r7, [r6], #-4 ;store j
 1334 0000124C 0B00149F        BLEQ             Eij
 1335 00001250 E28BB028        ADD              r11, #40
 1336 00001254 E41B0010        LDR              r0, [r11], #-16 ;(a)
 1337 00001258 E41B1018        LDR              r1, [r11], #-24 ;(d)
 1338 0000125C         ;recompare a and d
 1339 0000125C E4821004        STR              r1, [r2], #4
 1340 00001260 E4020004        STR              r0, [r2], #-4
 1341 00001264 EB0015A2        BL               Division
 1342 00001268 E5934000        LDR              r4, [r3]    ;get d/a
 1343 0000126C E3540102        CMP              r4, #0x80000000
 1344 00001270 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1345 00001274 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1346 00001278         ;get -d/a
 1347 00001278 E3A05205        MOV              r5, 0x50000000



ARM Macro Assembler    Page 32 


 1348 0000127C E5859000        STR              r9, [r5]    ;store size
 1349 00001280 E3A06207        MOV              r6, 0x70000000
 1350 00001284 E3A07020        MOV              r7, #32
 1351 00001288 E4867004        STR              r7, [r6], #4 ;store i
 1352 0000128C E3A07010        MOV              r7, #16
 1353 00001290 E4867004        STR              r7, [r6], #4 ;store j
 1354 00001294 E4064008        STR              r4, [r6], #-8 ;store k
 1355 00001298 EB00141A        BL               Eijk
 1356 0000129C         ;10
 1357 0000129C         
 1358 0000129C E28BB028        ADD              r11, #40
 1359 000012A0 E41B0020        LDR              r0, [r11], #-32 ;(a)
 1360 000012A4 E41B1008        LDR              r1, [r11], #-8 ;(d)
 1361 000012A8         ;compare a and d
 1362 000012A8 E3500000        CMP              r0, #0x00000000
 1363 000012AC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1364 000012B0 13A00000        MOVNE            r0, #0
 1365 000012B4 E3510000        CMP              r1, #0x00000000
 1366 000012B8 13A01001        MOVNE            r1, #1      ;when d is non-0
 1367 000012BC 03A01000        MOVEQ            r1, #0
 1368 000012C0 E0811000        ADD              r1, r0
 1369 000012C4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1370 000012C8 03A06207        MOVEQ            r6, 0x70000000
 1371 000012CC 03A07020        MOVEQ            r7, #32
 1372 000012D0 04867004        STREQ            r7, [r6], #4 ;store i
 1373 000012D4 03A07000        MOVEQ            r7, #0
 1374 000012D8 04067004        STREQ            r7, [r6], #-4 ;store j
 1375 000012DC 0B00147B        BLEQ             Eij
 1376 000012E0 E28BB028        ADD              r11, #40
 1377 000012E4 E41B0020        LDR              r0, [r11], #-32 ;(a)
 1378 000012E8 E41B1008        LDR              r1, [r11], #-8 ;(d)
 1379 000012EC         ;recompare a and d
 1380 000012EC E4821004        STR              r1, [r2], #4
 1381 000012F0 E4020004        STR              r0, [r2], #-4
 1382 000012F4 EB00157E        BL               Division
 1383 000012F8 E5934000        LDR              r4, [r3]    ;get d/a
 1384 000012FC E3540102        CMP              r4, #0x80000000
 1385 00001300 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1386 00001304 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1387 00001308         ;get -d/a
 1388 00001308 E3A05205        MOV              r5, 0x50000000
 1389 0000130C E5859000        STR              r9, [r5]    ;store size
 1390 00001310 E3A06207        MOV              r6, 0x70000000
 1391 00001314 E3A07020        MOV              r7, #32
 1392 00001318 E4867004        STR              r7, [r6], #4 ;store i
 1393 0000131C E3A07000        MOV              r7, #0
 1394 00001320 E4867004        STR              r7, [r6], #4 ;store j
 1395 00001324 E4064008        STR              r4, [r6], #-8 ;store k
 1396 00001328 EB0013F6        BL               Eijk
 1397 0000132C         ;11
 1398 0000132C         
 1399 0000132C E28BB014        ADD              r11, #20
 1400 00001330 E41B0010        LDR              r0, [r11], #-16 ;(a)
 1401 00001334 E41B1004        LDR              r1, [r11], #-4 ;(d)
 1402 00001338         ;compare a and d
 1403 00001338 E3500000        CMP              r0, #0x00000000



ARM Macro Assembler    Page 33 


 1404 0000133C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1405 00001340 13A00000        MOVNE            r0, #0
 1406 00001344 E3510000        CMP              r1, #0x00000000
 1407 00001348 13A01001        MOVNE            r1, #1      ;when d is non-0
 1408 0000134C 03A01000        MOVEQ            r1, #0
 1409 00001350 E0811000        ADD              r1, r0
 1410 00001354 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1411 00001358 03A06207        MOVEQ            r6, 0x70000000
 1412 0000135C 03A07010        MOVEQ            r7, #16
 1413 00001360 04867004        STREQ            r7, [r6], #4 ;store i
 1414 00001364 03A07000        MOVEQ            r7, #0
 1415 00001368 04067004        STREQ            r7, [r6], #-4 ;store j
 1416 0000136C 0B001457        BLEQ             Eij
 1417 00001370 E28BB014        ADD              r11, #20
 1418 00001374 E41B0010        LDR              r0, [r11], #-16 ;(a)
 1419 00001378 E41B1004        LDR              r1, [r11], #-4 ;(d)
 1420 0000137C         ;recompare a and d
 1421 0000137C E4821004        STR              r1, [r2], #4
 1422 00001380 E4020004        STR              r0, [r2], #-4
 1423 00001384 EB00155A        BL               Division
 1424 00001388 E5934000        LDR              r4, [r3]    ;get d/a
 1425 0000138C E3540102        CMP              r4, #0x80000000
 1426 00001390 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1427 00001394 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1428 00001398         ;get -d/a
 1429 00001398 E3A05205        MOV              r5, 0x50000000
 1430 0000139C E5859000        STR              r9, [r5]    ;store size
 1431 000013A0 E3A06207        MOV              r6, 0x70000000
 1432 000013A4 E3A07010        MOV              r7, #16
 1433 000013A8 E4867004        STR              r7, [r6], #4 ;store i
 1434 000013AC E3A07000        MOV              r7, #0
 1435 000013B0 E4867004        STR              r7, [r6], #4 ;store j
 1436 000013B4 E4064008        STR              r4, [r6], #-8 ;store k
 1437 000013B8 EB0013D2        BL               Eijk
 1438 000013BC         ;12
 1439 000013BC         
 1440 000013BC E28BB000        ADD              r11, #0
 1441 000013C0 E49B0000        LDR              r0, [r11], #0 ;a
 1442 000013C4 E3A015FE        MOV              r1, #0x3F800000
 1443 000013C8 E4821004        STR              r1, [r2], #4
 1444 000013CC E4020004        STR              r0, [r2], #-4
 1445 000013D0 EB001547        BL               Division
 1446 000013D4 E5934000        LDR              r4, [r3]    ;get 1/a
 1447 000013D8 E3A05205        MOV              r5, 0x50000000
 1448 000013DC E5859000        STR              r9, [r5]    ;store size
 1449 000013E0 E3A06207        MOV              r6, 0x70000000
 1450 000013E4 E3A07000        MOV              r7, #0
 1451 000013E8 E4867004        STR              r7, [r6], #4 ;store i
 1452 000013EC E1A07000        MOV              r7, r0
 1453 000013F0 E4064004        STR              r4, [r6], #-4 ;store k
 1454 000013F4 EB001403        BL               Eik
 1455 000013F8         ;1
 1456 000013F8         
 1457 000013F8 E28BB014        ADD              r11, #20
 1458 000013FC E41B0014        LDR              r0, [r11], #-20 ;a
 1459 00001400 E3A015FE        MOV              r1, #0x3F800000



ARM Macro Assembler    Page 34 


 1460 00001404 E4821004        STR              r1, [r2], #4
 1461 00001408 E4020004        STR              r0, [r2], #-4
 1462 0000140C EB001538        BL               Division
 1463 00001410 E5934000        LDR              r4, [r3]    ;get 1/a
 1464 00001414 E3A05205        MOV              r5, 0x50000000
 1465 00001418 E5859000        STR              r9, [r5]    ;store size
 1466 0000141C E3A06207        MOV              r6, 0x70000000
 1467 00001420 E3A07010        MOV              r7, #16
 1468 00001424 E4867004        STR              r7, [r6], #4 ;store i
 1469 00001428 E1A07000        MOV              r7, r0
 1470 0000142C E4064004        STR              r4, [r6], #-4 ;store k
 1471 00001430 EB0013F4        BL               Eik
 1472 00001434         ;2
 1473 00001434         
 1474 00001434 E28BB028        ADD              r11, #40
 1475 00001438 E41B0028        LDR              r0, [r11], #-40 ;a
 1476 0000143C E3A015FE        MOV              r1, #0x3F800000
 1477 00001440 E4821004        STR              r1, [r2], #4
 1478 00001444 E4020004        STR              r0, [r2], #-4
 1479 00001448 EB001529        BL               Division
 1480 0000144C E5934000        LDR              r4, [r3]    ;get 1/a
 1481 00001450 E3A05205        MOV              r5, 0x50000000
 1482 00001454 E5859000        STR              r9, [r5]    ;store size
 1483 00001458 E3A06207        MOV              r6, 0x70000000
 1484 0000145C E3A07020        MOV              r7, #32
 1485 00001460 E4867004        STR              r7, [r6], #4 ;store i
 1486 00001464 E1A07000        MOV              r7, r0
 1487 00001468 E4064004        STR              r4, [r6], #-4 ;store k
 1488 0000146C EB0013E5        BL               Eik
 1489 00001470         ;3
 1490 00001470         
 1491 00001470 E28BB03C        ADD              r11, #60
 1492 00001474 E41B003C        LDR              r0, [r11], #-60 ;a
 1493 00001478 E3A015FE        MOV              r1, #0x3F800000
 1494 0000147C E4821004        STR              r1, [r2], #4
 1495 00001480 E4020004        STR              r0, [r2], #-4
 1496 00001484 EB00151A        BL               Division
 1497 00001488 E5934000        LDR              r4, [r3]    ;get 1/a
 1498 0000148C E3A05205        MOV              r5, 0x50000000
 1499 00001490 E5859000        STR              r9, [r5]    ;store size
 1500 00001494 E3A06207        MOV              r6, 0x70000000
 1501 00001498 E3A07030        MOV              r7, #48
 1502 0000149C E4867004        STR              r7, [r6], #4 ;store i
 1503 000014A0 E1A07000        MOV              r7, r0
 1504 000014A4 E4064004        STR              r4, [r6], #-4 ;store k
 1505 000014A8 EB0013D6        BL               Eik
 1506 000014AC         ;4
 1507 000014AC         
 1508 000014AC E3A0F000        MOV              pc, #0      ;Program end
 1509 000014B0                 LTORG
 1510 000014B0         
 1511 000014B0         Makeidentity5
 1512 000014B0 E51FC874        LDR              r12, =Matrix_data ;r12 = addres
                                                            s of given matrix
 1513 000014B4 E49C9004        LDR              r9, [r12], #4 ;get size
 1514 000014B8 E3A0B205        MOV              r11, 0x50000000
 1515 000014BC E58B9000        STR              r9, [r11]   ;store size
 1516 000014C0 E3A0B203        MOV              r11, 0x30000000 ;r11 = address 
                                                            of first matrix



ARM Macro Assembler    Page 35 


 1517 000014C4 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 1518 000014C8 E89C001F        LDMFD            r12, {r0 - r4}
 1519 000014CC E28CC014        ADD              r12, #20
 1520 000014D0 E88B001F        STMEA            r11, {r0 - r4}
 1521 000014D4 E28BB014        ADD              r11, #20
 1522 000014D8 E89C001F        LDMFD            r12, {r0 - r4}
 1523 000014DC E28CC014        ADD              r12, #20
 1524 000014E0 E88B001F        STMEA            r11, {r0 - r4}
 1525 000014E4 E28BB014        ADD              r11, #20
 1526 000014E8 E89C001F        LDMFD            r12, {r0 - r4}
 1527 000014EC E28CC014        ADD              r12, #20
 1528 000014F0 E88B001F        STMEA            r11, {r0 - r4}
 1529 000014F4 E28BB014        ADD              r11, #20
 1530 000014F8 E89C001F        LDMFD            r12, {r0 - r4}
 1531 000014FC E28CC014        ADD              r12, #20
 1532 00001500 E88B001F        STMEA            r11, {r0 - r4}
 1533 00001504 E28BB014        ADD              r11, #20
 1534 00001508 E89C001F        LDMFD            r12, {r0 - r4}
 1535 0000150C E24CC050        SUB              r12, #80
 1536 00001510 E88B001F        STMEA            r11, {r0 - r4}
 1537 00001514 E24BB050        SUB              r11, #80
 1538 00001518         ;store copy of given matrix
 1539 00001518 E3A005FE        MOV              r0, #0x3F800000
 1540 0000151C E3A01000        MOV              r1, #0x00000000
 1541 00001520 E3A02000        MOV              r2, #0x00000000
 1542 00001524 E3A03000        MOV              r3, #0x00000000
 1543 00001528 E3A04000        MOV              r4, #0x00000000
 1544 0000152C E88A001F        STMEA            r10, {r0 - r4} ;store identity 
                                                            matrix
 1545 00001530 E3A00000        MOV              r0, #0x00000000
 1546 00001534 E3A015FE        MOV              r1, #0x3F800000
 1547 00001538 E3A02000        MOV              r2, #0x00000000
 1548 0000153C E3A03000        MOV              r3, #0x00000000
 1549 00001540 E3A04000        MOV              r4, #0x00000000
 1550 00001544 E28AA014        ADD              r10, #20
 1551 00001548 E88A001F        STMEA            r10, {r0 - r4} ;store identity 
                                                            matrix
 1552 0000154C E3A00000        MOV              r0, #0x00000000
 1553 00001550 E3A01000        MOV              r1, #0x00000000
 1554 00001554 E3A025FE        MOV              r2, #0x3F800000
 1555 00001558 E3A03000        MOV              r3, #0x00000000
 1556 0000155C E3A04000        MOV              r4, #0x00000000
 1557 00001560 E28AA014        ADD              r10, #20
 1558 00001564 E88A001F        STMEA            r10, {r0 - r4} ;store identity 
                                                            matrix
 1559 00001568 E3A00000        MOV              r0, #0x00000000
 1560 0000156C E3A01000        MOV              r1, #0x00000000
 1561 00001570 E3A02000        MOV              r2, #0x00000000
 1562 00001574 E3A035FE        MOV              r3, #0x3F800000
 1563 00001578 E3A04000        MOV              r4, #0x00000000
 1564 0000157C E28AA014        ADD              r10, #20
 1565 00001580 E88A001F        STMEA            r10, {r0 - r4} ;store identity 
                                                            matrix
 1566 00001584 E3A00000        MOV              r0, #0x00000000
 1567 00001588 E3A01000        MOV              r1, #0x00000000
 1568 0000158C E3A02000        MOV              r2, #0x00000000
 1569 00001590 E3A03000        MOV              r3, #0x00000000
 1570 00001594 E3A045FE        MOV              r4, #0x3F800000



ARM Macro Assembler    Page 36 


 1571 00001598 E28AA014        ADD              r10, #20
 1572 0000159C E88A001F        STMEA            r10, {r0 - r4} ;store identity 
                                                            matrix
 1573 000015A0 E24AA03C        SUB              r10, #60
 1574 000015A4         ;m1[i][j] = 0x30000000 + 12 * (i-1) + 4 * (j-1)
 1575 000015A4         ;m2[i][j] = 0x40000000 + 12 * (i-1) + 4 * (j-1)
 1576 000015A4         
 1577 000015A4 E3A02202        MOV              r2, 0x20000000
 1578 000015A8 E3A03201        MOV              r3, 0x10000000
 1579 000015AC         
 1580 000015AC E28BB000        ADD              r11, #0
 1581 000015B0 E49B0014        LDR              r0, [r11], #20 ;(a)
 1582 000015B4 E41B1014        LDR              r1, [r11], #-20 ;(d)
 1583 000015B8         ;compare a and d
 1584 000015B8 E3500000        CMP              r0, #0x00000000
 1585 000015BC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1586 000015C0 13A00000        MOVNE            r0, #0
 1587 000015C4 E3510000        CMP              r1, #0x00000000
 1588 000015C8 13A01001        MOVNE            r1, #1      ;when d is non-0
 1589 000015CC 03A01000        MOVEQ            r1, #0
 1590 000015D0 E0811000        ADD              r1, r0
 1591 000015D4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1592 000015D8 03A06207        MOVEQ            r6, 0x70000000
 1593 000015DC 03A07000        MOVEQ            r7, #0
 1594 000015E0 04867004        STREQ            r7, [r6], #4 ;store i
 1595 000015E4 03A07014        MOVEQ            r7, #20
 1596 000015E8 04067004        STREQ            r7, [r6], #-4 ;store j
 1597 000015EC 0B0013B7        BLEQ             Eij
 1598 000015F0 E28BB000        ADD              r11, #0
 1599 000015F4 E49B0014        LDR              r0, [r11], #20 ;(a)
 1600 000015F8 E41B1014        LDR              r1, [r11], #-20 ;(d)
 1601 000015FC         ;recompare a and d
 1602 000015FC E4821004        STR              r1, [r2], #4
 1603 00001600 E4020004        STR              r0, [r2], #-4
 1604 00001604 EB0014BA        BL               Division
 1605 00001608 E5934000        LDR              r4, [r3]    ;get d/a
 1606 0000160C E3540102        CMP              r4, #0x80000000
 1607 00001610 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1608 00001614 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1609 00001618         ;get -d/a
 1610 00001618 E3A05205        MOV              r5, 0x50000000
 1611 0000161C E5859000        STR              r9, [r5]    ;store size
 1612 00001620 E3A06207        MOV              r6, 0x70000000
 1613 00001624 E3A07000        MOV              r7, #0
 1614 00001628 E4867004        STR              r7, [r6], #4 ;store i
 1615 0000162C E3A07014        MOV              r7, #20
 1616 00001630 E4867004        STR              r7, [r6], #4 ;store j
 1617 00001634 E4064008        STR              r4, [r6], #-8 ;store k
 1618 00001638 EB001332        BL               Eijk
 1619 0000163C         ;1
 1620 0000163C         
 1621 0000163C E28BB000        ADD              r11, #0
 1622 00001640 E49B0028        LDR              r0, [r11], #40 ;(a)
 1623 00001644 E41B1028        LDR              r1, [r11], #-40 ;(d)
 1624 00001648         ;compare a and d
 1625 00001648 E3500000        CMP              r0, #0x00000000



ARM Macro Assembler    Page 37 


 1626 0000164C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1627 00001650 13A00000        MOVNE            r0, #0
 1628 00001654 E3510000        CMP              r1, #0x00000000
 1629 00001658 13A01001        MOVNE            r1, #1      ;when d is non-0
 1630 0000165C 03A01000        MOVEQ            r1, #0
 1631 00001660 E0811000        ADD              r1, r0
 1632 00001664 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1633 00001668 03A06207        MOVEQ            r6, 0x70000000
 1634 0000166C 03A07000        MOVEQ            r7, #0
 1635 00001670 04867004        STREQ            r7, [r6], #4 ;store i
 1636 00001674 03A07028        MOVEQ            r7, #40
 1637 00001678 04067004        STREQ            r7, [r6], #-4 ;store j
 1638 0000167C 0B001393        BLEQ             Eij
 1639 00001680 E28BB000        ADD              r11, #0
 1640 00001684 E49B0028        LDR              r0, [r11], #40 ;(a)
 1641 00001688 E41B1028        LDR              r1, [r11], #-40 ;(d)
 1642 0000168C         ;recompare a and d
 1643 0000168C E4821004        STR              r1, [r2], #4
 1644 00001690 E4020004        STR              r0, [r2], #-4
 1645 00001694 EB001496        BL               Division
 1646 00001698 E5934000        LDR              r4, [r3]    ;get d/a
 1647 0000169C E3540102        CMP              r4, #0x80000000
 1648 000016A0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1649 000016A4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1650 000016A8         ;get -d/a
 1651 000016A8 E3A05205        MOV              r5, 0x50000000
 1652 000016AC E5859000        STR              r9, [r5]    ;store size
 1653 000016B0 E3A06207        MOV              r6, 0x70000000
 1654 000016B4 E3A07000        MOV              r7, #0
 1655 000016B8 E4867004        STR              r7, [r6], #4 ;store i
 1656 000016BC E3A07028        MOV              r7, #40
 1657 000016C0 E4867004        STR              r7, [r6], #4 ;store j
 1658 000016C4 E4064008        STR              r4, [r6], #-8 ;store k
 1659 000016C8 EB00130E        BL               Eijk
 1660 000016CC         ;2
 1661 000016CC         
 1662 000016CC E28BB000        ADD              r11, #0
 1663 000016D0 E49B003C        LDR              r0, [r11], #60 ;(a)
 1664 000016D4 E41B103C        LDR              r1, [r11], #-60 ;(d)
 1665 000016D8         ;compare a and d
 1666 000016D8 E3500000        CMP              r0, #0x00000000
 1667 000016DC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1668 000016E0 13A00000        MOVNE            r0, #0
 1669 000016E4 E3510000        CMP              r1, #0x00000000
 1670 000016E8 13A01001        MOVNE            r1, #1      ;when d is non-0
 1671 000016EC 03A01000        MOVEQ            r1, #0
 1672 000016F0 E0811000        ADD              r1, r0
 1673 000016F4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1674 000016F8 03A06207        MOVEQ            r6, 0x70000000
 1675 000016FC 03A07000        MOVEQ            r7, #0
 1676 00001700 04867004        STREQ            r7, [r6], #4 ;store i
 1677 00001704 03A0703C        MOVEQ            r7, #60
 1678 00001708 04067004        STREQ            r7, [r6], #-4 ;store j
 1679 0000170C 0B00136F        BLEQ             Eij
 1680 00001710 E28BB000        ADD              r11, #0



ARM Macro Assembler    Page 38 


 1681 00001714 E49B003C        LDR              r0, [r11], #60 ;(a)
 1682 00001718 E41B103C        LDR              r1, [r11], #-60 ;(d)
 1683 0000171C         ;recompare a and d
 1684 0000171C E4821004        STR              r1, [r2], #4
 1685 00001720 E4020004        STR              r0, [r2], #-4
 1686 00001724 EB001472        BL               Division
 1687 00001728 E5934000        LDR              r4, [r3]    ;get d/a
 1688 0000172C E3540102        CMP              r4, #0x80000000
 1689 00001730 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1690 00001734 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1691 00001738         ;get -d/a
 1692 00001738 E3A05205        MOV              r5, 0x50000000
 1693 0000173C E5859000        STR              r9, [r5]    ;store size
 1694 00001740 E3A06207        MOV              r6, 0x70000000
 1695 00001744 E3A07000        MOV              r7, #0
 1696 00001748 E4867004        STR              r7, [r6], #4 ;store i
 1697 0000174C E3A0703C        MOV              r7, #60
 1698 00001750 E4867004        STR              r7, [r6], #4 ;store j
 1699 00001754 E4064008        STR              r4, [r6], #-8 ;store k
 1700 00001758 EB0012EA        BL               Eijk
 1701 0000175C         ;3
 1702 0000175C         
 1703 0000175C E28BB000        ADD              r11, #0
 1704 00001760 E49B0050        LDR              r0, [r11], #80 ;(a)
 1705 00001764 E41B1050        LDR              r1, [r11], #-80 ;(d)
 1706 00001768         ;compare a and d
 1707 00001768 E3500000        CMP              r0, #0x00000000
 1708 0000176C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1709 00001770 13A00000        MOVNE            r0, #0
 1710 00001774 E3510000        CMP              r1, #0x00000000
 1711 00001778 13A01001        MOVNE            r1, #1      ;when d is non-0
 1712 0000177C 03A01000        MOVEQ            r1, #0
 1713 00001780 E0811000        ADD              r1, r0
 1714 00001784 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1715 00001788 03A06207        MOVEQ            r6, 0x70000000
 1716 0000178C 03A07000        MOVEQ            r7, #0
 1717 00001790 04867004        STREQ            r7, [r6], #4 ;store i
 1718 00001794 03A07050        MOVEQ            r7, #80
 1719 00001798 04067004        STREQ            r7, [r6], #-4 ;store j
 1720 0000179C 0B00134B        BLEQ             Eij
 1721 000017A0 E28BB000        ADD              r11, #0
 1722 000017A4 E49B0050        LDR              r0, [r11], #80 ;(a)
 1723 000017A8 E41B1050        LDR              r1, [r11], #-80 ;(d)
 1724 000017AC         ;recompare a and d
 1725 000017AC E4821004        STR              r1, [r2], #4
 1726 000017B0 E4020004        STR              r0, [r2], #-4
 1727 000017B4 EB00144E        BL               Division
 1728 000017B8 E5934000        LDR              r4, [r3]    ;get d/a
 1729 000017BC E3540102        CMP              r4, #0x80000000
 1730 000017C0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1731 000017C4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1732 000017C8         ;get -d/a
 1733 000017C8 E3A05205        MOV              r5, 0x50000000
 1734 000017CC E5859000        STR              r9, [r5]    ;store size



ARM Macro Assembler    Page 39 


 1735 000017D0 E3A06207        MOV              r6, 0x70000000
 1736 000017D4 E3A07000        MOV              r7, #0
 1737 000017D8 E4867004        STR              r7, [r6], #4 ;store i
 1738 000017DC E3A07050        MOV              r7, #80
 1739 000017E0 E4867004        STR              r7, [r6], #4 ;store j
 1740 000017E4 E4064008        STR              r4, [r6], #-8 ;store k
 1741 000017E8 EB0012C6        BL               Eijk
 1742 000017EC         ;4
 1743 000017EC         
 1744 000017EC E28BB018        ADD              r11, #24
 1745 000017F0 E49B0014        LDR              r0, [r11], #20 ;(a)
 1746 000017F4 E41B102C        LDR              r1, [r11], #-44 ;(d)
 1747 000017F8         ;compare a and d
 1748 000017F8 E3500000        CMP              r0, #0x00000000
 1749 000017FC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1750 00001800 13A00000        MOVNE            r0, #0
 1751 00001804 E3510000        CMP              r1, #0x00000000
 1752 00001808 13A01001        MOVNE            r1, #1      ;when d is non-0
 1753 0000180C 03A01000        MOVEQ            r1, #0
 1754 00001810 E0811000        ADD              r1, r0
 1755 00001814 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1756 00001818 03A06207        MOVEQ            r6, 0x70000000
 1757 0000181C 03A07014        MOVEQ            r7, #20
 1758 00001820 04867004        STREQ            r7, [r6], #4 ;store i
 1759 00001824 03A07028        MOVEQ            r7, #40
 1760 00001828 04067004        STREQ            r7, [r6], #-4 ;store j
 1761 0000182C 0B001327        BLEQ             Eij
 1762 00001830 E28BB018        ADD              r11, #24
 1763 00001834 E49B0014        LDR              r0, [r11], #20 ;(a)
 1764 00001838 E41B102C        LDR              r1, [r11], #-44 ;(d)
 1765 0000183C         ;recompare a and d
 1766 0000183C E4821004        STR              r1, [r2], #4
 1767 00001840 E4020004        STR              r0, [r2], #-4
 1768 00001844 EB00142A        BL               Division
 1769 00001848 E5934000        LDR              r4, [r3]    ;get d/a
 1770 0000184C E3540102        CMP              r4, #0x80000000
 1771 00001850 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1772 00001854 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1773 00001858         ;get -d/a
 1774 00001858 E3A05205        MOV              r5, 0x50000000
 1775 0000185C E5859000        STR              r9, [r5]    ;store size
 1776 00001860 E3A06207        MOV              r6, 0x70000000
 1777 00001864 E3A07014        MOV              r7, #20
 1778 00001868 E4867004        STR              r7, [r6], #4 ;store i
 1779 0000186C E3A07028        MOV              r7, #40
 1780 00001870 E4867004        STR              r7, [r6], #4 ;store j
 1781 00001874 E4064008        STR              r4, [r6], #-8 ;store k
 1782 00001878 EB0012A2        BL               Eijk
 1783 0000187C         ;5
 1784 0000187C         
 1785 0000187C E28BB018        ADD              r11, #24
 1786 00001880 E49B0028        LDR              r0, [r11], #40 ;(a)
 1787 00001884 E41B1040        LDR              r1, [r11], #-64 ;(d)
 1788 00001888         ;compare a and d
 1789 00001888 E3500000        CMP              r0, #0x00000000
 1790 0000188C 03A00001        MOVEQ            r0, #1      ;when a is 0



ARM Macro Assembler    Page 40 


 1791 00001890 13A00000        MOVNE            r0, #0
 1792 00001894 E3510000        CMP              r1, #0x00000000
 1793 00001898 13A01001        MOVNE            r1, #1      ;when d is non-0
 1794 0000189C 03A01000        MOVEQ            r1, #0
 1795 000018A0 E0811000        ADD              r1, r0
 1796 000018A4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1797 000018A8 03A06207        MOVEQ            r6, 0x70000000
 1798 000018AC 03A07014        MOVEQ            r7, #20
 1799 000018B0 04867004        STREQ            r7, [r6], #4 ;store i
 1800 000018B4 03A0703C        MOVEQ            r7, #60
 1801 000018B8 04067004        STREQ            r7, [r6], #-4 ;store j
 1802 000018BC 0B001303        BLEQ             Eij
 1803 000018C0 E28BB018        ADD              r11, #24
 1804 000018C4 E49B0028        LDR              r0, [r11], #40 ;(a)
 1805 000018C8 E41B1040        LDR              r1, [r11], #-64 ;(d)
 1806 000018CC         ;recompare a and d
 1807 000018CC E4821004        STR              r1, [r2], #4
 1808 000018D0 E4020004        STR              r0, [r2], #-4
 1809 000018D4 EB001406        BL               Division
 1810 000018D8 E5934000        LDR              r4, [r3]    ;get d/a
 1811 000018DC E3540102        CMP              r4, #0x80000000
 1812 000018E0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1813 000018E4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1814 000018E8         ;get -d/a
 1815 000018E8 E3A05205        MOV              r5, 0x50000000
 1816 000018EC E5859000        STR              r9, [r5]    ;store size
 1817 000018F0 E3A06207        MOV              r6, 0x70000000
 1818 000018F4 E3A07014        MOV              r7, #20
 1819 000018F8 E4867004        STR              r7, [r6], #4 ;store i
 1820 000018FC E3A0703C        MOV              r7, #60
 1821 00001900 E4867004        STR              r7, [r6], #4 ;store j
 1822 00001904 E4064008        STR              r4, [r6], #-8 ;store k
 1823 00001908 EB00127E        BL               Eijk
 1824 0000190C         ;6
 1825 0000190C         
 1826 0000190C E28BB018        ADD              r11, #24
 1827 00001910 E49B003C        LDR              r0, [r11], #60 ;(a)
 1828 00001914 E41B1054        LDR              r1, [r11], #-84 ;(d)
 1829 00001918         ;compare a and d
 1830 00001918 E3500000        CMP              r0, #0x00000000
 1831 0000191C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1832 00001920 13A00000        MOVNE            r0, #0
 1833 00001924 E3510000        CMP              r1, #0x00000000
 1834 00001928 13A01001        MOVNE            r1, #1      ;when d is non-0
 1835 0000192C 03A01000        MOVEQ            r1, #0
 1836 00001930 E0811000        ADD              r1, r0
 1837 00001934 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1838 00001938 03A06207        MOVEQ            r6, 0x70000000
 1839 0000193C 03A07014        MOVEQ            r7, #20
 1840 00001940 04867004        STREQ            r7, [r6], #4 ;store i
 1841 00001944 03A07050        MOVEQ            r7, #80
 1842 00001948 04067004        STREQ            r7, [r6], #-4 ;store j
 1843 0000194C 0B0012DF        BLEQ             Eij
 1844 00001950 E28BB018        ADD              r11, #24
 1845 00001954 E49B003C        LDR              r0, [r11], #60 ;(a)



ARM Macro Assembler    Page 41 


 1846 00001958 E41B1054        LDR              r1, [r11], #-84 ;(d))
 1847 0000195C         ;recompare a and d
 1848 0000195C E4821004        STR              r1, [r2], #4
 1849 00001960 E4020004        STR              r0, [r2], #-4
 1850 00001964 EB0013E2        BL               Division
 1851 00001968 E5934000        LDR              r4, [r3]    ;get d/a
 1852 0000196C E3540102        CMP              r4, #0x80000000
 1853 00001970 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1854 00001974 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1855 00001978         ;get -d/a
 1856 00001978 E3A05205        MOV              r5, 0x50000000
 1857 0000197C E5859000        STR              r9, [r5]    ;store size
 1858 00001980 E3A06207        MOV              r6, 0x70000000
 1859 00001984 E3A07014        MOV              r7, #20
 1860 00001988 E4867004        STR              r7, [r6], #4 ;store i
 1861 0000198C E3A07050        MOV              r7, #80
 1862 00001990 E4867004        STR              r7, [r6], #4 ;store j
 1863 00001994 E4064008        STR              r4, [r6], #-8 ;store k
 1864 00001998 EB00125A        BL               Eijk
 1865 0000199C         ;7
 1866 0000199C         
 1867 0000199C E28BB030        ADD              r11, #48
 1868 000019A0 E49B0014        LDR              r0, [r11], #20 ;(a)
 1869 000019A4 E41B1044        LDR              r1, [r11], #-68 ;(d)
 1870 000019A8         ;compare a and d
 1871 000019A8 E3500000        CMP              r0, #0x00000000
 1872 000019AC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1873 000019B0 13A00000        MOVNE            r0, #0
 1874 000019B4 E3510000        CMP              r1, #0x00000000
 1875 000019B8 13A01001        MOVNE            r1, #1      ;when d is non-0
 1876 000019BC 03A01000        MOVEQ            r1, #0
 1877 000019C0 E0811000        ADD              r1, r0
 1878 000019C4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1879 000019C8 03A06207        MOVEQ            r6, 0x70000000
 1880 000019CC 03A07028        MOVEQ            r7, #40
 1881 000019D0 04867004        STREQ            r7, [r6], #4 ;store i
 1882 000019D4 03A0703C        MOVEQ            r7, #60
 1883 000019D8 04067004        STREQ            r7, [r6], #-4 ;store j
 1884 000019DC 0B0012BB        BLEQ             Eij
 1885 000019E0 E28BB030        ADD              r11, #48
 1886 000019E4 E49B0014        LDR              r0, [r11], #20 ;(a)
 1887 000019E8 E41B1044        LDR              r1, [r11], #-68 ;(d)
 1888 000019EC         ;recompare a and d
 1889 000019EC E4821004        STR              r1, [r2], #4
 1890 000019F0 E4020004        STR              r0, [r2], #-4
 1891 000019F4 EB0013BE        BL               Division
 1892 000019F8 E5934000        LDR              r4, [r3]    ;get d/a
 1893 000019FC E3540102        CMP              r4, #0x80000000
 1894 00001A00 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1895 00001A04 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1896 00001A08         ;get -d/a
 1897 00001A08 E3A05205        MOV              r5, 0x50000000
 1898 00001A0C E5859000        STR              r9, [r5]    ;store size
 1899 00001A10 E3A06207        MOV              r6, 0x70000000



ARM Macro Assembler    Page 42 


 1900 00001A14 E3A07028        MOV              r7, #40
 1901 00001A18 E4867004        STR              r7, [r6], #4 ;store i
 1902 00001A1C E3A0703C        MOV              r7, #60
 1903 00001A20 E4867004        STR              r7, [r6], #4 ;store j
 1904 00001A24 E4064008        STR              r4, [r6], #-8 ;store k
 1905 00001A28 EB001236        BL               Eijk
 1906 00001A2C         ;8
 1907 00001A2C         
 1908 00001A2C E28BB030        ADD              r11, #48
 1909 00001A30 E49B0028        LDR              r0, [r11], #40 ;(a)
 1910 00001A34 E41B1058        LDR              r1, [r11], #-88 ;(d)
 1911 00001A38         ;compare a and d
 1912 00001A38 E3500000        CMP              r0, #0x00000000
 1913 00001A3C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1914 00001A40 13A00000        MOVNE            r0, #0
 1915 00001A44 E3510000        CMP              r1, #0x00000000
 1916 00001A48 13A01001        MOVNE            r1, #1      ;when d is non-0
 1917 00001A4C 03A01000        MOVEQ            r1, #0
 1918 00001A50 E0811000        ADD              r1, r0
 1919 00001A54 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1920 00001A58 03A06207        MOVEQ            r6, 0x70000000
 1921 00001A5C 03A07028        MOVEQ            r7, #40
 1922 00001A60 04867004        STREQ            r7, [r6], #4 ;store i
 1923 00001A64 03A07050        MOVEQ            r7, #80
 1924 00001A68 04067004        STREQ            r7, [r6], #-4 ;store j
 1925 00001A6C 0B001297        BLEQ             Eij
 1926 00001A70 E28BB030        ADD              r11, #48
 1927 00001A74 E49B0028        LDR              r0, [r11], #40 ;(a)
 1928 00001A78 E41B1058        LDR              r1, [r11], #-88 ;(d)
 1929 00001A7C         ;recompare a and d
 1930 00001A7C E4821004        STR              r1, [r2], #4
 1931 00001A80 E4020004        STR              r0, [r2], #-4
 1932 00001A84 EB00139A        BL               Division
 1933 00001A88 E5934000        LDR              r4, [r3]    ;get d/a
 1934 00001A8C E3540102        CMP              r4, #0x80000000
 1935 00001A90 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1936 00001A94 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1937 00001A98         ;get -d/a
 1938 00001A98 E3A05205        MOV              r5, 0x50000000
 1939 00001A9C E5859000        STR              r9, [r5]    ;store size
 1940 00001AA0 E3A06207        MOV              r6, 0x70000000
 1941 00001AA4 E3A07028        MOV              r7, #40
 1942 00001AA8 E4867004        STR              r7, [r6], #4 ;store i
 1943 00001AAC E3A07050        MOV              r7, #80
 1944 00001AB0 E4867004        STR              r7, [r6], #4 ;store j
 1945 00001AB4 E4064008        STR              r4, [r6], #-8 ;store k
 1946 00001AB8 EB001212        BL               Eijk
 1947 00001ABC         ;9
 1948 00001ABC         
 1949 00001ABC E28BB048        ADD              r11, #72
 1950 00001AC0 E49B0014        LDR              r0, [r11], #20 ;(a)
 1951 00001AC4 E41B105C        LDR              r1, [r11], #-92 ;(d)
 1952 00001AC8         ;compare a and d
 1953 00001AC8 E3500000        CMP              r0, #0x00000000
 1954 00001ACC 03A00001        MOVEQ            r0, #1      ;when a is 0
 1955 00001AD0 13A00000        MOVNE            r0, #0



ARM Macro Assembler    Page 43 


 1956 00001AD4 E3510000        CMP              r1, #0x00000000
 1957 00001AD8 13A01001        MOVNE            r1, #1      ;when d is non-0
 1958 00001ADC 03A01000        MOVEQ            r1, #0
 1959 00001AE0 E0811000        ADD              r1, r0
 1960 00001AE4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 1961 00001AE8 03A06207        MOVEQ            r6, 0x70000000
 1962 00001AEC 03A0703C        MOVEQ            r7, #60
 1963 00001AF0 04867004        STREQ            r7, [r6], #4 ;store i
 1964 00001AF4 03A07050        MOVEQ            r7, #80
 1965 00001AF8 04067004        STREQ            r7, [r6], #-4 ;store j
 1966 00001AFC 0B001273        BLEQ             Eij
 1967 00001B00 E28BB048        ADD              r11, #72
 1968 00001B04 E49B0014        LDR              r0, [r11], #20 ;(a)
 1969 00001B08 E41B105C        LDR              r1, [r11], #-92 ;(d)
 1970 00001B0C         ;recompare a and d
 1971 00001B0C E4821004        STR              r1, [r2], #4
 1972 00001B10 E4020004        STR              r0, [r2], #-4
 1973 00001B14 EB001376        BL               Division
 1974 00001B18 E5934000        LDR              r4, [r3]    ;get d/a
 1975 00001B1C E3540102        CMP              r4, #0x80000000
 1976 00001B20 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 1977 00001B24 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 1978 00001B28         ;get -d/a
 1979 00001B28 E3A05205        MOV              r5, 0x50000000
 1980 00001B2C E5859000        STR              r9, [r5]    ;store size
 1981 00001B30 E3A06207        MOV              r6, 0x70000000
 1982 00001B34 E3A0703C        MOV              r7, #60
 1983 00001B38 E4867004        STR              r7, [r6], #4 ;store i
 1984 00001B3C E3A07050        MOV              r7, #80
 1985 00001B40 E4867004        STR              r7, [r6], #4 ;store j
 1986 00001B44 E4064008        STR              r4, [r6], #-8 ;store k
 1987 00001B48 EB0011EE        BL               Eijk
 1988 00001B4C         ;10
 1989 00001B4C         
 1990 00001B4C E28BB060        ADD              r11, #96
 1991 00001B50 E41B0014        LDR              r0, [r11], #-20 ;(a)
 1992 00001B54 E41B104C        LDR              r1, [r11], #-76 ;(d)
 1993 00001B58         ;compare a and d
 1994 00001B58 E3500000        CMP              r0, #0x00000000
 1995 00001B5C 03A00001        MOVEQ            r0, #1      ;when a is 0
 1996 00001B60 13A00000        MOVNE            r0, #0
 1997 00001B64 E3510000        CMP              r1, #0x00000000
 1998 00001B68 13A01001        MOVNE            r1, #1      ;when d is non-0
 1999 00001B6C 03A01000        MOVEQ            r1, #0
 2000 00001B70 E0811000        ADD              r1, r0
 2001 00001B74 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2002 00001B78 03A06207        MOVEQ            r6, 0x70000000
 2003 00001B7C 03A07050        MOVEQ            r7, #80
 2004 00001B80 04867004        STREQ            r7, [r6], #4 ;store i
 2005 00001B84 03A0703C        MOVEQ            r7, #60
 2006 00001B88 04067004        STREQ            r7, [r6], #-4 ;store j
 2007 00001B8C 0B00124F        BLEQ             Eij
 2008 00001B90 E28BB060        ADD              r11, #96
 2009 00001B94 E41B0014        LDR              r0, [r11], #-20 ;(a)
 2010 00001B98 E41B104C        LDR              r1, [r11], #-76 ;(d)



ARM Macro Assembler    Page 44 


 2011 00001B9C         ;recompare a and d
 2012 00001B9C E4821004        STR              r1, [r2], #4
 2013 00001BA0 E4020004        STR              r0, [r2], #-4
 2014 00001BA4 EB001352        BL               Division
 2015 00001BA8 E5934000        LDR              r4, [r3]    ;get d/a
 2016 00001BAC E3540102        CMP              r4, #0x80000000
 2017 00001BB0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2018 00001BB4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2019 00001BB8         ;get -d/a
 2020 00001BB8 E3A05205        MOV              r5, 0x50000000
 2021 00001BBC E5859000        STR              r9, [r5]    ;store size
 2022 00001BC0 E3A06207        MOV              r6, 0x70000000
 2023 00001BC4 E3A07050        MOV              r7, #80
 2024 00001BC8 E4867004        STR              r7, [r6], #4 ;store i
 2025 00001BCC E3A0703C        MOV              r7, #60
 2026 00001BD0 E4867004        STR              r7, [r6], #4 ;store j
 2027 00001BD4 E4064008        STR              r4, [r6], #-8 ;store k
 2028 00001BD8 EB0011CA        BL               Eijk
 2029 00001BDC         ;11
 2030 00001BDC         
 2031 00001BDC E28BB060        ADD              r11, #96
 2032 00001BE0 E41B0028        LDR              r0, [r11], #-40 ;(a)
 2033 00001BE4 E41B1038        LDR              r1, [r11], #-56 ;(d)
 2034 00001BE8         ;compare a and d
 2035 00001BE8 E3500000        CMP              r0, #0x00000000
 2036 00001BEC 03A00001        MOVEQ            r0, #1      ;when a is 0
 2037 00001BF0 13A00000        MOVNE            r0, #0
 2038 00001BF4 E3510000        CMP              r1, #0x00000000
 2039 00001BF8 13A01001        MOVNE            r1, #1      ;when d is non-0
 2040 00001BFC 03A01000        MOVEQ            r1, #0
 2041 00001C00 E0811000        ADD              r1, r0
 2042 00001C04 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2043 00001C08 03A06207        MOVEQ            r6, 0x70000000
 2044 00001C0C 03A07050        MOVEQ            r7, #80
 2045 00001C10 04867004        STREQ            r7, [r6], #4 ;store i
 2046 00001C14 03A07028        MOVEQ            r7, #40
 2047 00001C18 04067004        STREQ            r7, [r6], #-4 ;store j
 2048 00001C1C 0B00122B        BLEQ             Eij
 2049 00001C20 E28BB060        ADD              r11, #96
 2050 00001C24 E41B0028        LDR              r0, [r11], #-40 ;(a)
 2051 00001C28 E41B1038        LDR              r1, [r11], #-56 ;(d)
 2052 00001C2C         ;recompare a and d
 2053 00001C2C E4821004        STR              r1, [r2], #4
 2054 00001C30 E4020004        STR              r0, [r2], #-4
 2055 00001C34 EB00132E        BL               Division
 2056 00001C38 E5934000        LDR              r4, [r3]    ;get d/a
 2057 00001C3C E3540102        CMP              r4, #0x80000000
 2058 00001C40 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2059 00001C44 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2060 00001C48         ;get -d/a
 2061 00001C48 E3A05205        MOV              r5, 0x50000000
 2062 00001C4C E5859000        STR              r9, [r5]    ;store size
 2063 00001C50 E3A06207        MOV              r6, 0x70000000
 2064 00001C54 E3A07050        MOV              r7, #80



ARM Macro Assembler    Page 45 


 2065 00001C58 E4867004        STR              r7, [r6], #4 ;store i
 2066 00001C5C E3A07028        MOV              r7, #40
 2067 00001C60 E4867004        STR              r7, [r6], #4 ;store j
 2068 00001C64 E4064008        STR              r4, [r6], #-8 ;store k
 2069 00001C68 EB0011A6        BL               Eijk
 2070 00001C6C         ;12
 2071 00001C6C         
 2072 00001C6C E28BB060        ADD              r11, #96
 2073 00001C70 E41B003C        LDR              r0, [r11], #-60 ;(a)
 2074 00001C74 E41B1024        LDR              r1, [r11], #-36 ;(d)
 2075 00001C78         ;compare a and d
 2076 00001C78 E3500000        CMP              r0, #0x00000000
 2077 00001C7C 03A00001        MOVEQ            r0, #1      ;when a is 0
 2078 00001C80 13A00000        MOVNE            r0, #0
 2079 00001C84 E3510000        CMP              r1, #0x00000000
 2080 00001C88 13A01001        MOVNE            r1, #1      ;when d is non-0
 2081 00001C8C 03A01000        MOVEQ            r1, #0
 2082 00001C90 E0811000        ADD              r1, r0
 2083 00001C94 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2084 00001C98 03A06207        MOVEQ            r6, 0x70000000
 2085 00001C9C 03A07050        MOVEQ            r7, #80
 2086 00001CA0 04867004        STREQ            r7, [r6], #4 ;store i
 2087 00001CA4 03A07014        MOVEQ            r7, #20
 2088 00001CA8 04067004        STREQ            r7, [r6], #-4 ;store j
 2089 00001CAC 0B001207        BLEQ             Eij
 2090 00001CB0 E28BB060        ADD              r11, #96
 2091 00001CB4 E41B003C        LDR              r0, [r11], #-60 ;(a)
 2092 00001CB8 E41B1024        LDR              r1, [r11], #-36 ;(d)
 2093 00001CBC         ;recompare a and d
 2094 00001CBC E4821004        STR              r1, [r2], #4
 2095 00001CC0 E4020004        STR              r0, [r2], #-4
 2096 00001CC4 EB00130A        BL               Division
 2097 00001CC8 E5934000        LDR              r4, [r3]    ;get d/a
 2098 00001CCC E3540102        CMP              r4, #0x80000000
 2099 00001CD0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2100 00001CD4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2101 00001CD8         ;get -d/a
 2102 00001CD8 E3A05205        MOV              r5, 0x50000000
 2103 00001CDC E5859000        STR              r9, [r5]    ;store size
 2104 00001CE0 E3A06207        MOV              r6, 0x70000000
 2105 00001CE4 E3A07050        MOV              r7, #80
 2106 00001CE8 E4867004        STR              r7, [r6], #4 ;store i
 2107 00001CEC E3A07014        MOV              r7, #20
 2108 00001CF0 E4867004        STR              r7, [r6], #4 ;store j
 2109 00001CF4 E4064008        STR              r4, [r6], #-8 ;store k
 2110 00001CF8 EB001182        BL               Eijk
 2111 00001CFC         ;13
 2112 00001CFC         
 2113 00001CFC E28BB060        ADD              r11, #96
 2114 00001D00 E41B0050        LDR              r0, [r11], #-80 ;(a)
 2115 00001D04 E41B1010        LDR              r1, [r11], #-16 ;(d)
 2116 00001D08         ;compare a and d
 2117 00001D08 E3500000        CMP              r0, #0x00000000
 2118 00001D0C 03A00001        MOVEQ            r0, #1      ;when a is 0
 2119 00001D10 13A00000        MOVNE            r0, #0
 2120 00001D14 E3510000        CMP              r1, #0x00000000



ARM Macro Assembler    Page 46 


 2121 00001D18 13A01001        MOVNE            r1, #1      ;when d is non-0
 2122 00001D1C 03A01000        MOVEQ            r1, #0
 2123 00001D20 E0811000        ADD              r1, r0
 2124 00001D24 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2125 00001D28 03A06207        MOVEQ            r6, 0x70000000
 2126 00001D2C 03A07050        MOVEQ            r7, #80
 2127 00001D30 04867004        STREQ            r7, [r6], #4 ;store i
 2128 00001D34 03A07000        MOVEQ            r7, #0
 2129 00001D38 04067004        STREQ            r7, [r6], #-4 ;store j
 2130 00001D3C 0B0011E3        BLEQ             Eij
 2131 00001D40 E28BB060        ADD              r11, #96
 2132 00001D44 E41B0050        LDR              r0, [r11], #-80 ;(a)
 2133 00001D48 E41B1010        LDR              r1, [r11], #-16 ;(d)
 2134 00001D4C         ;recompare a and d
 2135 00001D4C E4821004        STR              r1, [r2], #4
 2136 00001D50 E4020004        STR              r0, [r2], #-4
 2137 00001D54 EB0012E6        BL               Division
 2138 00001D58 E5934000        LDR              r4, [r3]    ;get d/a
 2139 00001D5C E3540102        CMP              r4, #0x80000000
 2140 00001D60 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2141 00001D64 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2142 00001D68         ;get -d/a
 2143 00001D68 E3A05205        MOV              r5, 0x50000000
 2144 00001D6C E5859000        STR              r9, [r5]    ;store size
 2145 00001D70 E3A06207        MOV              r6, 0x70000000
 2146 00001D74 E3A07050        MOV              r7, #80
 2147 00001D78 E4867004        STR              r7, [r6], #4 ;store i
 2148 00001D7C E3A07000        MOV              r7, #0
 2149 00001D80 E4867004        STR              r7, [r6], #4 ;store j
 2150 00001D84 E4064008        STR              r4, [r6], #-8 ;store k
 2151 00001D88 EB00115E        BL               Eijk
 2152 00001D8C         ;14
 2153 00001D8C         
 2154 00001D8C E28BB048        ADD              r11, #72
 2155 00001D90 E41B0014        LDR              r0, [r11], #-20 ;(a)
 2156 00001D94 E41B1034        LDR              r1, [r11], #-52 ;(d)
 2157 00001D98         ;compare a and d
 2158 00001D98 E3500000        CMP              r0, #0x00000000
 2159 00001D9C 03A00001        MOVEQ            r0, #1      ;when a is 0
 2160 00001DA0 13A00000        MOVNE            r0, #0
 2161 00001DA4 E3510000        CMP              r1, #0x00000000
 2162 00001DA8 13A01001        MOVNE            r1, #1      ;when d is non-0
 2163 00001DAC 03A01000        MOVEQ            r1, #0
 2164 00001DB0 E0811000        ADD              r1, r0
 2165 00001DB4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2166 00001DB8 03A06207        MOVEQ            r6, 0x70000000
 2167 00001DBC 03A0703C        MOVEQ            r7, #60
 2168 00001DC0 04867004        STREQ            r7, [r6], #4 ;store i
 2169 00001DC4 03A07028        MOVEQ            r7, #40
 2170 00001DC8 04067004        STREQ            r7, [r6], #-4 ;store j
 2171 00001DCC 0B0011BF        BLEQ             Eij
 2172 00001DD0 E28BB048        ADD              r11, #72
 2173 00001DD4 E41B0014        LDR              r0, [r11], #-20 ;(a)
 2174 00001DD8 E41B1034        LDR              r1, [r11], #-52 ;(d)
 2175 00001DDC         ;recompare a and d



ARM Macro Assembler    Page 47 


 2176 00001DDC E4821004        STR              r1, [r2], #4
 2177 00001DE0 E4020004        STR              r0, [r2], #-4
 2178 00001DE4 EB0012C2        BL               Division
 2179 00001DE8 E5934000        LDR              r4, [r3]    ;get d/a
 2180 00001DEC E3540102        CMP              r4, #0x80000000
 2181 00001DF0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2182 00001DF4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2183 00001DF8         ;get -d/a
 2184 00001DF8 E3A05205        MOV              r5, 0x50000000
 2185 00001DFC E5859000        STR              r9, [r5]    ;store size
 2186 00001E00 E3A06207        MOV              r6, 0x70000000
 2187 00001E04 E3A0703C        MOV              r7, #60
 2188 00001E08 E4867004        STR              r7, [r6], #4 ;store i
 2189 00001E0C E3A07028        MOV              r7, #40
 2190 00001E10 E4867004        STR              r7, [r6], #4 ;store j
 2191 00001E14 E4064008        STR              r4, [r6], #-8 ;store k
 2192 00001E18 EB00113A        BL               Eijk
 2193 00001E1C         ;15
 2194 00001E1C         
 2195 00001E1C E28BB048        ADD              r11, #72
 2196 00001E20 E41B0028        LDR              r0, [r11], #-40 ;(a)
 2197 00001E24 E41B1020        LDR              r1, [r11], #-32 ;(d)
 2198 00001E28         ;compare a and d
 2199 00001E28 E3500000        CMP              r0, #0x00000000
 2200 00001E2C 03A00001        MOVEQ            r0, #1      ;when a is 0
 2201 00001E30 13A00000        MOVNE            r0, #0
 2202 00001E34 E3510000        CMP              r1, #0x00000000
 2203 00001E38 13A01001        MOVNE            r1, #1      ;when d is non-0
 2204 00001E3C 03A01000        MOVEQ            r1, #0
 2205 00001E40 E0811000        ADD              r1, r0
 2206 00001E44 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2207 00001E48 03A06207        MOVEQ            r6, 0x70000000
 2208 00001E4C 03A0703C        MOVEQ            r7, #60
 2209 00001E50 04867004        STREQ            r7, [r6], #4 ;store i
 2210 00001E54 03A07014        MOVEQ            r7, #20
 2211 00001E58 04067004        STREQ            r7, [r6], #-4 ;store j
 2212 00001E5C 0B00119B        BLEQ             Eij
 2213 00001E60 E28BB048        ADD              r11, #72
 2214 00001E64 E41B0028        LDR              r0, [r11], #-40 ;(a)
 2215 00001E68 E41B1020        LDR              r1, [r11], #-32 ;(d)
 2216 00001E6C         ;recompare a and d
 2217 00001E6C E4821004        STR              r1, [r2], #4
 2218 00001E70 E4020004        STR              r0, [r2], #-4
 2219 00001E74 EB00129E        BL               Division
 2220 00001E78 E5934000        LDR              r4, [r3]    ;get d/a
 2221 00001E7C E3540102        CMP              r4, #0x80000000
 2222 00001E80 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2223 00001E84 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2224 00001E88         ;get -d/a
 2225 00001E88 E3A05205        MOV              r5, 0x50000000
 2226 00001E8C E5859000        STR              r9, [r5]    ;store size
 2227 00001E90 E3A06207        MOV              r6, 0x70000000
 2228 00001E94 E3A0703C        MOV              r7, #60
 2229 00001E98 E4867004        STR              r7, [r6], #4 ;store i



ARM Macro Assembler    Page 48 


 2230 00001E9C E3A07014        MOV              r7, #20
 2231 00001EA0 E4867004        STR              r7, [r6], #4 ;store j
 2232 00001EA4 E4064008        STR              r4, [r6], #-8 ;store k
 2233 00001EA8 EB001116        BL               Eijk
 2234 00001EAC         ;16
 2235 00001EAC         
 2236 00001EAC E28BB048        ADD              r11, #72
 2237 00001EB0 E41B003C        LDR              r0, [r11], #-60 ;(a)
 2238 00001EB4 E41B100C        LDR              r1, [r11], #-12 ;(d)
 2239 00001EB8         ;compare a and d
 2240 00001EB8 E3500000        CMP              r0, #0x00000000
 2241 00001EBC 03A00001        MOVEQ            r0, #1      ;when a is 0
 2242 00001EC0 13A00000        MOVNE            r0, #0
 2243 00001EC4 E3510000        CMP              r1, #0x00000000
 2244 00001EC8 13A01001        MOVNE            r1, #1      ;when d is non-0
 2245 00001ECC 03A01000        MOVEQ            r1, #0
 2246 00001ED0 E0811000        ADD              r1, r0
 2247 00001ED4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2248 00001ED8 03A06207        MOVEQ            r6, 0x70000000
 2249 00001EDC 03A0703C        MOVEQ            r7, #60
 2250 00001EE0 04867004        STREQ            r7, [r6], #4 ;store i
 2251 00001EE4 03A07000        MOVEQ            r7, #0
 2252 00001EE8 04067004        STREQ            r7, [r6], #-4 ;store j
 2253 00001EEC 0B001177        BLEQ             Eij
 2254 00001EF0 E28BB048        ADD              r11, #72
 2255 00001EF4 E41B003C        LDR              r0, [r11], #-60 ;(a)
 2256 00001EF8 E41B100C        LDR              r1, [r11], #-12 ;(d)
 2257 00001EFC         ;recompare a and d
 2258 00001EFC E4821004        STR              r1, [r2], #4
 2259 00001F00 E4020004        STR              r0, [r2], #-4
 2260 00001F04 EB00127A        BL               Division
 2261 00001F08 E5934000        LDR              r4, [r3]    ;get d/a
 2262 00001F0C E3540102        CMP              r4, #0x80000000
 2263 00001F10 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2264 00001F14 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2265 00001F18         ;get -d/a
 2266 00001F18 E3A05205        MOV              r5, 0x50000000
 2267 00001F1C E5859000        STR              r9, [r5]    ;store size
 2268 00001F20 E3A06207        MOV              r6, 0x70000000
 2269 00001F24 E3A0703C        MOV              r7, #60
 2270 00001F28 E4867004        STR              r7, [r6], #4 ;store i
 2271 00001F2C E3A07000        MOV              r7, #0
 2272 00001F30 E4867004        STR              r7, [r6], #4 ;store j
 2273 00001F34 E4064008        STR              r4, [r6], #-8 ;store k
 2274 00001F38 EB0010F2        BL               Eijk
 2275 00001F3C         ;17
 2276 00001F3C         
 2277 00001F3C E28BB030        ADD              r11, #48
 2278 00001F40 E41B0014        LDR              r0, [r11], #-20 ;(a)
 2279 00001F44 E41B101C        LDR              r1, [r11], #-28 ;(d)
 2280 00001F48         ;compare a and d
 2281 00001F48 E3500000        CMP              r0, #0x00000000
 2282 00001F4C 03A00001        MOVEQ            r0, #1      ;when a is 0
 2283 00001F50 13A00000        MOVNE            r0, #0
 2284 00001F54 E3510000        CMP              r1, #0x00000000
 2285 00001F58 13A01001        MOVNE            r1, #1      ;when d is non-0



ARM Macro Assembler    Page 49 


 2286 00001F5C 03A01000        MOVEQ            r1, #0
 2287 00001F60 E0811000        ADD              r1, r0
 2288 00001F64 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2289 00001F68 03A06207        MOVEQ            r6, 0x70000000
 2290 00001F6C 03A07028        MOVEQ            r7, #40
 2291 00001F70 04867004        STREQ            r7, [r6], #4 ;store i
 2292 00001F74 03A07014        MOVEQ            r7, #20
 2293 00001F78 04067004        STREQ            r7, [r6], #-4 ;store j
 2294 00001F7C 0B001153        BLEQ             Eij
 2295 00001F80 E28BB030        ADD              r11, #48
 2296 00001F84 E41B0014        LDR              r0, [r11], #-20 ;(a)
 2297 00001F88 E41B101C        LDR              r1, [r11], #-28 ;(d)
 2298 00001F8C         ;recompare a and d
 2299 00001F8C E4821004        STR              r1, [r2], #4
 2300 00001F90 E4020004        STR              r0, [r2], #-4
 2301 00001F94 EB001256        BL               Division
 2302 00001F98 E5934000        LDR              r4, [r3]    ;get d/a
 2303 00001F9C E3540102        CMP              r4, #0x80000000
 2304 00001FA0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2305 00001FA4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2306 00001FA8         ;get -d/a
 2307 00001FA8 E3A05205        MOV              r5, 0x50000000
 2308 00001FAC E5859000        STR              r9, [r5]    ;store size
 2309 00001FB0 E3A06207        MOV              r6, 0x70000000
 2310 00001FB4 E3A07028        MOV              r7, #40
 2311 00001FB8 E4867004        STR              r7, [r6], #4 ;store i
 2312 00001FBC E3A07014        MOV              r7, #20
 2313 00001FC0 E4867004        STR              r7, [r6], #4 ;store j
 2314 00001FC4 E4064008        STR              r4, [r6], #-8 ;store k
 2315 00001FC8 EB0010CE        BL               Eijk
 2316 00001FCC         ;18
 2317 00001FCC         
 2318 00001FCC E28BB030        ADD              r11, #48
 2319 00001FD0 E41B0028        LDR              r0, [r11], #-40 ;(a)
 2320 00001FD4 E41B1008        LDR              r1, [r11], #-8 ;(d)
 2321 00001FD8         ;compare a and d
 2322 00001FD8 E3500000        CMP              r0, #0x00000000
 2323 00001FDC 03A00001        MOVEQ            r0, #1      ;when a is 0
 2324 00001FE0 13A00000        MOVNE            r0, #0
 2325 00001FE4 E3510000        CMP              r1, #0x00000000
 2326 00001FE8 13A01001        MOVNE            r1, #1      ;when d is non-0
 2327 00001FEC 03A01000        MOVEQ            r1, #0
 2328 00001FF0 E0811000        ADD              r1, r0
 2329 00001FF4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2330 00001FF8 03A06207        MOVEQ            r6, 0x70000000
 2331 00001FFC 03A07028        MOVEQ            r7, #40
 2332 00002000 04867004        STREQ            r7, [r6], #4 ;store i
 2333 00002004 03A07000        MOVEQ            r7, #0
 2334 00002008 04067004        STREQ            r7, [r6], #-4 ;store j
 2335 0000200C 0B00112F        BLEQ             Eij
 2336 00002010 E28BB030        ADD              r11, #48
 2337 00002014 E41B0028        LDR              r0, [r11], #-40 ;(a)
 2338 00002018 E41B1008        LDR              r1, [r11], #-8 ;(d)
 2339 0000201C         ;recompare a and d
 2340 0000201C E4821004        STR              r1, [r2], #4



ARM Macro Assembler    Page 50 


 2341 00002020 E4020004        STR              r0, [r2], #-4
 2342 00002024 EB001232        BL               Division
 2343 00002028 E5934000        LDR              r4, [r3]    ;get d/a
 2344 0000202C E3540102        CMP              r4, #0x80000000
 2345 00002030 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2346 00002034 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2347 00002038         ;get -d/a
 2348 00002038 E3A05205        MOV              r5, 0x50000000
 2349 0000203C E5859000        STR              r9, [r5]    ;store size
 2350 00002040 E3A06207        MOV              r6, 0x70000000
 2351 00002044 E3A07028        MOV              r7, #40
 2352 00002048 E4867004        STR              r7, [r6], #4 ;store i
 2353 0000204C E3A07000        MOV              r7, #0
 2354 00002050 E4867004        STR              r7, [r6], #4 ;store j
 2355 00002054 E4064008        STR              r4, [r6], #-8 ;store k
 2356 00002058 EB0010AA        BL               Eijk
 2357 0000205C         ;19
 2358 0000205C         
 2359 0000205C E28BB018        ADD              r11, #24
 2360 00002060 E41B0014        LDR              r0, [r11], #-20 ;(a)
 2361 00002064 E41B1004        LDR              r1, [r11], #-4 ;(d)
 2362 00002068         ;compare a and d
 2363 00002068 E3500000        CMP              r0, #0x00000000
 2364 0000206C 03A00001        MOVEQ            r0, #1      ;when a is 0
 2365 00002070 13A00000        MOVNE            r0, #0
 2366 00002074 E3510000        CMP              r1, #0x00000000
 2367 00002078 13A01001        MOVNE            r1, #1      ;when d is non-0
 2368 0000207C 03A01000        MOVEQ            r1, #0
 2369 00002080 E0811000        ADD              r1, r0
 2370 00002084 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2371 00002088 03A06207        MOVEQ            r6, 0x70000000
 2372 0000208C 03A07014        MOVEQ            r7, #20
 2373 00002090 04867004        STREQ            r7, [r6], #4 ;store i
 2374 00002094 03A07000        MOVEQ            r7, #0
 2375 00002098 04067004        STREQ            r7, [r6], #-4 ;store j
 2376 0000209C 0B00110B        BLEQ             Eij
 2377 000020A0 E28BB018        ADD              r11, #24
 2378 000020A4 E41B0014        LDR              r0, [r11], #-20 ;(a)
 2379 000020A8 E41B1004        LDR              r1, [r11], #-4 ;(d)
 2380 000020AC         ;recompare a and d
 2381 000020AC E4821004        STR              r1, [r2], #4
 2382 000020B0 E4020004        STR              r0, [r2], #-4
 2383 000020B4 EB00120E        BL               Division
 2384 000020B8 E5934000        LDR              r4, [r3]    ;get d/a
 2385 000020BC E3540102        CMP              r4, #0x80000000
 2386 000020C0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2387 000020C4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2388 000020C8         ;get -d/a
 2389 000020C8 E3A05205        MOV              r5, 0x50000000
 2390 000020CC E5859000        STR              r9, [r5]    ;store size
 2391 000020D0 E3A06207        MOV              r6, 0x70000000
 2392 000020D4 E3A07014        MOV              r7, #20
 2393 000020D8 E4867004        STR              r7, [r6], #4 ;store i
 2394 000020DC E3A07000        MOV              r7, #0



ARM Macro Assembler    Page 51 


 2395 000020E0 E4867004        STR              r7, [r6], #4 ;store j
 2396 000020E4 E4064008        STR              r4, [r6], #-8 ;store k
 2397 000020E8 EB001086        BL               Eijk
 2398 000020EC         ;20
 2399 000020EC         
 2400 000020EC E28BB000        ADD              r11, #0
 2401 000020F0 E49B0000        LDR              r0, [r11], #0 ;a
 2402 000020F4 E3A015FE        MOV              r1, #0x3F800000
 2403 000020F8 E4821004        STR              r1, [r2], #4
 2404 000020FC E4020004        STR              r0, [r2], #-4
 2405 00002100 EB0011FB        BL               Division
 2406 00002104 E5934000        LDR              r4, [r3]    ;get 1/a
 2407 00002108 E3A05205        MOV              r5, 0x50000000
 2408 0000210C E5859000        STR              r9, [r5]    ;store size
 2409 00002110 E3A06207        MOV              r6, 0x70000000
 2410 00002114 E3A07000        MOV              r7, #0
 2411 00002118 E4867004        STR              r7, [r6], #4 ;store i
 2412 0000211C E1A07000        MOV              r7, r0
 2413 00002120 E4064004        STR              r4, [r6], #-4 ;store k
 2414 00002124 EB0010B7        BL               Eik
 2415 00002128         ;1
 2416 00002128         
 2417 00002128 E28BB018        ADD              r11, #24
 2418 0000212C E41B0018        LDR              r0, [r11], #-24 ;a
 2419 00002130 E3A015FE        MOV              r1, #0x3F800000
 2420 00002134 E4821004        STR              r1, [r2], #4
 2421 00002138 E4020004        STR              r0, [r2], #-4
 2422 0000213C EB0011EC        BL               Division
 2423 00002140 E5934000        LDR              r4, [r3]    ;get 1/a
 2424 00002144 E3A05205        MOV              r5, 0x50000000
 2425 00002148 E5859000        STR              r9, [r5]    ;store size
 2426 0000214C E3A06207        MOV              r6, 0x70000000
 2427 00002150 E3A07014        MOV              r7, #20
 2428 00002154 E4867004        STR              r7, [r6], #4 ;store i
 2429 00002158 E1A07000        MOV              r7, r0
 2430 0000215C E4064004        STR              r4, [r6], #-4 ;store k
 2431 00002160 EB0010A8        BL               Eik
 2432 00002164         ;2
 2433 00002164         
 2434 00002164 E28BB030        ADD              r11, #48
 2435 00002168 E41B0030        LDR              r0, [r11], #-48 ;a
 2436 0000216C E3A015FE        MOV              r1, #0x3F800000
 2437 00002170 E4821004        STR              r1, [r2], #4
 2438 00002174 E4020004        STR              r0, [r2], #-4
 2439 00002178 EB0011DD        BL               Division
 2440 0000217C E5934000        LDR              r4, [r3]    ;get 1/a
 2441 00002180 E3A05205        MOV              r5, 0x50000000
 2442 00002184 E5859000        STR              r9, [r5]    ;store size
 2443 00002188 E3A06207        MOV              r6, 0x70000000
 2444 0000218C E3A07028        MOV              r7, #40
 2445 00002190 E4867004        STR              r7, [r6], #4 ;store i
 2446 00002194 E1A07000        MOV              r7, r0
 2447 00002198 E4064004        STR              r4, [r6], #-4 ;store k
 2448 0000219C EB001099        BL               Eik
 2449 000021A0         ;3
 2450 000021A0         
 2451 000021A0 E28BB048        ADD              r11, #72
 2452 000021A4 E41B0048        LDR              r0, [r11], #-72 ;a
 2453 000021A8 E3A015FE        MOV              r1, #0x3F800000



ARM Macro Assembler    Page 52 


 2454 000021AC E4821004        STR              r1, [r2], #4
 2455 000021B0 E4020004        STR              r0, [r2], #-4
 2456 000021B4 EB0011CE        BL               Division
 2457 000021B8 E5934000        LDR              r4, [r3]    ;get 1/a
 2458 000021BC E3A05205        MOV              r5, 0x50000000
 2459 000021C0 E5859000        STR              r9, [r5]    ;store size
 2460 000021C4 E3A06207        MOV              r6, 0x70000000
 2461 000021C8 E3A0703C        MOV              r7, #60
 2462 000021CC E4867004        STR              r7, [r6], #4 ;store i
 2463 000021D0 E1A07000        MOV              r7, r0
 2464 000021D4 E4064004        STR              r4, [r6], #-4 ;store k
 2465 000021D8 EB00108A        BL               Eik
 2466 000021DC         ;4
 2467 000021DC         
 2468 000021DC E28BB060        ADD              r11, #96
 2469 000021E0 E41B0060        LDR              r0, [r11], #-96 ;a
 2470 000021E4 E3A015FE        MOV              r1, #0x3F800000
 2471 000021E8 E4821004        STR              r1, [r2], #4
 2472 000021EC E4020004        STR              r0, [r2], #-4
 2473 000021F0 EB0011BF        BL               Division
 2474 000021F4 E5934000        LDR              r4, [r3]    ;get 1/a
 2475 000021F8 E3A05205        MOV              r5, 0x50000000
 2476 000021FC E5859000        STR              r9, [r5]    ;store size
 2477 00002200 E3A06207        MOV              r6, 0x70000000
 2478 00002204 E3A07050        MOV              r7, #80
 2479 00002208 E4867004        STR              r7, [r6], #4 ;store i
 2480 0000220C E1A07000        MOV              r7, r0
 2481 00002210 E4064004        STR              r4, [r6], #-4 ;store k
 2482 00002214 EB00107B        BL               Eik
 2483 00002218         ;5
 2484 00002218         
 2485 00002218 E3A0F000        MOV              pc, #0      ;Program end
 2486 0000221C                 LTORG
 2487 0000221C         
 2488 0000221C         Makeidentity10
 2489 0000221C E59FC038        LDR              r12, =Matrix_data ;r12 = addres
                                                            s of given matrix
 2490 00002220 E49C9004        LDR              r9, [r12], #4 ;get size
 2491 00002224 E3A0B205        MOV              r11, 0x50000000
 2492 00002228 E58B9000        STR              r9, [r11]   ;store size
 2493 0000222C E3A0B203        MOV              r11, 0x30000000 ;r11 = address 
                                                            of first matrix
 2494 00002230 E3A0A000        MOV              r10, #0
 2495 00002234 E3590006        CMP              r9, #6
 2496 00002238 0A000008        BEQ              Loop6
 2497 0000223C E3590007        CMP              r9, #7
 2498 00002240 0A000038        BEQ              Loop7
 2499 00002244 E3590008        CMP              r9, #8
 2500 00002248 0A000069        BEQ              Loop8
 2501 0000224C E3590009        CMP              r9, #9
 2502 00002250 0A00009B        BEQ              Loop9
 2503 00002254 E359000A        CMP              r9, #10
 2504 00002258 0A0000CE        BEQ              Loop10
 2505 0000225C 00000000        LTORG
 2506 00002260         
 2507 00002260         Loop6                                ;loop for 6 times
 2508 00002260 E89C003F        LDMFD            r12, {r0 - r5}
 2509 00002264 E28CC018        ADD              r12, #24
 2510 00002268 E88B003F        STMEA            r11, {r0 - r5}



ARM Macro Assembler    Page 53 


 2511 0000226C E28BB028        ADD              r11, #40
 2512 00002270 E28AA001        ADD              r10, #1
 2513 00002274 E35A0006        CMP              r10, #6
 2514 00002278 1AFFFFF8        BNE              Loop6
 2515 0000227C         ;store copy of given matrix
 2516 0000227C         
 2517 0000227C E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 2518 00002280 E3A00000        MOV              r0, #0x00000000
 2519 00002284 E3A01000        MOV              r1, #0x00000000
 2520 00002288 E3A02000        MOV              r2, #0x00000000
 2521 0000228C E3A03000        MOV              r3, #0x00000000
 2522 00002290 E3A04000        MOV              r4, #0x00000000
 2523 00002294 E3A05000        MOV              r5, #0x00000000
 2524 00002298 E3A06000        MOV              r6, #0x00000000
 2525 0000229C E3A07000        MOV              r7, #0x00000000
 2526 000022A0 E3A08000        MOV              r8, #0x00000000
 2527 000022A4 E3A09000        MOV              r9, #0x00000000
 2528 000022A8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 2529 000022AC E28AA028        ADD              r10, #40
 2530 000022B0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 2531 000022B4 E28AA028        ADD              r10, #40
 2532 000022B8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 2533 000022BC E28AA028        ADD              r10, #40
 2534 000022C0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 2535 000022C4 E28AA028        ADD              r10, #40
 2536 000022C8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 2537 000022CC E28AA028        ADD              r10, #40
 2538 000022D0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 2539 000022D4 E28AA028        ADD              r10, #40
 2540 000022D8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 2541 000022DC E28AA028        ADD              r10, #40
 2542 000022E0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 2543 000022E4 E28AA028        ADD              r10, #40
 2544 000022E8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 2545 000022EC E28AA028        ADD              r10, #40
 2546 000022F0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 2547 000022F4 E24AAF5A        SUB              r10, #360
 2548 000022F8         
 2549 000022F8 E3A005FE        MOV              r0, #0x3F800000
 2550 000022FC E48A002C        STR              r0, [r10], #44 ;store 1 (1)
 2551 00002300 E48A002C        STR              r0, [r10], #44 ;store 1 (2)
 2552 00002304 E48A002C        STR              r0, [r10], #44 ;store 1 (3)
 2553 00002308 E48A002C        STR              r0, [r10], #44 ;store 1 (4)
 2554 0000230C E48A002C        STR              r0, [r10], #44 ;store 1 (5)
 2555 00002310 E40A00DC        STR              r0, [r10], #-220 ;store 1 (6)
 2556 00002314 E3A02202        MOV              r2, 0x20000000
 2557 00002318 E3A03201        MOV              r3, 0x10000000
 2558 0000231C E3A08000        MOV              r8, #0
 2559 00002320 E3A0B203        MOV              r11, #0x30000000
 2560 00002324         
 2561 00002324 EA0000D2        B                Loop10_1
 2562 00002328                 LTORG
 2563 00002328         
 2564 00002328         Loop7                                ;loop for 6 times
 2565 00002328 E89C007F        LDMFD            r12, {r0 - r6}
 2566 0000232C E28CC01C        ADD              r12, #28
 2567 00002330 E88B007F        STMEA            r11, {r0 - r6}
 2568 00002334 E28BB028        ADD              r11, #40



ARM Macro Assembler    Page 54 


 2569 00002338 E28AA001        ADD              r10, #1
 2570 0000233C E35A0007        CMP              r10, #7
 2571 00002340 1AFFFFF8        BNE              Loop7
 2572 00002344         ;store copy of given matrix
 2573 00002344         
 2574 00002344 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 2575 00002348 E3A00000        MOV              r0, #0x00000000
 2576 0000234C E3A01000        MOV              r1, #0x00000000
 2577 00002350 E3A02000        MOV              r2, #0x00000000
 2578 00002354 E3A03000        MOV              r3, #0x00000000
 2579 00002358 E3A04000        MOV              r4, #0x00000000
 2580 0000235C E3A05000        MOV              r5, #0x00000000
 2581 00002360 E3A06000        MOV              r6, #0x00000000
 2582 00002364 E3A07000        MOV              r7, #0x00000000
 2583 00002368 E3A08000        MOV              r8, #0x00000000
 2584 0000236C E3A09000        MOV              r9, #0x00000000
 2585 00002370 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 2586 00002374 E28AA028        ADD              r10, #40
 2587 00002378 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 2588 0000237C E28AA028        ADD              r10, #40
 2589 00002380 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 2590 00002384 E28AA028        ADD              r10, #40
 2591 00002388 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 2592 0000238C E28AA028        ADD              r10, #40
 2593 00002390 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 2594 00002394 E28AA028        ADD              r10, #40
 2595 00002398 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 2596 0000239C E28AA028        ADD              r10, #40
 2597 000023A0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 2598 000023A4 E28AA028        ADD              r10, #40
 2599 000023A8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 2600 000023AC E28AA028        ADD              r10, #40
 2601 000023B0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 2602 000023B4 E28AA028        ADD              r10, #40
 2603 000023B8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 2604 000023BC E24AAF5A        SUB              r10, #360
 2605 000023C0         
 2606 000023C0 E3A005FE        MOV              r0, #0x3F800000
 2607 000023C4 E48A002C        STR              r0, [r10], #44 ;store 1 (1)
 2608 000023C8 E48A002C        STR              r0, [r10], #44 ;store 1 (2)
 2609 000023CC E48A002C        STR              r0, [r10], #44 ;store 1 (3)
 2610 000023D0 E48A002C        STR              r0, [r10], #44 ;store 1 (4)
 2611 000023D4 E48A002C        STR              r0, [r10], #44 ;store 1 (5)
 2612 000023D8 E48A002C        STR              r0, [r10], #44 ;store 1 (6)
 2613 000023DC E40A0108        STR              r0, [r10], #-264 ;store 1 (7)
 2614 000023E0 E3A02202        MOV              r2, 0x20000000
 2615 000023E4 E3A03201        MOV              r3, 0x10000000
 2616 000023E8 E3A08000        MOV              r8, #0
 2617 000023EC E3A0B203        MOV              r11, #0x30000000
 2618 000023F0         
 2619 000023F0 EA00009F        B                Loop10_1
 2620 000023F4                 LTORG
 2621 000023F4         
 2622 000023F4         Loop8                                ;loop for 8 times
 2623 000023F4 E89C00FF        LDMFD            r12, {r0 - r7}
 2624 000023F8 E28CC020        ADD              r12, #32
 2625 000023FC E88B00FF        STMEA            r11, {r0 - r7}
 2626 00002400 E28BB028        ADD              r11, #40



ARM Macro Assembler    Page 55 


 2627 00002404 E28AA001        ADD              r10, #1
 2628 00002408 E35A0008        CMP              r10, #8
 2629 0000240C 1AFFFFF8        BNE              Loop8
 2630 00002410         ;store copy of given matrix
 2631 00002410         
 2632 00002410 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 2633 00002414 E3A00000        MOV              r0, #0x00000000
 2634 00002418 E3A01000        MOV              r1, #0x00000000
 2635 0000241C E3A02000        MOV              r2, #0x00000000
 2636 00002420 E3A03000        MOV              r3, #0x00000000
 2637 00002424 E3A04000        MOV              r4, #0x00000000
 2638 00002428 E3A05000        MOV              r5, #0x00000000
 2639 0000242C E3A06000        MOV              r6, #0x00000000
 2640 00002430 E3A07000        MOV              r7, #0x00000000
 2641 00002434 E3A08000        MOV              r8, #0x00000000
 2642 00002438 E3A09000        MOV              r9, #0x00000000
 2643 0000243C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 2644 00002440 E28AA028        ADD              r10, #40
 2645 00002444 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 2646 00002448 E28AA028        ADD              r10, #40
 2647 0000244C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 2648 00002450 E28AA028        ADD              r10, #40
 2649 00002454 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 2650 00002458 E28AA028        ADD              r10, #40
 2651 0000245C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 2652 00002460 E28AA028        ADD              r10, #40
 2653 00002464 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 2654 00002468 E28AA028        ADD              r10, #40
 2655 0000246C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 2656 00002470 E28AA028        ADD              r10, #40
 2657 00002474 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 2658 00002478 E28AA028        ADD              r10, #40
 2659 0000247C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 2660 00002480 E28AA028        ADD              r10, #40
 2661 00002484 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 2662 00002488 E24AAF5A        SUB              r10, #360
 2663 0000248C         
 2664 0000248C E3A005FE        MOV              r0, #0x3F800000
 2665 00002490 E48A002C        STR              r0, [r10], #44 ;store 1 (1)
 2666 00002494 E48A002C        STR              r0, [r10], #44 ;store 1 (2)
 2667 00002498 E48A002C        STR              r0, [r10], #44 ;store 1 (3)
 2668 0000249C E48A002C        STR              r0, [r10], #44 ;store 1 (4)
 2669 000024A0 E48A002C        STR              r0, [r10], #44 ;store 1 (5)
 2670 000024A4 E48A002C        STR              r0, [r10], #44 ;store 1 (6)
 2671 000024A8 E48A002C        STR              r0, [r10], #44 ;store 1 (7)
 2672 000024AC E40A0134        STR              r0, [r10], #-308 ;store 1 (8)
 2673 000024B0 E3A02202        MOV              r2, 0x20000000
 2674 000024B4 E3A03201        MOV              r3, 0x10000000
 2675 000024B8 E3A08000        MOV              r8, #0
 2676 000024BC E3A0B203        MOV              r11, #0x30000000
 2677 000024C0         
 2678 000024C0 EA00006B        B                Loop10_1
 2679 000024C4                 LTORG
 2680 000024C4         
 2681 000024C4         Loop9                                ;loop for 9 times
 2682 000024C4 E89C01FF        LDMFD            r12, {r0 - r8}
 2683 000024C8 E28CC024        ADD              r12, #36
 2684 000024CC E88B01FF        STMEA            r11, {r0 - r8}



ARM Macro Assembler    Page 56 


 2685 000024D0 E28BB028        ADD              r11, #40
 2686 000024D4 E28AA001        ADD              r10, #1
 2687 000024D8 E35A0009        CMP              r10, #9
 2688 000024DC 1AFFFFF8        BNE              Loop9
 2689 000024E0         ;store copy of given matrix
 2690 000024E0         
 2691 000024E0 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 2692 000024E4 E3A00000        MOV              r0, #0x00000000
 2693 000024E8 E3A01000        MOV              r1, #0x00000000
 2694 000024EC E3A02000        MOV              r2, #0x00000000
 2695 000024F0 E3A03000        MOV              r3, #0x00000000
 2696 000024F4 E3A04000        MOV              r4, #0x00000000
 2697 000024F8 E3A05000        MOV              r5, #0x00000000
 2698 000024FC E3A06000        MOV              r6, #0x00000000
 2699 00002500 E3A07000        MOV              r7, #0x00000000
 2700 00002504 E3A08000        MOV              r8, #0x00000000
 2701 00002508 E3A09000        MOV              r9, #0x00000000
 2702 0000250C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 2703 00002510 E28AA028        ADD              r10, #40
 2704 00002514 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 2705 00002518 E28AA028        ADD              r10, #40
 2706 0000251C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 2707 00002520 E28AA028        ADD              r10, #40
 2708 00002524 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 2709 00002528 E28AA028        ADD              r10, #40
 2710 0000252C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 2711 00002530 E28AA028        ADD              r10, #40
 2712 00002534 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 2713 00002538 E28AA028        ADD              r10, #40
 2714 0000253C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 2715 00002540 E28AA028        ADD              r10, #40
 2716 00002544 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 2717 00002548 E28AA028        ADD              r10, #40
 2718 0000254C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 2719 00002550 E28AA028        ADD              r10, #40
 2720 00002554 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 2721 00002558 E24AAF5A        SUB              r10, #360
 2722 0000255C         
 2723 0000255C E3A005FE        MOV              r0, #0x3F800000
 2724 00002560 E48A002C        STR              r0, [r10], #44 ;store 1 (1)
 2725 00002564 E48A002C        STR              r0, [r10], #44 ;store 1 (2)
 2726 00002568 E48A002C        STR              r0, [r10], #44 ;store 1 (3)
 2727 0000256C E48A002C        STR              r0, [r10], #44 ;store 1 (4)
 2728 00002570 E48A002C        STR              r0, [r10], #44 ;store 1 (5)
 2729 00002574 E48A002C        STR              r0, [r10], #44 ;store 1 (6)
 2730 00002578 E48A002C        STR              r0, [r10], #44 ;store 1 (7)
 2731 0000257C E48A002C        STR              r0, [r10], #44 ;store 1 (8)
 2732 00002580 E40A0160        STR              r0, [r10], #-352 ;store 1 (9)
 2733 00002584 E3A02202        MOV              r2, 0x20000000
 2734 00002588 E3A03201        MOV              r3, 0x10000000
 2735 0000258C E3A08000        MOV              r8, #0
 2736 00002590 E3A0B203        MOV              r11, #0x30000000
 2737 00002594         
 2738 00002594 EA000036        B                Loop10_1
 2739 00002598                 LTORG
 2740 00002598         
 2741 00002598         Loop10                               ;loop for 10 times
 2742 00002598 E89C03FF        LDMFD            r12, {r0 - r9}



ARM Macro Assembler    Page 57 


 2743 0000259C E28CC028        ADD              r12, #40
 2744 000025A0 E88B03FF        STMEA            r11, {r0 - r9}
 2745 000025A4 E28BB028        ADD              r11, #40
 2746 000025A8 E28AA001        ADD              r10, #1
 2747 000025AC E35A000A        CMP              r10, #10
 2748 000025B0 1AFFFFF8        BNE              Loop10
 2749 000025B4 E24BBE19        SUB              r11, #400
 2750 000025B8         ;store copy of given matrix
 2751 000025B8         
 2752 000025B8 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 2753 000025BC E3A00000        MOV              r0, #0x00000000
 2754 000025C0 E3A01000        MOV              r1, #0x00000000
 2755 000025C4 E3A02000        MOV              r2, #0x00000000
 2756 000025C8 E3A03000        MOV              r3, #0x00000000
 2757 000025CC E3A04000        MOV              r4, #0x00000000
 2758 000025D0 E3A05000        MOV              r5, #0x00000000
 2759 000025D4 E3A06000        MOV              r6, #0x00000000
 2760 000025D8 E3A07000        MOV              r7, #0x00000000
 2761 000025DC E3A08000        MOV              r8, #0x00000000
 2762 000025E0 E3A09000        MOV              r9, #0x00000000
 2763 000025E4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 2764 000025E8 E28AA028        ADD              r10, #40
 2765 000025EC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 2766 000025F0 E28AA028        ADD              r10, #40
 2767 000025F4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 2768 000025F8 E28AA028        ADD              r10, #40
 2769 000025FC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 2770 00002600 E28AA028        ADD              r10, #40
 2771 00002604 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 2772 00002608 E28AA028        ADD              r10, #40
 2773 0000260C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 2774 00002610 E28AA028        ADD              r10, #40
 2775 00002614 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 2776 00002618 E28AA028        ADD              r10, #40
 2777 0000261C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 2778 00002620 E28AA028        ADD              r10, #40
 2779 00002624 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 2780 00002628 E28AA028        ADD              r10, #40
 2781 0000262C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 2782 00002630 E24AAF5A        SUB              r10, #360
 2783 00002634         
 2784 00002634 E3A005FE        MOV              r0, #0x3F800000
 2785 00002638 E48A002C        STR              r0, [r10], #44 ;store 1 (1)
 2786 0000263C E48A002C        STR              r0, [r10], #44 ;store 1 (2)
 2787 00002640 E48A002C        STR              r0, [r10], #44 ;store 1 (3)
 2788 00002644 E48A002C        STR              r0, [r10], #44 ;store 1 (4)
 2789 00002648 E48A002C        STR              r0, [r10], #44 ;store 1 (5)
 2790 0000264C E48A002C        STR              r0, [r10], #44 ;store 1 (6)
 2791 00002650 E48A002C        STR              r0, [r10], #44 ;store 1 (7)
 2792 00002654 E48A002C        STR              r0, [r10], #44 ;store 1 (8)
 2793 00002658 E48A002C        STR              r0, [r10], #44 ;store 1 (9)
 2794 0000265C E40A018C        STR              r0, [r10], #-396 ;store 1 (10)
 2795 00002660 E3A02202        MOV              r2, 0x20000000
 2796 00002664 E3A03201        MOV              r3, 0x10000000
 2797 00002668 E3A08000        MOV              r8, #0
 2798 0000266C E28BB000        ADD              r11, #0
 2799 00002670 EAFFFFFF        B                Loop10_1
 2800 00002674                 LTORG



ARM Macro Assembler    Page 58 


 2801 00002674         
 2802 00002674         Loop10_1
 2803 00002674 E2888028        ADD              r8, #40
 2804 00002678 E69B0008        LDR              r0, [r11], r8 ;(a)
 2805 0000267C E61B1008        LDR              r1, [r11], -r8 ;(d)
 2806 00002680         ;compare a and d
 2807 00002680 E3500000        CMP              r0, #0x00000000
 2808 00002684 03A00001        MOVEQ            r0, #1      ;when a is 0
 2809 00002688 13A00000        MOVNE            r0, #0
 2810 0000268C E3510000        CMP              r1, #0x00000000
 2811 00002690 13A01001        MOVNE            r1, #1      ;when d is non-0
 2812 00002694 03A01000        MOVEQ            r1, #0
 2813 00002698 E0811000        ADD              r1, r0
 2814 0000269C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2815 000026A0 03A06207        MOVEQ            r6, 0x70000000
 2816 000026A4 03A07000        MOVEQ            r7, #0
 2817 000026A8 04867004        STREQ            r7, [r6], #4 ;store i
 2818 000026AC 01A07008        MOVEQ            r7, r8
 2819 000026B0 02877000        ADDEQ            r7, #0
 2820 000026B4 04067004        STREQ            r7, [r6], #-4 ;store j
 2821 000026B8 0B000F84        BLEQ             Eij
 2822 000026BC E69B0008        LDR              r0, [r11], r8 ;(a)
 2823 000026C0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 2824 000026C4         ;recompare a and d
 2825 000026C4 E4821004        STR              r1, [r2], #4
 2826 000026C8 E4020004        STR              r0, [r2], #-4
 2827 000026CC EB001088        BL               Division
 2828 000026D0 E5934000        LDR              r4, [r3]    ;get d/a
 2829 000026D4 E3540102        CMP              r4, #0x80000000
 2830 000026D8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2831 000026DC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2832 000026E0         ;get -d/a
 2833 000026E0 E3A06207        MOV              r6, 0x70000000
 2834 000026E4 E3A07000        MOV              r7, #0
 2835 000026E8 E4867004        STR              r7, [r6], #4 ;store i
 2836 000026EC E1A07008        MOV              r7, r8
 2837 000026F0 E4867004        STR              r7, [r6], #4 ;store j
 2838 000026F4 E4064008        STR              r4, [r6], #-8 ;store k
 2839 000026F8 EB000F02        BL               Eijk
 2840 000026FC E3580F5A        CMP              r8, #360
 2841 00002700 1AFFFFDB        BNE              Loop10_1
 2842 00002704 E24BB000        SUB              r11, #0
 2843 00002708         
 2844 00002708 E3A08000        MOV              r8, #0
 2845 0000270C E28BB02C        ADD              r11, #44
 2846 00002710         Loop10_2
 2847 00002710 E2888028        ADD              r8, #40
 2848 00002714 E69B0008        LDR              r0, [r11], r8 ;(a)
 2849 00002718 E61B1008        LDR              r1, [r11], -r8 ;(d)
 2850 0000271C         ;compare a and d
 2851 0000271C E3500000        CMP              r0, #0x00000000
 2852 00002720 03A00001        MOVEQ            r0, #1      ;when a is 0
 2853 00002724 13A00000        MOVNE            r0, #0
 2854 00002728 E3510000        CMP              r1, #0x00000000
 2855 0000272C 13A01001        MOVNE            r1, #1      ;when d is non-0
 2856 00002730 03A01000        MOVEQ            r1, #0



ARM Macro Assembler    Page 59 


 2857 00002734 E0811000        ADD              r1, r0
 2858 00002738 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2859 0000273C 03A06207        MOVEQ            r6, 0x70000000
 2860 00002740 03A07028        MOVEQ            r7, #40
 2861 00002744 04867004        STREQ            r7, [r6], #4 ;store i
 2862 00002748 01A07008        MOVEQ            r7, r8
 2863 0000274C 02877028        ADDEQ            r7, #40
 2864 00002750 04067004        STREQ            r7, [r6], #-4 ;store j
 2865 00002754 0B000F5D        BLEQ             Eij
 2866 00002758 E69B0008        LDR              r0, [r11], r8 ;(a)
 2867 0000275C E61B1008        LDR              r1, [r11], -r8 ;(d)
 2868 00002760         ;recompare a and d
 2869 00002760 E4821004        STR              r1, [r2], #4
 2870 00002764 E4020004        STR              r0, [r2], #-4
 2871 00002768 EB001061        BL               Division
 2872 0000276C E5934000        LDR              r4, [r3]    ;get d/a
 2873 00002770 E3540102        CMP              r4, #0x80000000
 2874 00002774 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2875 00002778 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2876 0000277C         ;get -d/a
 2877 0000277C E3A06207        MOV              r6, 0x70000000
 2878 00002780 E3A07028        MOV              r7, #40
 2879 00002784 E4867004        STR              r7, [r6], #4 ;store i
 2880 00002788 E1A07008        MOV              r7, r8
 2881 0000278C E2877028        ADD              r7, #40
 2882 00002790 E4867004        STR              r7, [r6], #4 ;store j
 2883 00002794 E4064008        STR              r4, [r6], #-8 ;store k
 2884 00002798 EB000EDA        BL               Eijk
 2885 0000279C E3580D05        CMP              r8, #320
 2886 000027A0 1AFFFFDA        BNE              Loop10_2
 2887 000027A4 E24BB02C        SUB              r11, #44
 2888 000027A8         
 2889 000027A8 E3A08000        MOV              r8, #0
 2890 000027AC E28BB058        ADD              r11, #88
 2891 000027B0         Loop10_3
 2892 000027B0 E2888028        ADD              r8, #40
 2893 000027B4 E69B0008        LDR              r0, [r11], r8 ;(a)
 2894 000027B8 E61B1008        LDR              r1, [r11], -r8 ;(d)
 2895 000027BC         ;compare a and d
 2896 000027BC E3500000        CMP              r0, #0x00000000
 2897 000027C0 03A00001        MOVEQ            r0, #1      ;when a is 0
 2898 000027C4 13A00000        MOVNE            r0, #0
 2899 000027C8 E3510000        CMP              r1, #0x00000000
 2900 000027CC 13A01001        MOVNE            r1, #1      ;when d is non-0
 2901 000027D0 03A01000        MOVEQ            r1, #0
 2902 000027D4 E0811000        ADD              r1, r0
 2903 000027D8 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2904 000027DC 03A06207        MOVEQ            r6, 0x70000000
 2905 000027E0 03A07050        MOVEQ            r7, #80
 2906 000027E4 04867004        STREQ            r7, [r6], #4 ;store i
 2907 000027E8 01A07008        MOVEQ            r7, r8
 2908 000027EC 02877050        ADDEQ            r7, #80
 2909 000027F0 04067004        STREQ            r7, [r6], #-4 ;store j
 2910 000027F4 0B000F35        BLEQ             Eij
 2911 000027F8 E69B0008        LDR              r0, [r11], r8 ;(a)



ARM Macro Assembler    Page 60 


 2912 000027FC E61B1008        LDR              r1, [r11], -r8 ;(d)
 2913 00002800         ;recompare a and d
 2914 00002800 E4821004        STR              r1, [r2], #4
 2915 00002804 E4020004        STR              r0, [r2], #-4
 2916 00002808 EB001039        BL               Division
 2917 0000280C E5934000        LDR              r4, [r3]    ;get d/a
 2918 00002810 E3540102        CMP              r4, #0x80000000
 2919 00002814 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2920 00002818 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 2921 0000281C         ;get -d/a
 2922 0000281C E3A06207        MOV              r6, 0x70000000
 2923 00002820 E3A07050        MOV              r7, #80
 2924 00002824 E4867004        STR              r7, [r6], #4 ;store i
 2925 00002828 E1A07008        MOV              r7, r8
 2926 0000282C E2877050        ADD              r7, #80
 2927 00002830 E4867004        STR              r7, [r6], #4 ;store j
 2928 00002834 E4064008        STR              r4, [r6], #-8 ;store k
 2929 00002838 EB000EB2        BL               Eijk
 2930 0000283C E3580F46        CMP              r8, #280
 2931 00002840 1AFFFFDA        BNE              Loop10_3
 2932 00002844 E24BB058        SUB              r11, #88
 2933 00002848         
 2934 00002848 E3A08000        MOV              r8, #0
 2935 0000284C E28BB084        ADD              r11, #132
 2936 00002850         Loop10_4
 2937 00002850 E2888028        ADD              r8, #40
 2938 00002854 E69B0008        LDR              r0, [r11], r8 ;(a)
 2939 00002858 E61B1008        LDR              r1, [r11], -r8 ;(d)
 2940 0000285C         ;compare a and d
 2941 0000285C E3500000        CMP              r0, #0x00000000
 2942 00002860 03A00001        MOVEQ            r0, #1      ;when a is 0
 2943 00002864 13A00000        MOVNE            r0, #0
 2944 00002868 E3510000        CMP              r1, #0x00000000
 2945 0000286C 13A01001        MOVNE            r1, #1      ;when d is non-0
 2946 00002870 03A01000        MOVEQ            r1, #0
 2947 00002874 E0811000        ADD              r1, r0
 2948 00002878 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2949 0000287C 03A06207        MOVEQ            r6, 0x70000000
 2950 00002880 03A07078        MOVEQ            r7, #120
 2951 00002884 04867004        STREQ            r7, [r6], #4 ;store i
 2952 00002888 01A07008        MOVEQ            r7, r8
 2953 0000288C 02877078        ADDEQ            r7, #120
 2954 00002890 04067004        STREQ            r7, [r6], #-4 ;store j
 2955 00002894 0B000F0D        BLEQ             Eij
 2956 00002898 E69B0008        LDR              r0, [r11], r8 ;(a)
 2957 0000289C E61B1008        LDR              r1, [r11], -r8 ;(d)
 2958 000028A0         ;recompare a and d
 2959 000028A0 E4821004        STR              r1, [r2], #4
 2960 000028A4 E4020004        STR              r0, [r2], #-4
 2961 000028A8 EB001011        BL               Division
 2962 000028AC E5934000        LDR              r4, [r3]    ;get d/a
 2963 000028B0 E3540102        CMP              r4, #0x80000000
 2964 000028B4 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 2965 000028B8 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative



ARM Macro Assembler    Page 61 


 2966 000028BC         ;get -d/a
 2967 000028BC E3A06207        MOV              r6, 0x70000000
 2968 000028C0 E3A07078        MOV              r7, #120
 2969 000028C4 E4867004        STR              r7, [r6], #4 ;store i
 2970 000028C8 E1A07008        MOV              r7, r8
 2971 000028CC E2877078        ADD              r7, #120
 2972 000028D0 E4867004        STR              r7, [r6], #4 ;store j
 2973 000028D4 E4064008        STR              r4, [r6], #-8 ;store k
 2974 000028D8 EB000E8A        BL               Eijk
 2975 000028DC E35800F0        CMP              r8, #240
 2976 000028E0 1AFFFFDA        BNE              Loop10_4
 2977 000028E4 E24BB084        SUB              r11, #132
 2978 000028E8         
 2979 000028E8 E3A08000        MOV              r8, #0
 2980 000028EC E28BB0B0        ADD              r11, #176
 2981 000028F0         Loop10_5
 2982 000028F0 E2888028        ADD              r8, #40
 2983 000028F4 E69B0008        LDR              r0, [r11], r8 ;(a)
 2984 000028F8 E61B1008        LDR              r1, [r11], -r8 ;(d)
 2985 000028FC         ;compare a and d
 2986 000028FC E3500000        CMP              r0, #0x00000000
 2987 00002900 03A00001        MOVEQ            r0, #1      ;when a is 0
 2988 00002904 13A00000        MOVNE            r0, #0
 2989 00002908 E3510000        CMP              r1, #0x00000000
 2990 0000290C 13A01001        MOVNE            r1, #1      ;when d is non-0
 2991 00002910 03A01000        MOVEQ            r1, #0
 2992 00002914 E0811000        ADD              r1, r0
 2993 00002918 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 2994 0000291C 03A06207        MOVEQ            r6, 0x70000000
 2995 00002920 03A070A0        MOVEQ            r7, #160
 2996 00002924 04867004        STREQ            r7, [r6], #4 ;store i
 2997 00002928 01A07008        MOVEQ            r7, r8
 2998 0000292C 028770A0        ADDEQ            r7, #160
 2999 00002930 04067004        STREQ            r7, [r6], #-4 ;store j
 3000 00002934 0B000EE5        BLEQ             Eij
 3001 00002938 E69B0008        LDR              r0, [r11], r8 ;(a)
 3002 0000293C E61B1008        LDR              r1, [r11], -r8 ;(d)
 3003 00002940         ;recompare a and d
 3004 00002940 E4821004        STR              r1, [r2], #4
 3005 00002944 E4020004        STR              r0, [r2], #-4
 3006 00002948 EB000FE9        BL               Division
 3007 0000294C E5934000        LDR              r4, [r3]    ;get d/a
 3008 00002950 E3540102        CMP              r4, #0x80000000
 3009 00002954 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3010 00002958 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3011 0000295C         ;get -d/a
 3012 0000295C E3A06207        MOV              r6, 0x70000000
 3013 00002960 E3A070A0        MOV              r7, #160
 3014 00002964 E4867004        STR              r7, [r6], #4 ;store i
 3015 00002968 E1A07008        MOV              r7, r8
 3016 0000296C E28770A0        ADD              r7, #160
 3017 00002970 E4867004        STR              r7, [r6], #4 ;store j
 3018 00002974 E4064008        STR              r4, [r6], #-8 ;store k
 3019 00002978 EB000E62        BL               Eijk
 3020 0000297C E35800C8        CMP              r8, #200
 3021 00002980 1AFFFFDA        BNE              Loop10_5



ARM Macro Assembler    Page 62 


 3022 00002984 E24BB0B0        SUB              r11, #176
 3023 00002988         
 3024 00002988 E3A08000        MOV              r8, #0
 3025 0000298C E28BB0DC        ADD              r11, #220
 3026 00002990         Loop10_6
 3027 00002990 E2888028        ADD              r8, #40
 3028 00002994 E69B0008        LDR              r0, [r11], r8 ;(a)
 3029 00002998 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3030 0000299C         ;compare a and d
 3031 0000299C E3500000        CMP              r0, #0x00000000
 3032 000029A0 03A00001        MOVEQ            r0, #1      ;when a is 0
 3033 000029A4 13A00000        MOVNE            r0, #0
 3034 000029A8 E3510000        CMP              r1, #0x00000000
 3035 000029AC 13A01001        MOVNE            r1, #1      ;when d is non-0
 3036 000029B0 03A01000        MOVEQ            r1, #0
 3037 000029B4 E0811000        ADD              r1, r0
 3038 000029B8 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3039 000029BC 03A06207        MOVEQ            r6, 0x70000000
 3040 000029C0 03A070C8        MOVEQ            r7, #200
 3041 000029C4 04867004        STREQ            r7, [r6], #4 ;store i
 3042 000029C8 01A07008        MOVEQ            r7, r8
 3043 000029CC 028770C8        ADDEQ            r7, #200
 3044 000029D0 04067004        STREQ            r7, [r6], #-4 ;store j
 3045 000029D4 0B000EBD        BLEQ             Eij
 3046 000029D8 E69B0008        LDR              r0, [r11], r8 ;(a)
 3047 000029DC E61B1008        LDR              r1, [r11], -r8 ;(d)
 3048 000029E0         ;recompare a and d
 3049 000029E0 E4821004        STR              r1, [r2], #4
 3050 000029E4 E4020004        STR              r0, [r2], #-4
 3051 000029E8 EB000FC1        BL               Division
 3052 000029EC E5934000        LDR              r4, [r3]    ;get d/a
 3053 000029F0 E3540102        CMP              r4, #0x80000000
 3054 000029F4 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3055 000029F8 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3056 000029FC         ;get -d/a
 3057 000029FC E3A06207        MOV              r6, 0x70000000
 3058 00002A00 E3A070C8        MOV              r7, #200
 3059 00002A04 E4867004        STR              r7, [r6], #4 ;store i
 3060 00002A08 E1A07008        MOV              r7, r8
 3061 00002A0C E28770C8        ADD              r7, #200
 3062 00002A10 E4867004        STR              r7, [r6], #4 ;store j
 3063 00002A14 E4064008        STR              r4, [r6], #-8 ;store k
 3064 00002A18 EB000E3A        BL               Eijk
 3065 00002A1C E35800A0        CMP              r8, #160
 3066 00002A20 1AFFFFDA        BNE              Loop10_6
 3067 00002A24 E24BB0DC        SUB              r11, #220
 3068 00002A28         
 3069 00002A28 E3A08000        MOV              r8, #0
 3070 00002A2C E28BBF42        ADD              r11, #264
 3071 00002A30         Loop10_7
 3072 00002A30 E2888028        ADD              r8, #40
 3073 00002A34 E69B0008        LDR              r0, [r11], r8 ;(a)
 3074 00002A38 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3075 00002A3C         ;compare a and d
 3076 00002A3C E3500000        CMP              r0, #0x00000000
 3077 00002A40 03A00001        MOVEQ            r0, #1      ;when a is 0



ARM Macro Assembler    Page 63 


 3078 00002A44 13A00000        MOVNE            r0, #0
 3079 00002A48 E3510000        CMP              r1, #0x00000000
 3080 00002A4C 13A01001        MOVNE            r1, #1      ;when d is non-0
 3081 00002A50 03A01000        MOVEQ            r1, #0
 3082 00002A54 E0811000        ADD              r1, r0
 3083 00002A58 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3084 00002A5C 03A06207        MOVEQ            r6, 0x70000000
 3085 00002A60 03A070F0        MOVEQ            r7, #240
 3086 00002A64 04867004        STREQ            r7, [r6], #4 ;store i
 3087 00002A68 01A07008        MOVEQ            r7, r8
 3088 00002A6C 028770F0        ADDEQ            r7, #240
 3089 00002A70 04067004        STREQ            r7, [r6], #-4 ;store j
 3090 00002A74 0B000E95        BLEQ             Eij
 3091 00002A78 E69B0008        LDR              r0, [r11], r8 ;(a)
 3092 00002A7C E61B1008        LDR              r1, [r11], -r8 ;(d)
 3093 00002A80         ;recompare a and d
 3094 00002A80 E4821004        STR              r1, [r2], #4
 3095 00002A84 E4020004        STR              r0, [r2], #-4
 3096 00002A88 EB000F99        BL               Division
 3097 00002A8C E5934000        LDR              r4, [r3]    ;get d/a
 3098 00002A90 E3540102        CMP              r4, #0x80000000
 3099 00002A94 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3100 00002A98 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3101 00002A9C         ;get -d/a
 3102 00002A9C E3A06207        MOV              r6, 0x70000000
 3103 00002AA0 E3A070F0        MOV              r7, #240
 3104 00002AA4 E4867004        STR              r7, [r6], #4 ;store i
 3105 00002AA8 E1A07008        MOV              r7, r8
 3106 00002AAC E28770F0        ADD              r7, #240
 3107 00002AB0 E4867004        STR              r7, [r6], #4 ;store j
 3108 00002AB4 E4064008        STR              r4, [r6], #-8 ;store k
 3109 00002AB8 EB000E12        BL               Eijk
 3110 00002ABC E3580078        CMP              r8, #120
 3111 00002AC0 1AFFFFDA        BNE              Loop10_7
 3112 00002AC4 E24BBF42        SUB              r11, #264
 3113 00002AC8         
 3114 00002AC8 E3A08000        MOV              r8, #0
 3115 00002ACC E28BBF4D        ADD              r11, #308
 3116 00002AD0         Loop10_8
 3117 00002AD0 E2888028        ADD              r8, #40
 3118 00002AD4 E69B0008        LDR              r0, [r11], r8 ;(a)
 3119 00002AD8 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3120 00002ADC         ;compare a and d
 3121 00002ADC E3500000        CMP              r0, #0x00000000
 3122 00002AE0 03A00001        MOVEQ            r0, #1      ;when a is 0
 3123 00002AE4 13A00000        MOVNE            r0, #0
 3124 00002AE8 E3510000        CMP              r1, #0x00000000
 3125 00002AEC 13A01001        MOVNE            r1, #1      ;when d is non-0
 3126 00002AF0 03A01000        MOVEQ            r1, #0
 3127 00002AF4 E0811000        ADD              r1, r0
 3128 00002AF8 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3129 00002AFC 03A06207        MOVEQ            r6, 0x70000000
 3130 00002B00 03A07F46        MOVEQ            r7, #280
 3131 00002B04 04867004        STREQ            r7, [r6], #4 ;store i
 3132 00002B08 01A07008        MOVEQ            r7, r8



ARM Macro Assembler    Page 64 


 3133 00002B0C 02877F46        ADDEQ            r7, #280
 3134 00002B10 04067004        STREQ            r7, [r6], #-4 ;store j
 3135 00002B14 0B000E6D        BLEQ             Eij
 3136 00002B18 E69B0008        LDR              r0, [r11], r8 ;(a)
 3137 00002B1C E61B1008        LDR              r1, [r11], -r8 ;(d)
 3138 00002B20         ;recompare a and d
 3139 00002B20 E4821004        STR              r1, [r2], #4
 3140 00002B24 E4020004        STR              r0, [r2], #-4
 3141 00002B28 EB000F71        BL               Division
 3142 00002B2C E5934000        LDR              r4, [r3]    ;get d/a
 3143 00002B30 E3540102        CMP              r4, #0x80000000
 3144 00002B34 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3145 00002B38 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3146 00002B3C         ;get -d/a
 3147 00002B3C E3A06207        MOV              r6, 0x70000000
 3148 00002B40 E3A07F46        MOV              r7, #280
 3149 00002B44 E4867004        STR              r7, [r6], #4 ;store i
 3150 00002B48 E1A07008        MOV              r7, r8
 3151 00002B4C E2877F46        ADD              r7, #280
 3152 00002B50 E4867004        STR              r7, [r6], #4 ;store j
 3153 00002B54 E4064008        STR              r4, [r6], #-8 ;store k
 3154 00002B58 EB000DEA        BL               Eijk
 3155 00002B5C E3580050        CMP              r8, #80
 3156 00002B60 1AFFFFDA        BNE              Loop10_8
 3157 00002B64 E24BBF4D        SUB              r11, #308
 3158 00002B68         
 3159 00002B68 E3A08000        MOV              r8, #0
 3160 00002B6C E28BBE16        ADD              r11, #352
 3161 00002B70         Loop10_9
 3162 00002B70 E2888028        ADD              r8, #40
 3163 00002B74 E69B0008        LDR              r0, [r11], r8 ;(a)
 3164 00002B78 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3165 00002B7C         ;compare a and d
 3166 00002B7C E3500000        CMP              r0, #0x00000000
 3167 00002B80 03A00001        MOVEQ            r0, #1      ;when a is 0
 3168 00002B84 13A00000        MOVNE            r0, #0
 3169 00002B88 E3510000        CMP              r1, #0x00000000
 3170 00002B8C 13A01001        MOVNE            r1, #1      ;when d is non-0
 3171 00002B90 03A01000        MOVEQ            r1, #0
 3172 00002B94 E0811000        ADD              r1, r0
 3173 00002B98 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3174 00002B9C 03A06207        MOVEQ            r6, 0x70000000
 3175 00002BA0 03A07D05        MOVEQ            r7, #320
 3176 00002BA4 04867004        STREQ            r7, [r6], #4 ;store i
 3177 00002BA8 01A07008        MOVEQ            r7, r8
 3178 00002BAC 02877D05        ADDEQ            r7, #320
 3179 00002BB0 04067004        STREQ            r7, [r6], #-4 ;store j
 3180 00002BB4 0B000E45        BLEQ             Eij
 3181 00002BB8 E69B0008        LDR              r0, [r11], r8 ;(a)
 3182 00002BBC E61B1008        LDR              r1, [r11], -r8 ;(d)
 3183 00002BC0         ;recompare a and d
 3184 00002BC0 E4821004        STR              r1, [r2], #4
 3185 00002BC4 E4020004        STR              r0, [r2], #-4
 3186 00002BC8 EB000F49        BL               Division
 3187 00002BCC E5934000        LDR              r4, [r3]    ;get d/a
 3188 00002BD0 E3540102        CMP              r4, #0x80000000



ARM Macro Assembler    Page 65 


 3189 00002BD4 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3190 00002BD8 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3191 00002BDC         ;get -d/a
 3192 00002BDC E3A06207        MOV              r6, 0x70000000
 3193 00002BE0 E3A07D05        MOV              r7, #320
 3194 00002BE4 E4867004        STR              r7, [r6], #4 ;store i
 3195 00002BE8 E1A07008        MOV              r7, r8
 3196 00002BEC E2877D05        ADD              r7, #320
 3197 00002BF0 E4867004        STR              r7, [r6], #4 ;store j
 3198 00002BF4 E4064008        STR              r4, [r6], #-8 ;store k
 3199 00002BF8 EB000DC2        BL               Eijk
 3200 00002BFC E3580028        CMP              r8, #40
 3201 00002C00 1AFFFFDA        BNE              Loop10_9
 3202 00002C04 E24BBE16        SUB              r11, #352
 3203 00002C08         ;now upper upper triangle
 3204 00002C08         
 3205 00002C08 E3A08F63        MOV              r8, #396
 3206 00002C0C         Loop10_10
 3207 00002C0C E2488028        SUB              r8, #40
 3208 00002C10 E28BBF63        ADD              r11, #396
 3209 00002C14 E41B018C        LDR              r0, [r11], #-396 ;(a)
 3210 00002C18 E08BB008        ADD              r11, r8
 3211 00002C1C E61B1008        LDR              r1, [r11], -r8 ;(d)
 3212 00002C20         ;compare a and d
 3213 00002C20 E3500000        CMP              r0, #0x00000000
 3214 00002C24 03A00001        MOVEQ            r0, #1      ;when a is 0
 3215 00002C28 13A00000        MOVNE            r0, #0
 3216 00002C2C E3510000        CMP              r1, #0x00000000
 3217 00002C30 13A01001        MOVNE            r1, #1      ;when d is non-0
 3218 00002C34 03A01000        MOVEQ            r1, #0
 3219 00002C38 E0811000        ADD              r1, r0
 3220 00002C3C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3221 00002C40 03A06207        MOVEQ            r6, 0x70000000
 3222 00002C44 03A07F5A        MOVEQ            r7, #360
 3223 00002C48 04867004        STREQ            r7, [r6], #4 ;store i
 3224 00002C4C 01A07008        MOVEQ            r7, r8
 3225 00002C50 02477024        SUBEQ            r7, #36
 3226 00002C54 04867004        STREQ            r7, [r6], #4 ;store j
 3227 00002C58 0B000E1C        BLEQ             Eij
 3228 00002C5C E28BBF63        ADD              r11, #396
 3229 00002C60 E41B018C        LDR              r0, [r11], #-396 ;(a)
 3230 00002C64 E08BB008        ADD              r11, r8
 3231 00002C68 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3232 00002C6C         ;recompare a and d
 3233 00002C6C E4821004        STR              r1, [r2], #4
 3234 00002C70 E4020004        STR              r0, [r2], #-4
 3235 00002C74 EB000F1E        BL               Division
 3236 00002C78 E5934000        LDR              r4, [r3]    ;get d/a
 3237 00002C7C E3540102        CMP              r4, #0x80000000
 3238 00002C80 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3239 00002C84 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3240 00002C88         ;get -d/a
 3241 00002C88 E3A06207        MOV              r6, 0x70000000
 3242 00002C8C E3A07F5A        MOV              r7, #360



ARM Macro Assembler    Page 66 


 3243 00002C90 E4867004        STR              r7, [r6], #4 ;store i
 3244 00002C94 E1A07008        MOV              r7, r8
 3245 00002C98 E2477024        SUB              r7, #36
 3246 00002C9C E4867004        STR              r7, [r6], #4 ;store j
 3247 00002CA0 E4064008        STR              r4, [r6], #-8 ;store k
 3248 00002CA4 EB000D97        BL               Eijk
 3249 00002CA8 E3580024        CMP              r8, #36
 3250 00002CAC 1AFFFFD6        BNE              Loop10_10
 3251 00002CB0         
 3252 00002CB0 E3A08E16        MOV              r8, #352
 3253 00002CB4         Loop10_11
 3254 00002CB4 E2488028        SUB              r8, #40
 3255 00002CB8 E28BBE16        ADD              r11, #352
 3256 00002CBC E41B0160        LDR              r0, [r11], #-352 ;(a)
 3257 00002CC0 E08BB008        ADD              r11, r8
 3258 00002CC4 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3259 00002CC8         ;compare a and d
 3260 00002CC8 E3500000        CMP              r0, #0x00000000
 3261 00002CCC 03A00001        MOVEQ            r0, #1      ;when a is 0
 3262 00002CD0 13A00000        MOVNE            r0, #0
 3263 00002CD4 E3510000        CMP              r1, #0x00000000
 3264 00002CD8 13A01001        MOVNE            r1, #1      ;when d is non-0
 3265 00002CDC 03A01000        MOVEQ            r1, #0
 3266 00002CE0 E0811000        ADD              r1, r0
 3267 00002CE4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3268 00002CE8 03A06207        MOVEQ            r6, 0x70000000
 3269 00002CEC 03A07D05        MOVEQ            r7, #320
 3270 00002CF0 04867004        STREQ            r7, [r6], #4 ;store i
 3271 00002CF4 01A07008        MOVEQ            r7, r8
 3272 00002CF8 02477020        SUBEQ            r7, #32
 3273 00002CFC 04867004        STREQ            r7, [r6], #4 ;store j
 3274 00002D00 0B000DF2        BLEQ             Eij
 3275 00002D04 E28BBE16        ADD              r11, #352
 3276 00002D08 E41B0160        LDR              r0, [r11], #-352 ;(a)
 3277 00002D0C E08BB008        ADD              r11, r8
 3278 00002D10 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3279 00002D14         ;recompare a and d
 3280 00002D14 E4821004        STR              r1, [r2], #4
 3281 00002D18 E4020004        STR              r0, [r2], #-4
 3282 00002D1C EB000EF4        BL               Division
 3283 00002D20 E5934000        LDR              r4, [r3]    ;get d/a
 3284 00002D24 E3540102        CMP              r4, #0x80000000
 3285 00002D28 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3286 00002D2C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3287 00002D30         ;get -d/a
 3288 00002D30 E3A06207        MOV              r6, 0x70000000
 3289 00002D34 E3A07D05        MOV              r7, #320
 3290 00002D38 E4867004        STR              r7, [r6], #4 ;store i
 3291 00002D3C E1A07008        MOV              r7, r8
 3292 00002D40 E2477020        SUB              r7, #32
 3293 00002D44 E4867004        STR              r7, [r6], #4 ;store j
 3294 00002D48 E4064008        STR              r4, [r6], #-8 ;store k
 3295 00002D4C EB000D6D        BL               Eijk
 3296 00002D50 E3580020        CMP              r8, #32
 3297 00002D54 1AFFFFD6        BNE              Loop10_11
 3298 00002D58         



ARM Macro Assembler    Page 67 


 3299 00002D58 E3A08F4D        MOV              r8, #308
 3300 00002D5C         Loop10_12
 3301 00002D5C E2488028        SUB              r8, #40
 3302 00002D60 E28BBF4D        ADD              r11, #308
 3303 00002D64 E41B0134        LDR              r0, [r11], #-308 ;(a)
 3304 00002D68 E08BB008        ADD              r11, r8
 3305 00002D6C E61B1008        LDR              r1, [r11], -r8 ;(d)
 3306 00002D70         ;compare a and d
 3307 00002D70 E3500000        CMP              r0, #0x00000000
 3308 00002D74 03A00001        MOVEQ            r0, #1      ;when a is 0
 3309 00002D78 13A00000        MOVNE            r0, #0
 3310 00002D7C E3510000        CMP              r1, #0x00000000
 3311 00002D80 13A01001        MOVNE            r1, #1      ;when d is non-0
 3312 00002D84 03A01000        MOVEQ            r1, #0
 3313 00002D88 E0811000        ADD              r1, r0
 3314 00002D8C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3315 00002D90 03A06207        MOVEQ            r6, 0x70000000
 3316 00002D94 03A07F46        MOVEQ            r7, #280
 3317 00002D98 04867004        STREQ            r7, [r6], #4 ;store i
 3318 00002D9C 01A07008        MOVEQ            r7, r8
 3319 00002DA0 0247701C        SUBEQ            r7, #28
 3320 00002DA4 04867004        STREQ            r7, [r6], #4 ;store j
 3321 00002DA8 0B000DC8        BLEQ             Eij
 3322 00002DAC E28BBF4D        ADD              r11, #308
 3323 00002DB0 E41B0134        LDR              r0, [r11], #-308 ;(a)
 3324 00002DB4 E08BB008        ADD              r11, r8
 3325 00002DB8 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3326 00002DBC         ;recompare a and d
 3327 00002DBC E4821004        STR              r1, [r2], #4
 3328 00002DC0 E4020004        STR              r0, [r2], #-4
 3329 00002DC4 EB000ECA        BL               Division
 3330 00002DC8 E5934000        LDR              r4, [r3]    ;get d/a
 3331 00002DCC E3540102        CMP              r4, #0x80000000
 3332 00002DD0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3333 00002DD4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3334 00002DD8         ;get -d/a
 3335 00002DD8 E3A06207        MOV              r6, 0x70000000
 3336 00002DDC E3A07F46        MOV              r7, #280
 3337 00002DE0 E4867004        STR              r7, [r6], #4 ;store i
 3338 00002DE4 E1A07008        MOV              r7, r8
 3339 00002DE8 E247701C        SUB              r7, #28
 3340 00002DEC E4867004        STR              r7, [r6], #4 ;store j
 3341 00002DF0 E4064008        STR              r4, [r6], #-8 ;store k
 3342 00002DF4 EB000D43        BL               Eijk
 3343 00002DF8 E358001C        CMP              r8, #28
 3344 00002DFC 1AFFFFD6        BNE              Loop10_12
 3345 00002E00         
 3346 00002E00 E3A08F42        MOV              r8, #264
 3347 00002E04         Loop10_13
 3348 00002E04 E2488028        SUB              r8, #40
 3349 00002E08 E28BBF42        ADD              r11, #264
 3350 00002E0C E41B0108        LDR              r0, [r11], #-264 ;(a)
 3351 00002E10 E08BB008        ADD              r11, r8
 3352 00002E14 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3353 00002E18         ;compare a and d
 3354 00002E18 E3500000        CMP              r0, #0x00000000



ARM Macro Assembler    Page 68 


 3355 00002E1C 03A00001        MOVEQ            r0, #1      ;when a is 0
 3356 00002E20 13A00000        MOVNE            r0, #0
 3357 00002E24 E3510000        CMP              r1, #0x00000000
 3358 00002E28 13A01001        MOVNE            r1, #1      ;when d is non-0
 3359 00002E2C 03A01000        MOVEQ            r1, #0
 3360 00002E30 E0811000        ADD              r1, r0
 3361 00002E34 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3362 00002E38 03A06207        MOVEQ            r6, 0x70000000
 3363 00002E3C 03A070F0        MOVEQ            r7, #240
 3364 00002E40 04867004        STREQ            r7, [r6], #4 ;store i
 3365 00002E44 01A07008        MOVEQ            r7, r8
 3366 00002E48 02477018        SUBEQ            r7, #24
 3367 00002E4C 04867004        STREQ            r7, [r6], #4 ;store j
 3368 00002E50 0B000D9E        BLEQ             Eij
 3369 00002E54 E28BBF42        ADD              r11, #264
 3370 00002E58 E41B0108        LDR              r0, [r11], #-264 ;(a)
 3371 00002E5C E08BB008        ADD              r11, r8
 3372 00002E60 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3373 00002E64         ;recompare a and d
 3374 00002E64 E4821004        STR              r1, [r2], #4
 3375 00002E68 E4020004        STR              r0, [r2], #-4
 3376 00002E6C EB000EA0        BL               Division
 3377 00002E70 E5934000        LDR              r4, [r3]    ;get d/a
 3378 00002E74 E3540102        CMP              r4, #0x80000000
 3379 00002E78 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3380 00002E7C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3381 00002E80         ;get -d/a
 3382 00002E80 E3A06207        MOV              r6, 0x70000000
 3383 00002E84 E3A070F0        MOV              r7, #240
 3384 00002E88 E4867004        STR              r7, [r6], #4 ;store i
 3385 00002E8C E1A07008        MOV              r7, r8
 3386 00002E90 E2477018        SUB              r7, #24
 3387 00002E94 E4867004        STR              r7, [r6], #4 ;store j
 3388 00002E98 E4064008        STR              r4, [r6], #-8 ;store k
 3389 00002E9C EB000D19        BL               Eijk
 3390 00002EA0 E3580018        CMP              r8, #24
 3391 00002EA4 1AFFFFD6        BNE              Loop10_13
 3392 00002EA8         
 3393 00002EA8 E3A080DC        MOV              r8, #220
 3394 00002EAC         Loop10_14
 3395 00002EAC E2488028        SUB              r8, #40
 3396 00002EB0 E28BB0DC        ADD              r11, #220
 3397 00002EB4 E41B00DC        LDR              r0, [r11], #-220 ;(a)
 3398 00002EB8 E08BB008        ADD              r11, r8
 3399 00002EBC E61B1008        LDR              r1, [r11], -r8 ;(d)
 3400 00002EC0         ;compare a and d
 3401 00002EC0 E3500000        CMP              r0, #0x00000000
 3402 00002EC4 03A00001        MOVEQ            r0, #1      ;when a is 0
 3403 00002EC8 13A00000        MOVNE            r0, #0
 3404 00002ECC E3510000        CMP              r1, #0x00000000
 3405 00002ED0 13A01001        MOVNE            r1, #1      ;when d is non-0
 3406 00002ED4 03A01000        MOVEQ            r1, #0
 3407 00002ED8 E0811000        ADD              r1, r0
 3408 00002EDC E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3409 00002EE0 03A06207        MOVEQ            r6, 0x70000000



ARM Macro Assembler    Page 69 


 3410 00002EE4 03A070C8        MOVEQ            r7, #200
 3411 00002EE8 04867004        STREQ            r7, [r6], #4 ;store i
 3412 00002EEC 01A07008        MOVEQ            r7, r8
 3413 00002EF0 02477014        SUBEQ            r7, #20
 3414 00002EF4 04867004        STREQ            r7, [r6], #4 ;store j
 3415 00002EF8 0B000D74        BLEQ             Eij
 3416 00002EFC E28BB0DC        ADD              r11, #220
 3417 00002F00 E41B00DC        LDR              r0, [r11], #-220 ;(a)
 3418 00002F04 E08BB008        ADD              r11, r8
 3419 00002F08 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3420 00002F0C         ;recompare a and d
 3421 00002F0C E4821004        STR              r1, [r2], #4
 3422 00002F10 E4020004        STR              r0, [r2], #-4
 3423 00002F14 EB000E76        BL               Division
 3424 00002F18 E5934000        LDR              r4, [r3]    ;get d/a
 3425 00002F1C E3540102        CMP              r4, #0x80000000
 3426 00002F20 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3427 00002F24 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3428 00002F28         ;get -d/a
 3429 00002F28 E3A06207        MOV              r6, 0x70000000
 3430 00002F2C E3A070C8        MOV              r7, #200
 3431 00002F30 E4867004        STR              r7, [r6], #4 ;store i
 3432 00002F34 E1A07008        MOV              r7, r8
 3433 00002F38 E2477014        SUB              r7, #20
 3434 00002F3C E4867004        STR              r7, [r6], #4 ;store j
 3435 00002F40 E4064008        STR              r4, [r6], #-8 ;store k
 3436 00002F44 EB000CEF        BL               Eijk
 3437 00002F48 E3580014        CMP              r8, #20
 3438 00002F4C 1AFFFFD6        BNE              Loop10_14
 3439 00002F50         
 3440 00002F50 E3A080B0        MOV              r8, #176
 3441 00002F54         Loop10_15
 3442 00002F54 E2488028        SUB              r8, #40
 3443 00002F58 E28BB0B0        ADD              r11, #176
 3444 00002F5C E41B00B0        LDR              r0, [r11], #-176 ;(a)
 3445 00002F60 E08BB008        ADD              r11, r8
 3446 00002F64 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3447 00002F68         ;compare a and d
 3448 00002F68 E3500000        CMP              r0, #0x00000000
 3449 00002F6C 03A00001        MOVEQ            r0, #1      ;when a is 0
 3450 00002F70 13A00000        MOVNE            r0, #0
 3451 00002F74 E3510000        CMP              r1, #0x00000000
 3452 00002F78 13A01001        MOVNE            r1, #1      ;when d is non-0
 3453 00002F7C 03A01000        MOVEQ            r1, #0
 3454 00002F80 E0811000        ADD              r1, r0
 3455 00002F84 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3456 00002F88 03A06207        MOVEQ            r6, 0x70000000
 3457 00002F8C 03A070A0        MOVEQ            r7, #160
 3458 00002F90 04867004        STREQ            r7, [r6], #4 ;store i
 3459 00002F94 01A07008        MOVEQ            r7, r8
 3460 00002F98 02477010        SUBEQ            r7, #16
 3461 00002F9C 04867004        STREQ            r7, [r6], #4 ;store j
 3462 00002FA0 0B000D4A        BLEQ             Eij
 3463 00002FA4 E28BB0B0        ADD              r11, #176
 3464 00002FA8 E41B00B0        LDR              r0, [r11], #-176 ;(a)
 3465 00002FAC E08BB008        ADD              r11, r8



ARM Macro Assembler    Page 70 


 3466 00002FB0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3467 00002FB4         ;recompare a and d
 3468 00002FB4 E4821004        STR              r1, [r2], #4
 3469 00002FB8 E4020004        STR              r0, [r2], #-4
 3470 00002FBC EB000E4C        BL               Division
 3471 00002FC0 E5934000        LDR              r4, [r3]    ;get d/a
 3472 00002FC4 E3540102        CMP              r4, #0x80000000
 3473 00002FC8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3474 00002FCC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3475 00002FD0         ;get -d/a
 3476 00002FD0 E3A06207        MOV              r6, 0x70000000
 3477 00002FD4 E3A070A0        MOV              r7, #160
 3478 00002FD8 E4867004        STR              r7, [r6], #4 ;store i
 3479 00002FDC E1A07008        MOV              r7, r8
 3480 00002FE0 E2477010        SUB              r7, #16
 3481 00002FE4 E4867004        STR              r7, [r6], #4 ;store j
 3482 00002FE8 E4064008        STR              r4, [r6], #-8 ;store k
 3483 00002FEC EB000CC5        BL               Eijk
 3484 00002FF0 E3580010        CMP              r8, #16
 3485 00002FF4 1AFFFFD6        BNE              Loop10_15
 3486 00002FF8         
 3487 00002FF8 E3A08084        MOV              r8, #132
 3488 00002FFC         Loop10_16
 3489 00002FFC E2488028        SUB              r8, #40
 3490 00003000 E28BB084        ADD              r11, #132
 3491 00003004 E41B0084        LDR              r0, [r11], #-132 ;(a)
 3492 00003008 E08BB008        ADD              r11, r8
 3493 0000300C E61B1008        LDR              r1, [r11], -r8 ;(d)
 3494 00003010         ;compare a and d
 3495 00003010 E3500000        CMP              r0, #0x00000000
 3496 00003014 03A00001        MOVEQ            r0, #1      ;when a is 0
 3497 00003018 13A00000        MOVNE            r0, #0
 3498 0000301C E3510000        CMP              r1, #0x00000000
 3499 00003020 13A01001        MOVNE            r1, #1      ;when d is non-0
 3500 00003024 03A01000        MOVEQ            r1, #0
 3501 00003028 E0811000        ADD              r1, r0
 3502 0000302C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3503 00003030 03A06207        MOVEQ            r6, 0x70000000
 3504 00003034 03A07078        MOVEQ            r7, #120
 3505 00003038 04867004        STREQ            r7, [r6], #4 ;store i
 3506 0000303C 01A07008        MOVEQ            r7, r8
 3507 00003040 0247700C        SUBEQ            r7, #12
 3508 00003044 04867004        STREQ            r7, [r6], #4 ;store j
 3509 00003048 0B000D20        BLEQ             Eij
 3510 0000304C E28BB084        ADD              r11, #132
 3511 00003050 E41B0084        LDR              r0, [r11], #-132 ;(a)
 3512 00003054 E08BB008        ADD              r11, r8
 3513 00003058 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3514 0000305C         ;recompare a and d
 3515 0000305C E4821004        STR              r1, [r2], #4
 3516 00003060 E4020004        STR              r0, [r2], #-4
 3517 00003064 EB000E22        BL               Division
 3518 00003068 E5934000        LDR              r4, [r3]    ;get d/a
 3519 0000306C E3540102        CMP              r4, #0x80000000
 3520 00003070 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive



ARM Macro Assembler    Page 71 


 3521 00003074 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3522 00003078         ;get -d/a
 3523 00003078 E3A06207        MOV              r6, 0x70000000
 3524 0000307C E3A07078        MOV              r7, #120
 3525 00003080 E4867004        STR              r7, [r6], #4 ;store i
 3526 00003084 E1A07008        MOV              r7, r8
 3527 00003088 E247700C        SUB              r7, #12
 3528 0000308C E4867004        STR              r7, [r6], #4 ;store j
 3529 00003090 E4064008        STR              r4, [r6], #-8 ;store k
 3530 00003094 EB000C9B        BL               Eijk
 3531 00003098 E358000C        CMP              r8, #12
 3532 0000309C 1AFFFFD6        BNE              Loop10_16
 3533 000030A0         
 3534 000030A0 E3A08058        MOV              r8, #88
 3535 000030A4         Loop10_17
 3536 000030A4 E2488028        SUB              r8, #40
 3537 000030A8 E28BB058        ADD              r11, #88
 3538 000030AC E41B0058        LDR              r0, [r11], #-88 ;(a)
 3539 000030B0 E08BB008        ADD              r11, r8
 3540 000030B4 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3541 000030B8         ;compare a and d
 3542 000030B8 E3500000        CMP              r0, #0x00000000
 3543 000030BC 03A00001        MOVEQ            r0, #1      ;when a is 0
 3544 000030C0 13A00000        MOVNE            r0, #0
 3545 000030C4 E3510000        CMP              r1, #0x00000000
 3546 000030C8 13A01001        MOVNE            r1, #1      ;when d is non-0
 3547 000030CC 03A01000        MOVEQ            r1, #0
 3548 000030D0 E0811000        ADD              r1, r0
 3549 000030D4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3550 000030D8 03A06207        MOVEQ            r6, 0x70000000
 3551 000030DC 03A07050        MOVEQ            r7, #80
 3552 000030E0 04867004        STREQ            r7, [r6], #4 ;store i
 3553 000030E4 01A07008        MOVEQ            r7, r8
 3554 000030E8 02477008        SUBEQ            r7, #8
 3555 000030EC 04867004        STREQ            r7, [r6], #4 ;store j
 3556 000030F0 0B000CF6        BLEQ             Eij
 3557 000030F4 E28BB058        ADD              r11, #88
 3558 000030F8 E41B0058        LDR              r0, [r11], #-88 ;(a)
 3559 000030FC E08BB008        ADD              r11, r8
 3560 00003100 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3561 00003104         ;recompare a and d
 3562 00003104 E4821004        STR              r1, [r2], #4
 3563 00003108 E4020004        STR              r0, [r2], #-4
 3564 0000310C EB000DF8        BL               Division
 3565 00003110 E5934000        LDR              r4, [r3]    ;get d/a
 3566 00003114 E3540102        CMP              r4, #0x80000000
 3567 00003118 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3568 0000311C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3569 00003120         ;get -d/a
 3570 00003120 E3A06207        MOV              r6, 0x70000000
 3571 00003124 E3A07050        MOV              r7, #80
 3572 00003128 E4867004        STR              r7, [r6], #4 ;store i
 3573 0000312C E1A07008        MOV              r7, r8
 3574 00003130 E2477008        SUB              r7, #8
 3575 00003134 E4867004        STR              r7, [r6], #4 ;store j



ARM Macro Assembler    Page 72 


 3576 00003138 E4064008        STR              r4, [r6], #-8 ;store k
 3577 0000313C EB000C71        BL               Eijk
 3578 00003140 E3580008        CMP              r8, #8
 3579 00003144 1AFFFFD6        BNE              Loop10_17
 3580 00003148         
 3581 00003148 E3A0802C        MOV              r8, #44
 3582 0000314C         Loop10_18
 3583 0000314C E2488028        SUB              r8, #40
 3584 00003150 E28BB02C        ADD              r11, #44
 3585 00003154 E41B002C        LDR              r0, [r11], #-44 ;(a)
 3586 00003158 E08BB008        ADD              r11, r8
 3587 0000315C E61B1008        LDR              r1, [r11], -r8 ;(d)
 3588 00003160         ;compare a and d
 3589 00003160 E3500000        CMP              r0, #0x00000000
 3590 00003164 03A00001        MOVEQ            r0, #1      ;when a is 0
 3591 00003168 13A00000        MOVNE            r0, #0
 3592 0000316C E3510000        CMP              r1, #0x00000000
 3593 00003170 13A01001        MOVNE            r1, #1      ;when d is non-0
 3594 00003174 03A01000        MOVEQ            r1, #0
 3595 00003178 E0811000        ADD              r1, r0
 3596 0000317C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 3597 00003180 03A06207        MOVEQ            r6, 0x70000000
 3598 00003184 03A07028        MOVEQ            r7, #40
 3599 00003188 04867004        STREQ            r7, [r6], #4 ;store i
 3600 0000318C 01A07008        MOVEQ            r7, r8
 3601 00003190 02477004        SUBEQ            r7, #4
 3602 00003194 04867004        STREQ            r7, [r6], #4 ;store j
 3603 00003198 0B000CCC        BLEQ             Eij
 3604 0000319C E28BB02C        ADD              r11, #44
 3605 000031A0 E41B002C        LDR              r0, [r11], #-44 ;(a)
 3606 000031A4 E08BB008        ADD              r11, r8
 3607 000031A8 E61B1008        LDR              r1, [r11], -r8 ;(d)
 3608 000031AC         ;recompare a and d
 3609 000031AC E4821004        STR              r1, [r2], #4
 3610 000031B0 E4020004        STR              r0, [r2], #-4
 3611 000031B4 EB000DCE        BL               Division
 3612 000031B8 E5934000        LDR              r4, [r3]    ;get d/a
 3613 000031BC E3540102        CMP              r4, #0x80000000
 3614 000031C0 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 3615 000031C4 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 3616 000031C8         ;get -d/a
 3617 000031C8 E3A06207        MOV              r6, 0x70000000
 3618 000031CC E3A07028        MOV              r7, #40
 3619 000031D0 E4867004        STR              r7, [r6], #4 ;store i
 3620 000031D4 E1A07008        MOV              r7, r8
 3621 000031D8 E2477004        SUB              r7, #4
 3622 000031DC E4867004        STR              r7, [r6], #4 ;store j
 3623 000031E0 E4064008        STR              r4, [r6], #-8 ;store k
 3624 000031E4 EB000C47        BL               Eijk
 3625 000031E8 E3580004        CMP              r8, #4
 3626 000031EC 1AFFFFD6        BNE              Loop10_18
 3627 000031F0         ;now diagonal
 3628 000031F0         
 3629 000031F0 E3A0B203        MOV              r11, #0x30000000
 3630 000031F4 E3E0802B        MOV              r8, #-44
 3631 000031F8 E3E0C027        MOV              r12, #-40



ARM Macro Assembler    Page 73 


 3632 000031FC         Loop10_19
 3633 000031FC E288802C        ADD              r8, #44
 3634 00003200 E28CC028        ADD              r12, #40
 3635 00003204 E08BB008        ADD              r11, r8
 3636 00003208 E61B0008        LDR              r0, [r11], -r8 ;a
 3637 0000320C E3A015FE        MOV              r1, #0x3F800000
 3638 00003210 E4821004        STR              r1, [r2], #4
 3639 00003214 E4020004        STR              r0, [r2], #-4
 3640 00003218 EB000DB5        BL               Division
 3641 0000321C E5934000        LDR              r4, [r3]    ;get 1/a
 3642 00003220 E3A06207        MOV              r6, 0x70000000
 3643 00003224 E1A0700C        MOV              r7, r12
 3644 00003228 E4867004        STR              r7, [r6], #4 ;store i
 3645 0000322C E1A07000        MOV              r7, r0
 3646 00003230 E4064004        STR              r4, [r6], #-4 ;store k
 3647 00003234 EB000C73        BL               Eik
 3648 00003238 E3580F63        CMP              r8, #396
 3649 0000323C 1AFFFFEE        BNE              Loop10_19
 3650 00003240         ;now identity
 3651 00003240         
 3652 00003240 E3A00205        MOV              r0, 0x50000000
 3653 00003244 E590B000        LDR              r11, [r0]   ;get size
 3654 00003248 E3A0C206        MOV              r12, 0x60000000
 3655 0000324C E3A0A000        MOV              r10, #0
 3656 00003250 E35B0006        CMP              r11, #6
 3657 00003254 03A0B206        MOVEQ            r11, 0x60000000
 3658 00003258 0A000009        BEQ              Loop6_2
 3659 0000325C E35B0007        CMP              r11, #7
 3660 00003260 03A0B206        MOVEQ            r11, 0x60000000
 3661 00003264 0A00000E        BEQ              Loop7_2
 3662 00003268 E35B0008        CMP              r11, #8
 3663 0000326C 03A0B206        MOVEQ            r11, 0x60000000
 3664 00003270 0A000013        BEQ              Loop8_2
 3665 00003274 E35B0009        CMP              r11, #9
 3666 00003278 03A0B206        MOVEQ            r11, 0x60000000
 3667 0000327C 0A000018        BEQ              Loop9_2
 3668 00003280         
 3669 00003280 E3A0F000        MOV              pc, #0      ;Program end
 3670 00003284         
 3671 00003284         Loop6_2                              ;resize (10 -> 6)
 3672 00003284 E28AA001        ADD              r10, #1
 3673 00003288 E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 3674 0000328C E88C003F        STMEA            r12, {r0 - r5} ;smaller
 3675 00003290 E28CC018        ADD              r12, #24
 3676 00003294 E28BB028        ADD              r11, #40
 3677 00003298 E35A0006        CMP              r10, #6
 3678 0000329C 1AFFFFF8        BNE              Loop6_2
 3679 000032A0 E3A0F000        MOV              pc, #0      ;Program end
 3680 000032A4         
 3681 000032A4         Loop7_2                              ;resize (10 -> 7)
 3682 000032A4 E28AA001        ADD              r10, #1
 3683 000032A8 E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 3684 000032AC E88C007F        STMEA            r12, {r0 - r6} ;smaller
 3685 000032B0 E28CC01C        ADD              r12, #28
 3686 000032B4 E28BB028        ADD              r11, #40
 3687 000032B8 E35A0007        CMP              r10, #7
 3688 000032BC 1AFFFFF8        BNE              Loop7_2
 3689 000032C0 E3A0F000        MOV              pc, #0      ;Program end
 3690 000032C4         



ARM Macro Assembler    Page 74 


 3691 000032C4         Loop8_2                              ;resize (10 -> 8)
 3692 000032C4 E28AA001        ADD              r10, #1
 3693 000032C8 E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 3694 000032CC E88C00FF        STMEA            r12, {r0 - r7} ;smaller
 3695 000032D0 E28CC020        ADD              r12, #32
 3696 000032D4 E28BB028        ADD              r11, #40
 3697 000032D8 E35A0008        CMP              r10, #8
 3698 000032DC 1AFFFFF8        BNE              Loop8_2
 3699 000032E0 E3A0F000        MOV              pc, #0      ;Program end
 3700 000032E4         
 3701 000032E4         Loop9_2                              ;resize (10 -> 9)
 3702 000032E4 E28AA001        ADD              r10, #1
 3703 000032E8 E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 3704 000032EC E88C01FF        STMEA            r12, {r0 - r8} ;smaller
 3705 000032F0 E28CC024        ADD              r12, #36
 3706 000032F4 E28BB028        ADD              r11, #40
 3707 000032F8 E35A0009        CMP              r10, #9
 3708 000032FC 1AFFFFF8        BNE              Loop9_2
 3709 00003300 E3A0F000        MOV              pc, #0      ;Program end
 3710 00003304         
 3711 00003304         Makeidentity20
 3712 00003304 E59FC060        LDR              r12, =Matrix_data ;r12 = addres
                                                            s of given matrix
 3713 00003308 E49C9004        LDR              r9, [r12], #4 ;get size
 3714 0000330C E3A0B205        MOV              r11, 0x50000000
 3715 00003310 E58B9000        STR              r9, [r11]   ;store size
 3716 00003314 E3A0B203        MOV              r11, 0x30000000 ;r11 = address 
                                                            of first matrix
 3717 00003318 E3A0A000        MOV              r10, #0
 3718 0000331C E359000B        CMP              r9, #11
 3719 00003320 0A000012        BEQ              Loop11
 3720 00003324 E359000C        CMP              r9, #12
 3721 00003328 0A000088        BEQ              Loop12
 3722 0000332C E359000D        CMP              r9, #13
 3723 00003330 0A0000FF        BEQ              Loop13
 3724 00003334 E359000E        CMP              r9, #14
 3725 00003338 0A000177        BEQ              Loop14
 3726 0000333C E359000F        CMP              r9, #15
 3727 00003340 0A0001F0        BEQ              Loop15
 3728 00003344 E3590010        CMP              r9, #16
 3729 00003348 0A00026A        BEQ              Loop16
 3730 0000334C E3590011        CMP              r9, #17
 3731 00003350 0A0002E5        BEQ              Loop17
 3732 00003354 E3590012        CMP              r9, #18
 3733 00003358 0A000361        BEQ              Loop18
 3734 0000335C E3590013        CMP              r9, #19
 3735 00003360 0A0003DE        BEQ              Loop19
 3736 00003364 E3590014        CMP              r9, #20
 3737 00003368 0A00045C        BEQ              Loop20
 3738 0000336C 00000000        LTORG
 3739 00003370         
 3740 00003370         Loop11                               ;loop for 11 times
 3741 00003370 E89C03FF        LDMFD            r12, {r0 - r9}
 3742 00003374 E28CC028        ADD              r12, #40
 3743 00003378 E88B03FF        STMEA            r11, {r0 - r9}
 3744 0000337C E28BB028        ADD              r11, #40
 3745 00003380 E89C0001        LDMFD            r12, {r0}
 3746 00003384 E28CC004        ADD              r12, #4
 3747 00003388 E88B0001        STMEA            r11, {r0}



ARM Macro Assembler    Page 75 


 3748 0000338C E28BB028        ADD              r11, #40
 3749 00003390 E28AA001        ADD              r10, #1
 3750 00003394 E35A000B        CMP              r10, #11
 3751 00003398 1AFFFFF4        BNE              Loop11
 3752 0000339C         ;store copy of given matrix
 3753 0000339C         
 3754 0000339C E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 3755 000033A0 E3A00000        MOV              r0, #0x00000000
 3756 000033A4 E3A01000        MOV              r1, #0x00000000
 3757 000033A8 E3A02000        MOV              r2, #0x00000000
 3758 000033AC E3A03000        MOV              r3, #0x00000000
 3759 000033B0 E3A04000        MOV              r4, #0x00000000
 3760 000033B4 E3A05000        MOV              r5, #0x00000000
 3761 000033B8 E3A06000        MOV              r6, #0x00000000
 3762 000033BC E3A07000        MOV              r7, #0x00000000
 3763 000033C0 E3A08000        MOV              r8, #0x00000000
 3764 000033C4 E3A09000        MOV              r9, #0x00000000
 3765 000033C8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3766 000033CC E28AA028        ADD              r10, #40
 3767 000033D0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 3768 000033D4 E28AA028        ADD              r10, #40
 3769 000033D8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3770 000033DC E28AA028        ADD              r10, #40
 3771 000033E0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 3772 000033E4 E28AA028        ADD              r10, #40
 3773 000033E8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3774 000033EC E28AA028        ADD              r10, #40
 3775 000033F0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 3776 000033F4 E28AA028        ADD              r10, #40
 3777 000033F8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3778 000033FC E28AA028        ADD              r10, #40
 3779 00003400 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 3780 00003404 E28AA028        ADD              r10, #40
 3781 00003408 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3782 0000340C E28AA028        ADD              r10, #40
 3783 00003410 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 3784 00003414 E28AA028        ADD              r10, #40
 3785 00003418 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3786 0000341C E28AA028        ADD              r10, #40
 3787 00003420 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 3788 00003424 E28AA028        ADD              r10, #40
 3789 00003428 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3790 0000342C E28AA028        ADD              r10, #40
 3791 00003430 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 3792 00003434 E28AA028        ADD              r10, #40
 3793 00003438 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3794 0000343C E28AA028        ADD              r10, #40
 3795 00003440 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 3796 00003444 E28AA028        ADD              r10, #40
 3797 00003448 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3798 0000344C E28AA028        ADD              r10, #40
 3799 00003450 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 3800 00003454 E28AA028        ADD              r10, #40
 3801 00003458 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3802 0000345C E28AA028        ADD              r10, #40
 3803 00003460 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 3804 00003464 E28AA028        ADD              r10, #40
 3805 00003468 E88A03FF        STMEA            r10, {r0 - r9} ;store 0



ARM Macro Assembler    Page 76 


 3806 0000346C E28AA028        ADD              r10, #40
 3807 00003470 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 3808 00003474 E28AA028        ADD              r10, #40
 3809 00003478 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3810 0000347C E28AA028        ADD              r10, #40
 3811 00003480 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 3812 00003484 E28AA028        ADD              r10, #40
 3813 00003488 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3814 0000348C E28AA028        ADD              r10, #40
 3815 00003490 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 3816 00003494 E28AA028        ADD              r10, #40
 3817 00003498 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3818 0000349C E28AA028        ADD              r10, #40
 3819 000034A0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 3820 000034A4 E28AA028        ADD              r10, #40
 3821 000034A8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3822 000034AC E28AA028        ADD              r10, #40
 3823 000034B0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 3824 000034B4 E28AA028        ADD              r10, #40
 3825 000034B8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3826 000034BC E28AA028        ADD              r10, #40
 3827 000034C0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 3828 000034C4 E28AA028        ADD              r10, #40
 3829 000034C8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3830 000034CC E28AA028        ADD              r10, #40
 3831 000034D0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 3832 000034D4 E28AA028        ADD              r10, #40
 3833 000034D8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3834 000034DC E28AA028        ADD              r10, #40
 3835 000034E0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 3836 000034E4 E28AA028        ADD              r10, #40
 3837 000034E8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3838 000034EC E28AA028        ADD              r10, #40
 3839 000034F0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 3840 000034F4 E28AA028        ADD              r10, #40
 3841 000034F8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3842 000034FC E28AA028        ADD              r10, #40
 3843 00003500 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 3844 00003504 E28AA028        ADD              r10, #40
 3845 00003508 E24AAD19        SUB              r10, #1600
 3846 0000350C         
 3847 0000350C E3A005FE        MOV              r0, #0x3F800000
 3848 00003510 E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 3849 00003514 E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 3850 00003518 E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 3851 0000351C E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 3852 00003520 E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 3853 00003524 E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 3854 00003528 E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 3855 0000352C E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 3856 00003530 E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 3857 00003534 E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 3858 00003538 E40A0348        STR              r0, [r10], #-840 ;store 1 (11)
 3859 0000353C         
 3860 0000353C E3A02202        MOV              r2, 0x20000000
 3861 00003540 E3A03201        MOV              r3, 0x10000000
 3862 00003544 E3A08000        MOV              r8, #0
 3863 00003548 E3A0B203        MOV              r11, #0x30000000
 3864 0000354C EA000465        B                Loop20_1



ARM Macro Assembler    Page 77 


 3865 00003550         
 3866 00003550         Loop12                               ;loop for 12 times
 3867 00003550 E89C03FF        LDMFD            r12, {r0 - r9}
 3868 00003554 E28CC028        ADD              r12, #40
 3869 00003558 E88B03FF        STMEA            r11, {r0 - r9}
 3870 0000355C E28BB028        ADD              r11, #40
 3871 00003560 E89C0003        LDMFD            r12, {r0 - r1}
 3872 00003564 E28CC008        ADD              r12, #8
 3873 00003568 E88B0003        STMEA            r11, {r0 - r1}
 3874 0000356C E28BB028        ADD              r11, #40
 3875 00003570 E28AA001        ADD              r10, #1
 3876 00003574 E35A000C        CMP              r10, #12
 3877 00003578 1AFFFFF4        BNE              Loop12
 3878 0000357C         ;store copy of given matrix
 3879 0000357C         
 3880 0000357C E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 3881 00003580 E3A00000        MOV              r0, #0x00000000
 3882 00003584 E3A01000        MOV              r1, #0x00000000
 3883 00003588 E3A02000        MOV              r2, #0x00000000
 3884 0000358C E3A03000        MOV              r3, #0x00000000
 3885 00003590 E3A04000        MOV              r4, #0x00000000
 3886 00003594 E3A05000        MOV              r5, #0x00000000
 3887 00003598 E3A06000        MOV              r6, #0x00000000
 3888 0000359C E3A07000        MOV              r7, #0x00000000
 3889 000035A0 E3A08000        MOV              r8, #0x00000000
 3890 000035A4 E3A09000        MOV              r9, #0x00000000
 3891 000035A8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3892 000035AC E28AA028        ADD              r10, #40
 3893 000035B0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 3894 000035B4 E28AA028        ADD              r10, #40
 3895 000035B8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3896 000035BC E28AA028        ADD              r10, #40
 3897 000035C0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 3898 000035C4 E28AA028        ADD              r10, #40
 3899 000035C8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3900 000035CC E28AA028        ADD              r10, #40
 3901 000035D0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 3902 000035D4 E28AA028        ADD              r10, #40
 3903 000035D8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3904 000035DC E28AA028        ADD              r10, #40
 3905 000035E0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 3906 000035E4 E28AA028        ADD              r10, #40
 3907 000035E8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3908 000035EC E28AA028        ADD              r10, #40
 3909 000035F0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 3910 000035F4 E28AA028        ADD              r10, #40
 3911 000035F8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3912 000035FC E28AA028        ADD              r10, #40
 3913 00003600 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 3914 00003604 E28AA028        ADD              r10, #40
 3915 00003608 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3916 0000360C E28AA028        ADD              r10, #40
 3917 00003610 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 3918 00003614 E28AA028        ADD              r10, #40
 3919 00003618 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3920 0000361C E28AA028        ADD              r10, #40
 3921 00003620 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 3922 00003624 E28AA028        ADD              r10, #40



ARM Macro Assembler    Page 78 


 3923 00003628 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3924 0000362C E28AA028        ADD              r10, #40
 3925 00003630 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 3926 00003634 E28AA028        ADD              r10, #40
 3927 00003638 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3928 0000363C E28AA028        ADD              r10, #40
 3929 00003640 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 3930 00003644 E28AA028        ADD              r10, #40
 3931 00003648 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3932 0000364C E28AA028        ADD              r10, #40
 3933 00003650 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 3934 00003654 E28AA028        ADD              r10, #40
 3935 00003658 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3936 0000365C E28AA028        ADD              r10, #40
 3937 00003660 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 3938 00003664 E28AA028        ADD              r10, #40
 3939 00003668 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3940 0000366C E28AA028        ADD              r10, #40
 3941 00003670 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 3942 00003674 E28AA028        ADD              r10, #40
 3943 00003678 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3944 0000367C E28AA028        ADD              r10, #40
 3945 00003680 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 3946 00003684 E28AA028        ADD              r10, #40
 3947 00003688 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3948 0000368C E28AA028        ADD              r10, #40
 3949 00003690 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 3950 00003694 E28AA028        ADD              r10, #40
 3951 00003698 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3952 0000369C E28AA028        ADD              r10, #40
 3953 000036A0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 3954 000036A4 E28AA028        ADD              r10, #40
 3955 000036A8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3956 000036AC E28AA028        ADD              r10, #40
 3957 000036B0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 3958 000036B4 E28AA028        ADD              r10, #40
 3959 000036B8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3960 000036BC E28AA028        ADD              r10, #40
 3961 000036C0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 3962 000036C4 E28AA028        ADD              r10, #40
 3963 000036C8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 3964 000036CC E28AA028        ADD              r10, #40
 3965 000036D0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 3966 000036D4 E28AA028        ADD              r10, #40
 3967 000036D8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 3968 000036DC E28AA028        ADD              r10, #40
 3969 000036E0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 3970 000036E4 E28AA028        ADD              r10, #40
 3971 000036E8 E24AAD19        SUB              r10, #1600
 3972 000036EC         
 3973 000036EC E3A005FE        MOV              r0, #0x3F800000
 3974 000036F0 E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 3975 000036F4 E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 3976 000036F8 E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 3977 000036FC E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 3978 00003700 E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 3979 00003704 E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 3980 00003708 E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 3981 0000370C E48A0054        STR              r0, [r10], #84 ;store 1 (8)



ARM Macro Assembler    Page 79 


 3982 00003710 E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 3983 00003714 E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 3984 00003718 E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 3985 0000371C E40A039C        STR              r0, [r10], #-924 ;store 1 (12)
 3986 00003720         
 3987 00003720 E3A02202        MOV              r2, 0x20000000
 3988 00003724 E3A03201        MOV              r3, 0x10000000
 3989 00003728 E3A08000        MOV              r8, #0
 3990 0000372C E3A0B203        MOV              r11, #0x30000000
 3991 00003730 EA0003EC        B                Loop20_1
 3992 00003734         
 3993 00003734         Loop13                               ;loop for 13 times
 3994 00003734 E89C03FF        LDMFD            r12, {r0 - r9}
 3995 00003738 E28CC028        ADD              r12, #40
 3996 0000373C E88B03FF        STMEA            r11, {r0 - r9}
 3997 00003740 E28BB028        ADD              r11, #40
 3998 00003744 E89C0007        LDMFD            r12, {r0 - r2}
 3999 00003748 E28CC00C        ADD              r12, #12
 4000 0000374C E88B0007        STMEA            r11, {r0 - r2}
 4001 00003750 E28BB028        ADD              r11, #40
 4002 00003754 E28AA001        ADD              r10, #1
 4003 00003758 E35A000D        CMP              r10, #13
 4004 0000375C 1AFFFFF4        BNE              Loop13
 4005 00003760         ;store copy of given matrix
 4006 00003760         
 4007 00003760 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 4008 00003764 E3A00000        MOV              r0, #0x00000000
 4009 00003768 E3A01000        MOV              r1, #0x00000000
 4010 0000376C E3A02000        MOV              r2, #0x00000000
 4011 00003770 E3A03000        MOV              r3, #0x00000000
 4012 00003774 E3A04000        MOV              r4, #0x00000000
 4013 00003778 E3A05000        MOV              r5, #0x00000000
 4014 0000377C E3A06000        MOV              r6, #0x00000000
 4015 00003780 E3A07000        MOV              r7, #0x00000000
 4016 00003784 E3A08000        MOV              r8, #0x00000000
 4017 00003788 E3A09000        MOV              r9, #0x00000000
 4018 0000378C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4019 00003790 E28AA028        ADD              r10, #40
 4020 00003794 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 4021 00003798 E28AA028        ADD              r10, #40
 4022 0000379C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4023 000037A0 E28AA028        ADD              r10, #40
 4024 000037A4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 4025 000037A8 E28AA028        ADD              r10, #40
 4026 000037AC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4027 000037B0 E28AA028        ADD              r10, #40
 4028 000037B4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 4029 000037B8 E28AA028        ADD              r10, #40
 4030 000037BC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4031 000037C0 E28AA028        ADD              r10, #40
 4032 000037C4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 4033 000037C8 E28AA028        ADD              r10, #40
 4034 000037CC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4035 000037D0 E28AA028        ADD              r10, #40
 4036 000037D4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 4037 000037D8 E28AA028        ADD              r10, #40
 4038 000037DC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4039 000037E0 E28AA028        ADD              r10, #40



ARM Macro Assembler    Page 80 


 4040 000037E4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 4041 000037E8 E28AA028        ADD              r10, #40
 4042 000037EC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4043 000037F0 E28AA028        ADD              r10, #40
 4044 000037F4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 4045 000037F8 E28AA028        ADD              r10, #40
 4046 000037FC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4047 00003800 E28AA028        ADD              r10, #40
 4048 00003804 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 4049 00003808 E28AA028        ADD              r10, #40
 4050 0000380C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4051 00003810 E28AA028        ADD              r10, #40
 4052 00003814 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 4053 00003818 E28AA028        ADD              r10, #40
 4054 0000381C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4055 00003820 E28AA028        ADD              r10, #40
 4056 00003824 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 4057 00003828 E28AA028        ADD              r10, #40
 4058 0000382C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4059 00003830 E28AA028        ADD              r10, #40
 4060 00003834 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 4061 00003838 E28AA028        ADD              r10, #40
 4062 0000383C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4063 00003840 E28AA028        ADD              r10, #40
 4064 00003844 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 4065 00003848 E28AA028        ADD              r10, #40
 4066 0000384C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4067 00003850 E28AA028        ADD              r10, #40
 4068 00003854 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 4069 00003858 E28AA028        ADD              r10, #40
 4070 0000385C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4071 00003860 E28AA028        ADD              r10, #40
 4072 00003864 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 4073 00003868 E28AA028        ADD              r10, #40
 4074 0000386C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4075 00003870 E28AA028        ADD              r10, #40
 4076 00003874 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 4077 00003878 E28AA028        ADD              r10, #40
 4078 0000387C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4079 00003880 E28AA028        ADD              r10, #40
 4080 00003884 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 4081 00003888 E28AA028        ADD              r10, #40
 4082 0000388C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4083 00003890 E28AA028        ADD              r10, #40
 4084 00003894 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 4085 00003898 E28AA028        ADD              r10, #40
 4086 0000389C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4087 000038A0 E28AA028        ADD              r10, #40
 4088 000038A4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 4089 000038A8 E28AA028        ADD              r10, #40
 4090 000038AC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4091 000038B0 E28AA028        ADD              r10, #40
 4092 000038B4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 4093 000038B8 E28AA028        ADD              r10, #40
 4094 000038BC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4095 000038C0 E28AA028        ADD              r10, #40
 4096 000038C4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 4097 000038C8 E28AA028        ADD              r10, #40
 4098 000038CC E24AAD19        SUB              r10, #1600



ARM Macro Assembler    Page 81 


 4099 000038D0         
 4100 000038D0 E3A005FE        MOV              r0, #0x3F800000
 4101 000038D4 E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 4102 000038D8 E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 4103 000038DC E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 4104 000038E0 E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 4105 000038E4 E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 4106 000038E8 E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 4107 000038EC E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 4108 000038F0 E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 4109 000038F4 E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 4110 000038F8 E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 4111 000038FC E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 4112 00003900 E48A0054        STR              r0, [r10], #84 ;store 1 (12)
 4113 00003904 E40A03F0        STR              r0, [r10], #-1008 ;store 1 (13)
                                                            
 4114 00003908         
 4115 00003908 E3A02202        MOV              r2, 0x20000000
 4116 0000390C E3A03201        MOV              r3, 0x10000000
 4117 00003910 E3A08000        MOV              r8, #0
 4118 00003914 E3A0B203        MOV              r11, #0x30000000
 4119 00003918 EA000372        B                Loop20_1
 4120 0000391C         
 4121 0000391C         Loop14                               ;loop for 14 times
 4122 0000391C E89C03FF        LDMFD            r12, {r0 - r9}
 4123 00003920 E28CC028        ADD              r12, #40
 4124 00003924 E88B03FF        STMEA            r11, {r0 - r9}
 4125 00003928 E28BB028        ADD              r11, #40
 4126 0000392C E89C000F        LDMFD            r12, {r0 - r3}
 4127 00003930 E28CC010        ADD              r12, #16
 4128 00003934 E88B000F        STMEA            r11, {r0 - r3}
 4129 00003938 E28BB028        ADD              r11, #40
 4130 0000393C E28AA001        ADD              r10, #1
 4131 00003940 E35A000E        CMP              r10, #14
 4132 00003944 1AFFFFF4        BNE              Loop14
 4133 00003948         ;store copy of given matrix
 4134 00003948         
 4135 00003948 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 4136 0000394C E3A00000        MOV              r0, #0x00000000
 4137 00003950 E3A01000        MOV              r1, #0x00000000
 4138 00003954 E3A02000        MOV              r2, #0x00000000
 4139 00003958 E3A03000        MOV              r3, #0x00000000
 4140 0000395C E3A04000        MOV              r4, #0x00000000
 4141 00003960 E3A05000        MOV              r5, #0x00000000
 4142 00003964 E3A06000        MOV              r6, #0x00000000
 4143 00003968 E3A07000        MOV              r7, #0x00000000
 4144 0000396C E3A08000        MOV              r8, #0x00000000
 4145 00003970 E3A09000        MOV              r9, #0x00000000
 4146 00003974 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4147 00003978 E28AA028        ADD              r10, #40
 4148 0000397C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 4149 00003980 E28AA028        ADD              r10, #40
 4150 00003984 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4151 00003988 E28AA028        ADD              r10, #40
 4152 0000398C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 4153 00003990 E28AA028        ADD              r10, #40
 4154 00003994 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4155 00003998 E28AA028        ADD              r10, #40



ARM Macro Assembler    Page 82 


 4156 0000399C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 4157 000039A0 E28AA028        ADD              r10, #40
 4158 000039A4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4159 000039A8 E28AA028        ADD              r10, #40
 4160 000039AC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 4161 000039B0 E28AA028        ADD              r10, #40
 4162 000039B4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4163 000039B8 E28AA028        ADD              r10, #40
 4164 000039BC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 4165 000039C0 E28AA028        ADD              r10, #40
 4166 000039C4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4167 000039C8 E28AA028        ADD              r10, #40
 4168 000039CC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 4169 000039D0 E28AA028        ADD              r10, #40
 4170 000039D4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4171 000039D8 E28AA028        ADD              r10, #40
 4172 000039DC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 4173 000039E0 E28AA028        ADD              r10, #40
 4174 000039E4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4175 000039E8 E28AA028        ADD              r10, #40
 4176 000039EC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 4177 000039F0 E28AA028        ADD              r10, #40
 4178 000039F4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4179 000039F8 E28AA028        ADD              r10, #40
 4180 000039FC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 4181 00003A00 E28AA028        ADD              r10, #40
 4182 00003A04 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4183 00003A08 E28AA028        ADD              r10, #40
 4184 00003A0C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 4185 00003A10 E28AA028        ADD              r10, #40
 4186 00003A14 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4187 00003A18 E28AA028        ADD              r10, #40
 4188 00003A1C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 4189 00003A20 E28AA028        ADD              r10, #40
 4190 00003A24 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4191 00003A28 E28AA028        ADD              r10, #40
 4192 00003A2C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 4193 00003A30 E28AA028        ADD              r10, #40
 4194 00003A34 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4195 00003A38 E28AA028        ADD              r10, #40
 4196 00003A3C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 4197 00003A40 E28AA028        ADD              r10, #40
 4198 00003A44 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4199 00003A48 E28AA028        ADD              r10, #40
 4200 00003A4C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 4201 00003A50 E28AA028        ADD              r10, #40
 4202 00003A54 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4203 00003A58 E28AA028        ADD              r10, #40
 4204 00003A5C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 4205 00003A60 E28AA028        ADD              r10, #40
 4206 00003A64 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4207 00003A68 E28AA028        ADD              r10, #40
 4208 00003A6C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 4209 00003A70 E28AA028        ADD              r10, #40
 4210 00003A74 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4211 00003A78 E28AA028        ADD              r10, #40
 4212 00003A7C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 4213 00003A80 E28AA028        ADD              r10, #40
 4214 00003A84 E88A03FF        STMEA            r10, {r0 - r9} ;store 0



ARM Macro Assembler    Page 83 


 4215 00003A88 E28AA028        ADD              r10, #40
 4216 00003A8C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 4217 00003A90 E28AA028        ADD              r10, #40
 4218 00003A94 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4219 00003A98 E28AA028        ADD              r10, #40
 4220 00003A9C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 4221 00003AA0 E28AA028        ADD              r10, #40
 4222 00003AA4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4223 00003AA8 E28AA028        ADD              r10, #40
 4224 00003AAC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 4225 00003AB0 E28AA028        ADD              r10, #40
 4226 00003AB4 E24AAD19        SUB              r10, #1600
 4227 00003AB8         
 4228 00003AB8 E3A005FE        MOV              r0, #0x3F800000
 4229 00003ABC E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 4230 00003AC0 E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 4231 00003AC4 E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 4232 00003AC8 E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 4233 00003ACC E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 4234 00003AD0 E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 4235 00003AD4 E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 4236 00003AD8 E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 4237 00003ADC E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 4238 00003AE0 E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 4239 00003AE4 E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 4240 00003AE8 E48A0054        STR              r0, [r10], #84 ;store 1 (12)
 4241 00003AEC E48A0054        STR              r0, [r10], #84 ;store 1 (13)
 4242 00003AF0 E40A0444        STR              r0, [r10], #-1092 ;store 1 (14)
                                                            
 4243 00003AF4         
 4244 00003AF4 E3A02202        MOV              r2, 0x20000000
 4245 00003AF8 E3A03201        MOV              r3, 0x10000000
 4246 00003AFC E3A08000        MOV              r8, #0
 4247 00003B00 E3A0B203        MOV              r11, #0x30000000
 4248 00003B04 EA0002F7        B                Loop20_1
 4249 00003B08         
 4250 00003B08         Loop15                               ;loop for 15 times
 4251 00003B08 E89C03FF        LDMFD            r12, {r0 - r9}
 4252 00003B0C E28CC028        ADD              r12, #40
 4253 00003B10 E88B03FF        STMEA            r11, {r0 - r9}
 4254 00003B14 E28BB028        ADD              r11, #40
 4255 00003B18 E89C001F        LDMFD            r12, {r0 - r4}
 4256 00003B1C E28CC014        ADD              r12, #20
 4257 00003B20 E88B001F        STMEA            r11, {r0 - r4}
 4258 00003B24 E28BB028        ADD              r11, #40
 4259 00003B28 E28AA001        ADD              r10, #1
 4260 00003B2C E35A000F        CMP              r10, #15
 4261 00003B30 1AFFFFF4        BNE              Loop15
 4262 00003B34         ;store copy of given matrix
 4263 00003B34         
 4264 00003B34 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 4265 00003B38 E3A00000        MOV              r0, #0x00000000
 4266 00003B3C E3A01000        MOV              r1, #0x00000000
 4267 00003B40 E3A02000        MOV              r2, #0x00000000
 4268 00003B44 E3A03000        MOV              r3, #0x00000000
 4269 00003B48 E3A04000        MOV              r4, #0x00000000
 4270 00003B4C E3A05000        MOV              r5, #0x00000000
 4271 00003B50 E3A06000        MOV              r6, #0x00000000



ARM Macro Assembler    Page 84 


 4272 00003B54 E3A07000        MOV              r7, #0x00000000
 4273 00003B58 E3A08000        MOV              r8, #0x00000000
 4274 00003B5C E3A09000        MOV              r9, #0x00000000
 4275 00003B60 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4276 00003B64 E28AA028        ADD              r10, #40
 4277 00003B68 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 4278 00003B6C E28AA028        ADD              r10, #40
 4279 00003B70 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4280 00003B74 E28AA028        ADD              r10, #40
 4281 00003B78 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 4282 00003B7C E28AA028        ADD              r10, #40
 4283 00003B80 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4284 00003B84 E28AA028        ADD              r10, #40
 4285 00003B88 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 4286 00003B8C E28AA028        ADD              r10, #40
 4287 00003B90 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4288 00003B94 E28AA028        ADD              r10, #40
 4289 00003B98 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 4290 00003B9C E28AA028        ADD              r10, #40
 4291 00003BA0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4292 00003BA4 E28AA028        ADD              r10, #40
 4293 00003BA8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 4294 00003BAC E28AA028        ADD              r10, #40
 4295 00003BB0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4296 00003BB4 E28AA028        ADD              r10, #40
 4297 00003BB8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 4298 00003BBC E28AA028        ADD              r10, #40
 4299 00003BC0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4300 00003BC4 E28AA028        ADD              r10, #40
 4301 00003BC8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 4302 00003BCC E28AA028        ADD              r10, #40
 4303 00003BD0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4304 00003BD4 E28AA028        ADD              r10, #40
 4305 00003BD8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 4306 00003BDC E28AA028        ADD              r10, #40
 4307 00003BE0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4308 00003BE4 E28AA028        ADD              r10, #40
 4309 00003BE8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 4310 00003BEC E28AA028        ADD              r10, #40
 4311 00003BF0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4312 00003BF4 E28AA028        ADD              r10, #40
 4313 00003BF8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 4314 00003BFC E28AA028        ADD              r10, #40
 4315 00003C00 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4316 00003C04 E28AA028        ADD              r10, #40
 4317 00003C08 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 4318 00003C0C E28AA028        ADD              r10, #40
 4319 00003C10 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4320 00003C14 E28AA028        ADD              r10, #40
 4321 00003C18 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 4322 00003C1C E28AA028        ADD              r10, #40
 4323 00003C20 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4324 00003C24 E28AA028        ADD              r10, #40
 4325 00003C28 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 4326 00003C2C E28AA028        ADD              r10, #40
 4327 00003C30 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4328 00003C34 E28AA028        ADD              r10, #40
 4329 00003C38 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 4330 00003C3C E28AA028        ADD              r10, #40



ARM Macro Assembler    Page 85 


 4331 00003C40 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4332 00003C44 E28AA028        ADD              r10, #40
 4333 00003C48 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 4334 00003C4C E28AA028        ADD              r10, #40
 4335 00003C50 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4336 00003C54 E28AA028        ADD              r10, #40
 4337 00003C58 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 4338 00003C5C E28AA028        ADD              r10, #40
 4339 00003C60 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4340 00003C64 E28AA028        ADD              r10, #40
 4341 00003C68 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 4342 00003C6C E28AA028        ADD              r10, #40
 4343 00003C70 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4344 00003C74 E28AA028        ADD              r10, #40
 4345 00003C78 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 4346 00003C7C E28AA028        ADD              r10, #40
 4347 00003C80 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4348 00003C84 E28AA028        ADD              r10, #40
 4349 00003C88 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 4350 00003C8C E28AA028        ADD              r10, #40
 4351 00003C90 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4352 00003C94 E28AA028        ADD              r10, #40
 4353 00003C98 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 4354 00003C9C E28AA028        ADD              r10, #40
 4355 00003CA0 E24AAD19        SUB              r10, #1600
 4356 00003CA4         
 4357 00003CA4 E3A005FE        MOV              r0, #0x3F800000
 4358 00003CA8 E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 4359 00003CAC E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 4360 00003CB0 E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 4361 00003CB4 E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 4362 00003CB8 E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 4363 00003CBC E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 4364 00003CC0 E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 4365 00003CC4 E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 4366 00003CC8 E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 4367 00003CCC E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 4368 00003CD0 E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 4369 00003CD4 E48A0054        STR              r0, [r10], #84 ;store 1 (12)
 4370 00003CD8 E48A0054        STR              r0, [r10], #84 ;store 1 (13)
 4371 00003CDC E48A0054        STR              r0, [r10], #84 ;store 1 (14)
 4372 00003CE0 E40A0498        STR              r0, [r10], #-1176 ;store 1 (15)
                                                            
 4373 00003CE4         
 4374 00003CE4 E3A02202        MOV              r2, 0x20000000
 4375 00003CE8 E3A03201        MOV              r3, 0x10000000
 4376 00003CEC E3A08000        MOV              r8, #0
 4377 00003CF0 E3A0B203        MOV              r11, #0x30000000
 4378 00003CF4 EA00027B        B                Loop20_1
 4379 00003CF8         
 4380 00003CF8         Loop16                               ;loop for 16 times
 4381 00003CF8 E89C03FF        LDMFD            r12, {r0 - r9}
 4382 00003CFC E28CC028        ADD              r12, #40
 4383 00003D00 E88B03FF        STMEA            r11, {r0 - r9}
 4384 00003D04 E28BB028        ADD              r11, #40
 4385 00003D08 E89C003F        LDMFD            r12, {r0 - r5}
 4386 00003D0C E28CC018        ADD              r12, #24
 4387 00003D10 E88B003F        STMEA            r11, {r0 - r5}
 4388 00003D14 E28BB028        ADD              r11, #40



ARM Macro Assembler    Page 86 


 4389 00003D18 E28AA001        ADD              r10, #1
 4390 00003D1C E35A0010        CMP              r10, #16
 4391 00003D20 1AFFFFF4        BNE              Loop16
 4392 00003D24         ;store copy of given matrix
 4393 00003D24         
 4394 00003D24 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 4395 00003D28 E3A00000        MOV              r0, #0x00000000
 4396 00003D2C E3A01000        MOV              r1, #0x00000000
 4397 00003D30 E3A02000        MOV              r2, #0x00000000
 4398 00003D34 E3A03000        MOV              r3, #0x00000000
 4399 00003D38 E3A04000        MOV              r4, #0x00000000
 4400 00003D3C E3A05000        MOV              r5, #0x00000000
 4401 00003D40 E3A06000        MOV              r6, #0x00000000
 4402 00003D44 E3A07000        MOV              r7, #0x00000000
 4403 00003D48 E3A08000        MOV              r8, #0x00000000
 4404 00003D4C E3A09000        MOV              r9, #0x00000000
 4405 00003D50 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4406 00003D54 E28AA028        ADD              r10, #40
 4407 00003D58 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 4408 00003D5C E28AA028        ADD              r10, #40
 4409 00003D60 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4410 00003D64 E28AA028        ADD              r10, #40
 4411 00003D68 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 4412 00003D6C E28AA028        ADD              r10, #40
 4413 00003D70 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4414 00003D74 E28AA028        ADD              r10, #40
 4415 00003D78 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 4416 00003D7C E28AA028        ADD              r10, #40
 4417 00003D80 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4418 00003D84 E28AA028        ADD              r10, #40
 4419 00003D88 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 4420 00003D8C E28AA028        ADD              r10, #40
 4421 00003D90 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4422 00003D94 E28AA028        ADD              r10, #40
 4423 00003D98 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 4424 00003D9C E28AA028        ADD              r10, #40
 4425 00003DA0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4426 00003DA4 E28AA028        ADD              r10, #40
 4427 00003DA8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 4428 00003DAC E28AA028        ADD              r10, #40
 4429 00003DB0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4430 00003DB4 E28AA028        ADD              r10, #40
 4431 00003DB8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 4432 00003DBC E28AA028        ADD              r10, #40
 4433 00003DC0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4434 00003DC4 E28AA028        ADD              r10, #40
 4435 00003DC8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 4436 00003DCC E28AA028        ADD              r10, #40
 4437 00003DD0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4438 00003DD4 E28AA028        ADD              r10, #40
 4439 00003DD8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 4440 00003DDC E28AA028        ADD              r10, #40
 4441 00003DE0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4442 00003DE4 E28AA028        ADD              r10, #40
 4443 00003DE8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 4444 00003DEC E28AA028        ADD              r10, #40
 4445 00003DF0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4446 00003DF4 E28AA028        ADD              r10, #40



ARM Macro Assembler    Page 87 


 4447 00003DF8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 4448 00003DFC E28AA028        ADD              r10, #40
 4449 00003E00 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4450 00003E04 E28AA028        ADD              r10, #40
 4451 00003E08 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 4452 00003E0C E28AA028        ADD              r10, #40
 4453 00003E10 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4454 00003E14 E28AA028        ADD              r10, #40
 4455 00003E18 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 4456 00003E1C E28AA028        ADD              r10, #40
 4457 00003E20 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4458 00003E24 E28AA028        ADD              r10, #40
 4459 00003E28 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 4460 00003E2C E28AA028        ADD              r10, #40
 4461 00003E30 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4462 00003E34 E28AA028        ADD              r10, #40
 4463 00003E38 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 4464 00003E3C E28AA028        ADD              r10, #40
 4465 00003E40 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4466 00003E44 E28AA028        ADD              r10, #40
 4467 00003E48 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 4468 00003E4C E28AA028        ADD              r10, #40
 4469 00003E50 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4470 00003E54 E28AA028        ADD              r10, #40
 4471 00003E58 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 4472 00003E5C E28AA028        ADD              r10, #40
 4473 00003E60 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4474 00003E64 E28AA028        ADD              r10, #40
 4475 00003E68 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 4476 00003E6C E28AA028        ADD              r10, #40
 4477 00003E70 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4478 00003E74 E28AA028        ADD              r10, #40
 4479 00003E78 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 4480 00003E7C E28AA028        ADD              r10, #40
 4481 00003E80 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4482 00003E84 E28AA028        ADD              r10, #40
 4483 00003E88 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 4484 00003E8C E28AA028        ADD              r10, #40
 4485 00003E90 E24AAD19        SUB              r10, #1600
 4486 00003E94         
 4487 00003E94 E3A005FE        MOV              r0, #0x3F800000
 4488 00003E98 E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 4489 00003E9C E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 4490 00003EA0 E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 4491 00003EA4 E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 4492 00003EA8 E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 4493 00003EAC E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 4494 00003EB0 E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 4495 00003EB4 E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 4496 00003EB8 E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 4497 00003EBC E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 4498 00003EC0 E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 4499 00003EC4 E48A0054        STR              r0, [r10], #84 ;store 1 (12)
 4500 00003EC8 E48A0054        STR              r0, [r10], #84 ;store 1 (13)
 4501 00003ECC E48A0054        STR              r0, [r10], #84 ;store 1 (14)
 4502 00003ED0 E48A0054        STR              r0, [r10], #84 ;store 1 (15)
 4503 00003ED4 E40A04EC        STR              r0, [r10], #-1260 ;store 1 (16)
                                                            
 4504 00003ED8         



ARM Macro Assembler    Page 88 


 4505 00003ED8 E3A02202        MOV              r2, 0x20000000
 4506 00003EDC E3A03201        MOV              r3, 0x10000000
 4507 00003EE0 E3A08000        MOV              r8, #0
 4508 00003EE4 E3A0B203        MOV              r11, #0x30000000
 4509 00003EE8 EA0001FE        B                Loop20_1
 4510 00003EEC         
 4511 00003EEC         Loop17                               ;loop for 17 times
 4512 00003EEC E89C03FF        LDMFD            r12, {r0 - r9}
 4513 00003EF0 E28CC028        ADD              r12, #40
 4514 00003EF4 E88B03FF        STMEA            r11, {r0 - r9}
 4515 00003EF8 E28BB028        ADD              r11, #40
 4516 00003EFC E89C007F        LDMFD            r12, {r0 - r6}
 4517 00003F00 E28CC01C        ADD              r12, #28
 4518 00003F04 E88B007F        STMEA            r11, {r0 - r6}
 4519 00003F08 E28BB028        ADD              r11, #40
 4520 00003F0C E28AA001        ADD              r10, #1
 4521 00003F10 E35A0011        CMP              r10, #17
 4522 00003F14 1AFFFFF4        BNE              Loop17
 4523 00003F18         ;store copy of given matrix
 4524 00003F18         
 4525 00003F18 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 4526 00003F1C E3A00000        MOV              r0, #0x00000000
 4527 00003F20 E3A01000        MOV              r1, #0x00000000
 4528 00003F24 E3A02000        MOV              r2, #0x00000000
 4529 00003F28 E3A03000        MOV              r3, #0x00000000
 4530 00003F2C E3A04000        MOV              r4, #0x00000000
 4531 00003F30 E3A05000        MOV              r5, #0x00000000
 4532 00003F34 E3A06000        MOV              r6, #0x00000000
 4533 00003F38 E3A07000        MOV              r7, #0x00000000
 4534 00003F3C E3A08000        MOV              r8, #0x00000000
 4535 00003F40 E3A09000        MOV              r9, #0x00000000
 4536 00003F44 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4537 00003F48 E28AA028        ADD              r10, #40
 4538 00003F4C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 4539 00003F50 E28AA028        ADD              r10, #40
 4540 00003F54 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4541 00003F58 E28AA028        ADD              r10, #40
 4542 00003F5C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 4543 00003F60 E28AA028        ADD              r10, #40
 4544 00003F64 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4545 00003F68 E28AA028        ADD              r10, #40
 4546 00003F6C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 4547 00003F70 E28AA028        ADD              r10, #40
 4548 00003F74 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4549 00003F78 E28AA028        ADD              r10, #40
 4550 00003F7C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 4551 00003F80 E28AA028        ADD              r10, #40
 4552 00003F84 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4553 00003F88 E28AA028        ADD              r10, #40
 4554 00003F8C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 4555 00003F90 E28AA028        ADD              r10, #40
 4556 00003F94 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4557 00003F98 E28AA028        ADD              r10, #40
 4558 00003F9C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 4559 00003FA0 E28AA028        ADD              r10, #40
 4560 00003FA4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4561 00003FA8 E28AA028        ADD              r10, #40
 4562 00003FAC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)



ARM Macro Assembler    Page 89 


 4563 00003FB0 E28AA028        ADD              r10, #40
 4564 00003FB4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4565 00003FB8 E28AA028        ADD              r10, #40
 4566 00003FBC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 4567 00003FC0 E28AA028        ADD              r10, #40
 4568 00003FC4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4569 00003FC8 E28AA028        ADD              r10, #40
 4570 00003FCC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 4571 00003FD0 E28AA028        ADD              r10, #40
 4572 00003FD4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4573 00003FD8 E28AA028        ADD              r10, #40
 4574 00003FDC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 4575 00003FE0 E28AA028        ADD              r10, #40
 4576 00003FE4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4577 00003FE8 E28AA028        ADD              r10, #40
 4578 00003FEC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 4579 00003FF0 E28AA028        ADD              r10, #40
 4580 00003FF4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4581 00003FF8 E28AA028        ADD              r10, #40
 4582 00003FFC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 4583 00004000 E28AA028        ADD              r10, #40
 4584 00004004 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4585 00004008 E28AA028        ADD              r10, #40
 4586 0000400C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 4587 00004010 E28AA028        ADD              r10, #40
 4588 00004014 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4589 00004018 E28AA028        ADD              r10, #40
 4590 0000401C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 4591 00004020 E28AA028        ADD              r10, #40
 4592 00004024 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4593 00004028 E28AA028        ADD              r10, #40
 4594 0000402C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 4595 00004030 E28AA028        ADD              r10, #40
 4596 00004034 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4597 00004038 E28AA028        ADD              r10, #40
 4598 0000403C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 4599 00004040 E28AA028        ADD              r10, #40
 4600 00004044 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4601 00004048 E28AA028        ADD              r10, #40
 4602 0000404C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 4603 00004050 E28AA028        ADD              r10, #40
 4604 00004054 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4605 00004058 E28AA028        ADD              r10, #40
 4606 0000405C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 4607 00004060 E28AA028        ADD              r10, #40
 4608 00004064 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4609 00004068 E28AA028        ADD              r10, #40
 4610 0000406C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 4611 00004070 E28AA028        ADD              r10, #40
 4612 00004074 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4613 00004078 E28AA028        ADD              r10, #40
 4614 0000407C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 4615 00004080 E28AA028        ADD              r10, #40
 4616 00004084 E24AAD19        SUB              r10, #1600
 4617 00004088         
 4618 00004088 E3A005FE        MOV              r0, #0x3F800000
 4619 0000408C E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 4620 00004090 E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 4621 00004094 E48A0054        STR              r0, [r10], #84 ;store 1 (3)



ARM Macro Assembler    Page 90 


 4622 00004098 E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 4623 0000409C E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 4624 000040A0 E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 4625 000040A4 E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 4626 000040A8 E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 4627 000040AC E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 4628 000040B0 E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 4629 000040B4 E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 4630 000040B8 E48A0054        STR              r0, [r10], #84 ;store 1 (12)
 4631 000040BC E48A0054        STR              r0, [r10], #84 ;store 1 (13)
 4632 000040C0 E48A0054        STR              r0, [r10], #84 ;store 1 (14)
 4633 000040C4 E48A0054        STR              r0, [r10], #84 ;store 1 (15)
 4634 000040C8 E48A0054        STR              r0, [r10], #84 ;store 1 (16)
 4635 000040CC E40A0540        STR              r0, [r10], #-1344 ;store 1 (17)
                                                            
 4636 000040D0         
 4637 000040D0 E3A02202        MOV              r2, 0x20000000
 4638 000040D4 E3A03201        MOV              r3, 0x10000000
 4639 000040D8 E3A08000        MOV              r8, #0
 4640 000040DC E3A0B203        MOV              r11, #0x30000000
 4641 000040E0 EA000180        B                Loop20_1
 4642 000040E4         
 4643 000040E4         Loop18                               ;loop for 18 times
 4644 000040E4 E89C03FF        LDMFD            r12, {r0 - r9}
 4645 000040E8 E28CC028        ADD              r12, #40
 4646 000040EC E88B03FF        STMEA            r11, {r0 - r9}
 4647 000040F0 E28BB028        ADD              r11, #40
 4648 000040F4 E89C00FF        LDMFD            r12, {r0 - r7}
 4649 000040F8 E28CC020        ADD              r12, #32
 4650 000040FC E88B00FF        STMEA            r11, {r0 - r7}
 4651 00004100 E28BB028        ADD              r11, #40
 4652 00004104 E28AA001        ADD              r10, #1
 4653 00004108 E35A0012        CMP              r10, #18
 4654 0000410C 1AFFFFF4        BNE              Loop18
 4655 00004110         ;store copy of given matrix
 4656 00004110         
 4657 00004110 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 4658 00004114 E3A00000        MOV              r0, #0x00000000
 4659 00004118 E3A01000        MOV              r1, #0x00000000
 4660 0000411C E3A02000        MOV              r2, #0x00000000
 4661 00004120 E3A03000        MOV              r3, #0x00000000
 4662 00004124 E3A04000        MOV              r4, #0x00000000
 4663 00004128 E3A05000        MOV              r5, #0x00000000
 4664 0000412C E3A06000        MOV              r6, #0x00000000
 4665 00004130 E3A07000        MOV              r7, #0x00000000
 4666 00004134 E3A08000        MOV              r8, #0x00000000
 4667 00004138 E3A09000        MOV              r9, #0x00000000
 4668 0000413C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4669 00004140 E28AA028        ADD              r10, #40
 4670 00004144 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 4671 00004148 E28AA028        ADD              r10, #40
 4672 0000414C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4673 00004150 E28AA028        ADD              r10, #40
 4674 00004154 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 4675 00004158 E28AA028        ADD              r10, #40
 4676 0000415C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4677 00004160 E28AA028        ADD              r10, #40
 4678 00004164 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)



ARM Macro Assembler    Page 91 


 4679 00004168 E28AA028        ADD              r10, #40
 4680 0000416C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4681 00004170 E28AA028        ADD              r10, #40
 4682 00004174 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 4683 00004178 E28AA028        ADD              r10, #40
 4684 0000417C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4685 00004180 E28AA028        ADD              r10, #40
 4686 00004184 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 4687 00004188 E28AA028        ADD              r10, #40
 4688 0000418C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4689 00004190 E28AA028        ADD              r10, #40
 4690 00004194 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 4691 00004198 E28AA028        ADD              r10, #40
 4692 0000419C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4693 000041A0 E28AA028        ADD              r10, #40
 4694 000041A4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 4695 000041A8 E28AA028        ADD              r10, #40
 4696 000041AC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4697 000041B0 E28AA028        ADD              r10, #40
 4698 000041B4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 4699 000041B8 E28AA028        ADD              r10, #40
 4700 000041BC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4701 000041C0 E28AA028        ADD              r10, #40
 4702 000041C4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 4703 000041C8 E28AA028        ADD              r10, #40
 4704 000041CC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4705 000041D0 E28AA028        ADD              r10, #40
 4706 000041D4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 4707 000041D8 E28AA028        ADD              r10, #40
 4708 000041DC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4709 000041E0 E28AA028        ADD              r10, #40
 4710 000041E4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 4711 000041E8 E28AA028        ADD              r10, #40
 4712 000041EC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4713 000041F0 E28AA028        ADD              r10, #40
 4714 000041F4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 4715 000041F8 E28AA028        ADD              r10, #40
 4716 000041FC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4717 00004200 E28AA028        ADD              r10, #40
 4718 00004204 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 4719 00004208 E28AA028        ADD              r10, #40
 4720 0000420C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4721 00004210 E28AA028        ADD              r10, #40
 4722 00004214 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 4723 00004218 E28AA028        ADD              r10, #40
 4724 0000421C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4725 00004220 E28AA028        ADD              r10, #40
 4726 00004224 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 4727 00004228 E28AA028        ADD              r10, #40
 4728 0000422C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4729 00004230 E28AA028        ADD              r10, #40
 4730 00004234 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 4731 00004238 E28AA028        ADD              r10, #40
 4732 0000423C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4733 00004240 E28AA028        ADD              r10, #40
 4734 00004244 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 4735 00004248 E28AA028        ADD              r10, #40
 4736 0000424C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4737 00004250 E28AA028        ADD              r10, #40



ARM Macro Assembler    Page 92 


 4738 00004254 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 4739 00004258 E28AA028        ADD              r10, #40
 4740 0000425C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4741 00004260 E28AA028        ADD              r10, #40
 4742 00004264 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 4743 00004268 E28AA028        ADD              r10, #40
 4744 0000426C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4745 00004270 E28AA028        ADD              r10, #40
 4746 00004274 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 4747 00004278 E28AA028        ADD              r10, #40
 4748 0000427C E24AAD19        SUB              r10, #1600
 4749 00004280         
 4750 00004280 E3A005FE        MOV              r0, #0x3F800000
 4751 00004284 E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 4752 00004288 E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 4753 0000428C E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 4754 00004290 E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 4755 00004294 E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 4756 00004298 E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 4757 0000429C E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 4758 000042A0 E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 4759 000042A4 E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 4760 000042A8 E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 4761 000042AC E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 4762 000042B0 E48A0054        STR              r0, [r10], #84 ;store 1 (12)
 4763 000042B4 E48A0054        STR              r0, [r10], #84 ;store 1 (13)
 4764 000042B8 E48A0054        STR              r0, [r10], #84 ;store 1 (14)
 4765 000042BC E48A0054        STR              r0, [r10], #84 ;store 1 (15)
 4766 000042C0 E48A0054        STR              r0, [r10], #84 ;store 1 (16)
 4767 000042C4 E48A0054        STR              r0, [r10], #84 ;store 1 (17)
 4768 000042C8 E40A0594        STR              r0, [r10], #-1428 ;store 1 (18)
                                                            
 4769 000042CC         
 4770 000042CC E3A02202        MOV              r2, 0x20000000
 4771 000042D0 E3A03201        MOV              r3, 0x10000000
 4772 000042D4 E3A08000        MOV              r8, #0
 4773 000042D8 E3A0B203        MOV              r11, #0x30000000
 4774 000042DC EA000101        B                Loop20_1
 4775 000042E0         
 4776 000042E0         Loop19                               ;loop for 19 times
 4777 000042E0 E89C03FF        LDMFD            r12, {r0 - r9}
 4778 000042E4 E28CC028        ADD              r12, #40
 4779 000042E8 E88B03FF        STMEA            r11, {r0 - r9}
 4780 000042EC E28BB028        ADD              r11, #40
 4781 000042F0 E89C01FF        LDMFD            r12, {r0 - r8}
 4782 000042F4 E28CC024        ADD              r12, #36
 4783 000042F8 E88B01FF        STMEA            r11, {r0 - r8}
 4784 000042FC E28BB028        ADD              r11, #40
 4785 00004300 E28AA001        ADD              r10, #1
 4786 00004304 E35A0013        CMP              r10, #19
 4787 00004308 1AFFFFF4        BNE              Loop19
 4788 0000430C         ;store copy of given matrix
 4789 0000430C         
 4790 0000430C E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 4791 00004310 E3A00000        MOV              r0, #0x00000000
 4792 00004314 E3A01000        MOV              r1, #0x00000000
 4793 00004318 E3A02000        MOV              r2, #0x00000000
 4794 0000431C E3A03000        MOV              r3, #0x00000000



ARM Macro Assembler    Page 93 


 4795 00004320 E3A04000        MOV              r4, #0x00000000
 4796 00004324 E3A05000        MOV              r5, #0x00000000
 4797 00004328 E3A06000        MOV              r6, #0x00000000
 4798 0000432C E3A07000        MOV              r7, #0x00000000
 4799 00004330 E3A08000        MOV              r8, #0x00000000
 4800 00004334 E3A09000        MOV              r9, #0x00000000
 4801 00004338 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4802 0000433C E28AA028        ADD              r10, #40
 4803 00004340 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 4804 00004344 E28AA028        ADD              r10, #40
 4805 00004348 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4806 0000434C E28AA028        ADD              r10, #40
 4807 00004350 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 4808 00004354 E28AA028        ADD              r10, #40
 4809 00004358 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4810 0000435C E28AA028        ADD              r10, #40
 4811 00004360 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 4812 00004364 E28AA028        ADD              r10, #40
 4813 00004368 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4814 0000436C E28AA028        ADD              r10, #40
 4815 00004370 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 4816 00004374 E28AA028        ADD              r10, #40
 4817 00004378 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4818 0000437C E28AA028        ADD              r10, #40
 4819 00004380 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 4820 00004384 E28AA028        ADD              r10, #40
 4821 00004388 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4822 0000438C E28AA028        ADD              r10, #40
 4823 00004390 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 4824 00004394 E28AA028        ADD              r10, #40
 4825 00004398 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4826 0000439C E28AA028        ADD              r10, #40
 4827 000043A0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 4828 000043A4 E28AA028        ADD              r10, #40
 4829 000043A8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4830 000043AC E28AA028        ADD              r10, #40
 4831 000043B0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 4832 000043B4 E28AA028        ADD              r10, #40
 4833 000043B8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4834 000043BC E28AA028        ADD              r10, #40
 4835 000043C0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 4836 000043C4 E28AA028        ADD              r10, #40
 4837 000043C8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4838 000043CC E28AA028        ADD              r10, #40
 4839 000043D0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 4840 000043D4 E28AA028        ADD              r10, #40
 4841 000043D8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4842 000043DC E28AA028        ADD              r10, #40
 4843 000043E0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 4844 000043E4 E28AA028        ADD              r10, #40
 4845 000043E8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4846 000043EC E28AA028        ADD              r10, #40
 4847 000043F0 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 4848 000043F4 E28AA028        ADD              r10, #40
 4849 000043F8 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4850 000043FC E28AA028        ADD              r10, #40
 4851 00004400 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 4852 00004404 E28AA028        ADD              r10, #40
 4853 00004408 E88A03FF        STMEA            r10, {r0 - r9} ;store 0



ARM Macro Assembler    Page 94 


 4854 0000440C E28AA028        ADD              r10, #40
 4855 00004410 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 4856 00004414 E28AA028        ADD              r10, #40
 4857 00004418 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4858 0000441C E28AA028        ADD              r10, #40
 4859 00004420 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 4860 00004424 E28AA028        ADD              r10, #40
 4861 00004428 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4862 0000442C E28AA028        ADD              r10, #40
 4863 00004430 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 4864 00004434 E28AA028        ADD              r10, #40
 4865 00004438 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4866 0000443C E28AA028        ADD              r10, #40
 4867 00004440 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 4868 00004444 E28AA028        ADD              r10, #40
 4869 00004448 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4870 0000444C E28AA028        ADD              r10, #40
 4871 00004450 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 4872 00004454 E28AA028        ADD              r10, #40
 4873 00004458 E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4874 0000445C E28AA028        ADD              r10, #40
 4875 00004460 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 4876 00004464 E28AA028        ADD              r10, #40
 4877 00004468 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4878 0000446C E28AA028        ADD              r10, #40
 4879 00004470 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 4880 00004474 E28AA028        ADD              r10, #40
 4881 00004478 E24AAD19        SUB              r10, #1600
 4882 0000447C         
 4883 0000447C E3A005FE        MOV              r0, #0x3F800000
 4884 00004480 E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 4885 00004484 E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 4886 00004488 E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 4887 0000448C E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 4888 00004490 E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 4889 00004494 E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 4890 00004498 E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 4891 0000449C E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 4892 000044A0 E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 4893 000044A4 E48A0054        STR              r0, [r10], #84 ;store 1 (10)
 4894 000044A8 E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 4895 000044AC E48A0054        STR              r0, [r10], #84 ;store 1 (12)
 4896 000044B0 E48A0054        STR              r0, [r10], #84 ;store 1 (13)
 4897 000044B4 E48A0054        STR              r0, [r10], #84 ;store 1 (14)
 4898 000044B8 E48A0054        STR              r0, [r10], #84 ;store 1 (15)
 4899 000044BC E48A0054        STR              r0, [r10], #84 ;store 1 (16)
 4900 000044C0 E48A0054        STR              r0, [r10], #84 ;store 1 (17)
 4901 000044C4 E48A0054        STR              r0, [r10], #84 ;store 1 (18)
 4902 000044C8 E40A05E8        STR              r0, [r10], #-1512 ;store 1 (19)
                                                            
 4903 000044CC         
 4904 000044CC E3A02202        MOV              r2, 0x20000000
 4905 000044D0 E3A03201        MOV              r3, 0x10000000
 4906 000044D4 E3A08000        MOV              r8, #0
 4907 000044D8 E3A0B203        MOV              r11, #0x30000000
 4908 000044DC EA000081        B                Loop20_1
 4909 000044E0         
 4910 000044E0         Loop20                               ;loop for 20 times
 4911 000044E0 E89C03FF        LDMFD            r12, {r0 - r9}



ARM Macro Assembler    Page 95 


 4912 000044E4 E28CC028        ADD              r12, #40
 4913 000044E8 E88B03FF        STMEA            r11, {r0 - r9}
 4914 000044EC E28BB028        ADD              r11, #40
 4915 000044F0 E89C03FF        LDMFD            r12, {r0 - r9}
 4916 000044F4 E28CC028        ADD              r12, #40
 4917 000044F8 E88B03FF        STMEA            r11, {r0 - r9}
 4918 000044FC E28BB028        ADD              r11, #40
 4919 00004500 E28AA001        ADD              r10, #1
 4920 00004504 E35A0014        CMP              r10, #20
 4921 00004508 1AFFFFF4        BNE              Loop20
 4922 0000450C E24BBD19        SUB              r11, #1600
 4923 00004510         ;store copy of given matrix
 4924 00004510         
 4925 00004510 E3A0A206        MOV              r10, 0x60000000 ;r10 = address 
                                                            of second matrix
 4926 00004514 E3A00000        MOV              r0, #0x00000000
 4927 00004518 E3A01000        MOV              r1, #0x00000000
 4928 0000451C E3A02000        MOV              r2, #0x00000000
 4929 00004520 E3A03000        MOV              r3, #0x00000000
 4930 00004524 E3A04000        MOV              r4, #0x00000000
 4931 00004528 E3A05000        MOV              r5, #0x00000000
 4932 0000452C E3A06000        MOV              r6, #0x00000000
 4933 00004530 E3A07000        MOV              r7, #0x00000000
 4934 00004534 E3A08000        MOV              r8, #0x00000000
 4935 00004538 E3A09000        MOV              r9, #0x00000000
 4936 0000453C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4937 00004540 E28AA028        ADD              r10, #40
 4938 00004544 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (1)
 4939 00004548 E28AA028        ADD              r10, #40
 4940 0000454C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4941 00004550 E28AA028        ADD              r10, #40
 4942 00004554 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (2)
 4943 00004558 E28AA028        ADD              r10, #40
 4944 0000455C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4945 00004560 E28AA028        ADD              r10, #40
 4946 00004564 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (3)
 4947 00004568 E28AA028        ADD              r10, #40
 4948 0000456C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4949 00004570 E28AA028        ADD              r10, #40
 4950 00004574 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (4)
 4951 00004578 E28AA028        ADD              r10, #40
 4952 0000457C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4953 00004580 E28AA028        ADD              r10, #40
 4954 00004584 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (5)
 4955 00004588 E28AA028        ADD              r10, #40
 4956 0000458C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4957 00004590 E28AA028        ADD              r10, #40
 4958 00004594 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (6)
 4959 00004598 E28AA028        ADD              r10, #40
 4960 0000459C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4961 000045A0 E28AA028        ADD              r10, #40
 4962 000045A4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (7)
 4963 000045A8 E28AA028        ADD              r10, #40
 4964 000045AC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4965 000045B0 E28AA028        ADD              r10, #40
 4966 000045B4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (8)
 4967 000045B8 E28AA028        ADD              r10, #40
 4968 000045BC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4969 000045C0 E28AA028        ADD              r10, #40



ARM Macro Assembler    Page 96 


 4970 000045C4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (9)
 4971 000045C8 E28AA028        ADD              r10, #40
 4972 000045CC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4973 000045D0 E28AA028        ADD              r10, #40
 4974 000045D4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (10)
 4975 000045D8 E28AA028        ADD              r10, #40
 4976 000045DC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4977 000045E0 E28AA028        ADD              r10, #40
 4978 000045E4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (11)
 4979 000045E8 E28AA028        ADD              r10, #40
 4980 000045EC E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4981 000045F0 E28AA028        ADD              r10, #40
 4982 000045F4 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (12)
 4983 000045F8 E28AA028        ADD              r10, #40
 4984 000045FC E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4985 00004600 E28AA028        ADD              r10, #40
 4986 00004604 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (13)
 4987 00004608 E28AA028        ADD              r10, #40
 4988 0000460C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4989 00004610 E28AA028        ADD              r10, #40
 4990 00004614 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (14)
 4991 00004618 E28AA028        ADD              r10, #40
 4992 0000461C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 4993 00004620 E28AA028        ADD              r10, #40
 4994 00004624 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (15)
 4995 00004628 E28AA028        ADD              r10, #40
 4996 0000462C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 4997 00004630 E28AA028        ADD              r10, #40
 4998 00004634 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (16)
 4999 00004638 E28AA028        ADD              r10, #40
 5000 0000463C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 5001 00004640 E28AA028        ADD              r10, #40
 5002 00004644 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (17)
 5003 00004648 E28AA028        ADD              r10, #40
 5004 0000464C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 5005 00004650 E28AA028        ADD              r10, #40
 5006 00004654 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (18)
 5007 00004658 E28AA028        ADD              r10, #40
 5008 0000465C E88A03FF        STMEA            r10, {r0 - r9} ;store 0
 5009 00004660 E28AA028        ADD              r10, #40
 5010 00004664 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (19)
 5011 00004668 E28AA028        ADD              r10, #40
 5012 0000466C E88A03FF        STMEA            r10, {r0 - r9} ;store 0 
 5013 00004670 E28AA028        ADD              r10, #40
 5014 00004674 E88A03FF        STMEA            r10, {r0 - r9} ;store 0 (20)
 5015 00004678 E28AA028        ADD              r10, #40
 5016 0000467C E24AAD19        SUB              r10, #1600
 5017 00004680         
 5018 00004680 E3A005FE        MOV              r0, #0x3F800000
 5019 00004684 E48A0054        STR              r0, [r10], #84 ;store 1 (1)
 5020 00004688 E48A0054        STR              r0, [r10], #84 ;store 1 (2)
 5021 0000468C E48A0054        STR              r0, [r10], #84 ;store 1 (3)
 5022 00004690 E48A0054        STR              r0, [r10], #84 ;store 1 (4)
 5023 00004694 E48A0054        STR              r0, [r10], #84 ;store 1 (5)
 5024 00004698 E48A0054        STR              r0, [r10], #84 ;store 1 (6)
 5025 0000469C E48A0054        STR              r0, [r10], #84 ;store 1 (7)
 5026 000046A0 E48A0054        STR              r0, [r10], #84 ;store 1 (8)
 5027 000046A4 E48A0054        STR              r0, [r10], #84 ;store 1 (9)
 5028 000046A8 E48A0054        STR              r0, [r10], #84 ;store 1 (10)



ARM Macro Assembler    Page 97 


 5029 000046AC E48A0054        STR              r0, [r10], #84 ;store 1 (11)
 5030 000046B0 E48A0054        STR              r0, [r10], #84 ;store 1 (12)
 5031 000046B4 E48A0054        STR              r0, [r10], #84 ;store 1 (13)
 5032 000046B8 E48A0054        STR              r0, [r10], #84 ;store 1 (14)
 5033 000046BC E48A0054        STR              r0, [r10], #84 ;store 1 (15)
 5034 000046C0 E48A0054        STR              r0, [r10], #84 ;store 1 (16)
 5035 000046C4 E48A0054        STR              r0, [r10], #84 ;store 1 (17)
 5036 000046C8 E48A0054        STR              r0, [r10], #84 ;store 1 (18)
 5037 000046CC E48A0054        STR              r0, [r10], #84 ;store 1 (19)
 5038 000046D0 E40A063C        STR              r0, [r10], #-1596 ;store 1 (20)
                                                            
 5039 000046D4         
 5040 000046D4 E3A02202        MOV              r2, 0x20000000
 5041 000046D8 E3A03201        MOV              r3, 0x10000000
 5042 000046DC E3A08000        MOV              r8, #0
 5043 000046E0 E28BB000        ADD              r11, #0
 5044 000046E4 EAFFFFFF        B                Loop20_1
 5045 000046E8         
 5046 000046E8         Loop20_1
 5047 000046E8 E2888050        ADD              r8, #80
 5048 000046EC E69B0008        LDR              r0, [r11], r8 ;(a)
 5049 000046F0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5050 000046F4         ;compare a and d
 5051 000046F4 E3500000        CMP              r0, #0x00000000
 5052 000046F8 03A00001        MOVEQ            r0, #1      ;when a is 0
 5053 000046FC 13A00000        MOVNE            r0, #0
 5054 00004700 E3510000        CMP              r1, #0x00000000
 5055 00004704 13A01001        MOVNE            r1, #1      ;when d is non-0
 5056 00004708 03A01000        MOVEQ            r1, #0
 5057 0000470C E0811000        ADD              r1, r0
 5058 00004710 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5059 00004714 03A06207        MOVEQ            r6, 0x70000000
 5060 00004718 03A07000        MOVEQ            r7, #0
 5061 0000471C 04867004        STREQ            r7, [r6], #4 ;store i
 5062 00004720 01A07008        MOVEQ            r7, r8
 5063 00004724 02877000        ADDEQ            r7, #0
 5064 00004728 04067004        STREQ            r7, [r6], #-4 ;store j
 5065 0000472C 0B000767        BLEQ             Eij
 5066 00004730 E69B0008        LDR              r0, [r11], r8 ;(a)
 5067 00004734 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5068 00004738         ;recompare a and d
 5069 00004738 E4821004        STR              r1, [r2], #4
 5070 0000473C E4020004        STR              r0, [r2], #-4
 5071 00004740 EB00086B        BL               Division
 5072 00004744 E5934000        LDR              r4, [r3]    ;get d/a
 5073 00004748 E3540102        CMP              r4, #0x80000000
 5074 0000474C C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5075 00004750 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5076 00004754         ;get -d/a
 5077 00004754 E3A06207        MOV              r6, 0x70000000
 5078 00004758 E3A07000        MOV              r7, #0
 5079 0000475C E4867004        STR              r7, [r6], #4 ;store i
 5080 00004760 E1A07008        MOV              r7, r8
 5081 00004764 E4867004        STR              r7, [r6], #4 ;store j
 5082 00004768 E4064008        STR              r4, [r6], #-8 ;store k
 5083 0000476C EB0006E5        BL               Eijk



ARM Macro Assembler    Page 98 


 5084 00004770 E3580E5F        CMP              r8, #1520
 5085 00004774 1AFFFFDB        BNE              Loop20_1
 5086 00004778 E24BB000        SUB              r11, #0
 5087 0000477C         
 5088 0000477C E3A08000        MOV              r8, #0
 5089 00004780 E28BB054        ADD              r11, #84
 5090 00004784         Loop20_2
 5091 00004784 E2888050        ADD              r8, #80
 5092 00004788 E69B0008        LDR              r0, [r11], r8 ;(a)
 5093 0000478C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5094 00004790         ;compare a and d
 5095 00004790 E3500000        CMP              r0, #0x00000000
 5096 00004794 03A00001        MOVEQ            r0, #1      ;when a is 0
 5097 00004798 13A00000        MOVNE            r0, #0
 5098 0000479C E3510000        CMP              r1, #0x00000000
 5099 000047A0 13A01001        MOVNE            r1, #1      ;when d is non-0
 5100 000047A4 03A01000        MOVEQ            r1, #0
 5101 000047A8 E0811000        ADD              r1, r0
 5102 000047AC E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5103 000047B0 03A06207        MOVEQ            r6, 0x70000000
 5104 000047B4 03A07050        MOVEQ            r7, #80
 5105 000047B8 04867004        STREQ            r7, [r6], #4 ;store i
 5106 000047BC 01A07008        MOVEQ            r7, r8
 5107 000047C0 02877050        ADDEQ            r7, #80
 5108 000047C4 04067004        STREQ            r7, [r6], #-4 ;store j
 5109 000047C8 0B000740        BLEQ             Eij
 5110 000047CC E69B0008        LDR              r0, [r11], r8 ;(a)
 5111 000047D0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5112 000047D4         ;recompare a and d
 5113 000047D4 E4821004        STR              r1, [r2], #4
 5114 000047D8 E4020004        STR              r0, [r2], #-4
 5115 000047DC EB000844        BL               Division
 5116 000047E0 E5934000        LDR              r4, [r3]    ;get d/a
 5117 000047E4 E3540102        CMP              r4, #0x80000000
 5118 000047E8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5119 000047EC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5120 000047F0         ;get -d/a
 5121 000047F0 E3A06207        MOV              r6, 0x70000000
 5122 000047F4 E3A07050        MOV              r7, #80
 5123 000047F8 E4867004        STR              r7, [r6], #4 ;store i
 5124 000047FC E1A07008        MOV              r7, r8
 5125 00004800 E2877050        ADD              r7, #80
 5126 00004804 E4867004        STR              r7, [r6], #4 ;store j
 5127 00004808 E4064008        STR              r4, [r6], #-8 ;store k
 5128 0000480C EB0006BD        BL               Eijk
 5129 00004810 E3580E5A        CMP              r8, #1440
 5130 00004814 1AFFFFDA        BNE              Loop20_2
 5131 00004818 E24BB054        SUB              r11, #84
 5132 0000481C         
 5133 0000481C E3A08000        MOV              r8, #0
 5134 00004820 E28BB0A8        ADD              r11, #168
 5135 00004824         Loop20_3
 5136 00004824 E2888050        ADD              r8, #80
 5137 00004828 E69B0008        LDR              r0, [r11], r8 ;(a)
 5138 0000482C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5139 00004830         ;compare a and d



ARM Macro Assembler    Page 99 


 5140 00004830 E3500000        CMP              r0, #0x00000000
 5141 00004834 03A00001        MOVEQ            r0, #1      ;when a is 0
 5142 00004838 13A00000        MOVNE            r0, #0
 5143 0000483C E3510000        CMP              r1, #0x00000000
 5144 00004840 13A01001        MOVNE            r1, #1      ;when d is non-0
 5145 00004844 03A01000        MOVEQ            r1, #0
 5146 00004848 E0811000        ADD              r1, r0
 5147 0000484C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5148 00004850 03A06207        MOVEQ            r6, 0x70000000
 5149 00004854 03A070A0        MOVEQ            r7, #160
 5150 00004858 04867004        STREQ            r7, [r6], #4 ;store i
 5151 0000485C 01A07008        MOVEQ            r7, r8
 5152 00004860 028770A0        ADDEQ            r7, #160
 5153 00004864 04067004        STREQ            r7, [r6], #-4 ;store j
 5154 00004868 0B000718        BLEQ             Eij
 5155 0000486C E69B0008        LDR              r0, [r11], r8 ;(a)
 5156 00004870 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5157 00004874         ;recompare a and d
 5158 00004874 E4821004        STR              r1, [r2], #4
 5159 00004878 E4020004        STR              r0, [r2], #-4
 5160 0000487C EB00081C        BL               Division
 5161 00004880 E5934000        LDR              r4, [r3]    ;get d/a
 5162 00004884 E3540102        CMP              r4, #0x80000000
 5163 00004888 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5164 0000488C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5165 00004890         ;get -d/a
 5166 00004890 E3A06207        MOV              r6, 0x70000000
 5167 00004894 E3A070A0        MOV              r7, #160
 5168 00004898 E4867004        STR              r7, [r6], #4 ;store i
 5169 0000489C E1A07008        MOV              r7, r8
 5170 000048A0 E28770A0        ADD              r7, #160
 5171 000048A4 E4867004        STR              r7, [r6], #4 ;store j
 5172 000048A8 E4064008        STR              r4, [r6], #-8 ;store k
 5173 000048AC EB000695        BL               Eijk
 5174 000048B0 E3580E55        CMP              r8, #1360
 5175 000048B4 1AFFFFDA        BNE              Loop20_3
 5176 000048B8 E24BB0A8        SUB              r11, #168
 5177 000048BC         
 5178 000048BC E3A08000        MOV              r8, #0
 5179 000048C0 E28BB0FC        ADD              r11, #252
 5180 000048C4         Loop20_4
 5181 000048C4 E2888050        ADD              r8, #80
 5182 000048C8 E69B0008        LDR              r0, [r11], r8 ;(a)
 5183 000048CC E61B1008        LDR              r1, [r11], -r8 ;(d)
 5184 000048D0         ;compare a and d
 5185 000048D0 E3500000        CMP              r0, #0x00000000
 5186 000048D4 03A00001        MOVEQ            r0, #1      ;when a is 0
 5187 000048D8 13A00000        MOVNE            r0, #0
 5188 000048DC E3510000        CMP              r1, #0x00000000
 5189 000048E0 13A01001        MOVNE            r1, #1      ;when d is non-0
 5190 000048E4 03A01000        MOVEQ            r1, #0
 5191 000048E8 E0811000        ADD              r1, r0
 5192 000048EC E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5193 000048F0 03A06207        MOVEQ            r6, 0x70000000
 5194 000048F4 03A070F0        MOVEQ            r7, #240



ARM Macro Assembler    Page 100 


 5195 000048F8 04867004        STREQ            r7, [r6], #4 ;store i
 5196 000048FC 01A07008        MOVEQ            r7, r8
 5197 00004900 028770F0        ADDEQ            r7, #240
 5198 00004904 04067004        STREQ            r7, [r6], #-4 ;store j
 5199 00004908 0B0006F0        BLEQ             Eij
 5200 0000490C E69B0008        LDR              r0, [r11], r8 ;(a)
 5201 00004910 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5202 00004914         ;recompare a and d
 5203 00004914 E4821004        STR              r1, [r2], #4
 5204 00004918 E4020004        STR              r0, [r2], #-4
 5205 0000491C EB0007F4        BL               Division
 5206 00004920 E5934000        LDR              r4, [r3]    ;get d/a
 5207 00004924 E3540102        CMP              r4, #0x80000000
 5208 00004928 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5209 0000492C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5210 00004930         ;get -d/a
 5211 00004930 E3A06207        MOV              r6, 0x70000000
 5212 00004934 E3A070F0        MOV              r7, #240
 5213 00004938 E4867004        STR              r7, [r6], #4 ;store i
 5214 0000493C E1A07008        MOV              r7, r8
 5215 00004940 E28770F0        ADD              r7, #240
 5216 00004944 E4867004        STR              r7, [r6], #4 ;store j
 5217 00004948 E4064008        STR              r4, [r6], #-8 ;store k
 5218 0000494C EB00066D        BL               Eijk
 5219 00004950 E3580C05        CMP              r8, #1280
 5220 00004954 1AFFFFDA        BNE              Loop20_4
 5221 00004958 E24BB0FC        SUB              r11, #252
 5222 0000495C         
 5223 0000495C E3A08000        MOV              r8, #0
 5224 00004960 E28BBE15        ADD              r11, #336
 5225 00004964         Loop20_5
 5226 00004964 E2888050        ADD              r8, #80
 5227 00004968 E69B0008        LDR              r0, [r11], r8 ;(a)
 5228 0000496C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5229 00004970         ;compare a and d
 5230 00004970 E3500000        CMP              r0, #0x00000000
 5231 00004974 03A00001        MOVEQ            r0, #1      ;when a is 0
 5232 00004978 13A00000        MOVNE            r0, #0
 5233 0000497C E3510000        CMP              r1, #0x00000000
 5234 00004980 13A01001        MOVNE            r1, #1      ;when d is non-0
 5235 00004984 03A01000        MOVEQ            r1, #0
 5236 00004988 E0811000        ADD              r1, r0
 5237 0000498C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5238 00004990 03A06207        MOVEQ            r6, 0x70000000
 5239 00004994 03A07D05        MOVEQ            r7, #320
 5240 00004998 04867004        STREQ            r7, [r6], #4 ;store i
 5241 0000499C 01A07008        MOVEQ            r7, r8
 5242 000049A0 02877D05        ADDEQ            r7, #320
 5243 000049A4 04067004        STREQ            r7, [r6], #-4 ;store j
 5244 000049A8 0B0006C8        BLEQ             Eij
 5245 000049AC E69B0008        LDR              r0, [r11], r8 ;(a)
 5246 000049B0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5247 000049B4         ;recompare a and d
 5248 000049B4 E4821004        STR              r1, [r2], #4
 5249 000049B8 E4020004        STR              r0, [r2], #-4
 5250 000049BC EB0007CC        BL               Division



ARM Macro Assembler    Page 101 


 5251 000049C0 E5934000        LDR              r4, [r3]    ;get d/a
 5252 000049C4 E3540102        CMP              r4, #0x80000000
 5253 000049C8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5254 000049CC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5255 000049D0         ;get -d/a
 5256 000049D0 E3A06207        MOV              r6, 0x70000000
 5257 000049D4 E3A07D05        MOV              r7, #320
 5258 000049D8 E4867004        STR              r7, [r6], #4 ;store i
 5259 000049DC E1A07008        MOV              r7, r8
 5260 000049E0 E2877D05        ADD              r7, #320
 5261 000049E4 E4867004        STR              r7, [r6], #4 ;store j
 5262 000049E8 E4064008        STR              r4, [r6], #-8 ;store k
 5263 000049EC EB000645        BL               Eijk
 5264 000049F0 E3580E4B        CMP              r8, #1200
 5265 000049F4 1AFFFFDA        BNE              Loop20_5
 5266 000049F8 E24BBE15        SUB              r11, #336
 5267 000049FC         
 5268 000049FC E3A08000        MOV              r8, #0
 5269 00004A00 E28BBF69        ADD              r11, #420
 5270 00004A04         Loop20_6
 5271 00004A04 E2888050        ADD              r8, #80
 5272 00004A08 E69B0008        LDR              r0, [r11], r8 ;(a)
 5273 00004A0C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5274 00004A10         ;compare a and d
 5275 00004A10 E3500000        CMP              r0, #0x00000000
 5276 00004A14 03A00001        MOVEQ            r0, #1      ;when a is 0
 5277 00004A18 13A00000        MOVNE            r0, #0
 5278 00004A1C E3510000        CMP              r1, #0x00000000
 5279 00004A20 13A01001        MOVNE            r1, #1      ;when d is non-0
 5280 00004A24 03A01000        MOVEQ            r1, #0
 5281 00004A28 E0811000        ADD              r1, r0
 5282 00004A2C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5283 00004A30 03A06207        MOVEQ            r6, 0x70000000
 5284 00004A34 03A07E19        MOVEQ            r7, #400
 5285 00004A38 04867004        STREQ            r7, [r6], #4 ;store i
 5286 00004A3C 01A07008        MOVEQ            r7, r8
 5287 00004A40 02877E19        ADDEQ            r7, #400
 5288 00004A44 04067004        STREQ            r7, [r6], #-4 ;store j
 5289 00004A48 0B0006A0        BLEQ             Eij
 5290 00004A4C E69B0008        LDR              r0, [r11], r8 ;(a)
 5291 00004A50 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5292 00004A54         ;recompare a and d
 5293 00004A54 E4821004        STR              r1, [r2], #4
 5294 00004A58 E4020004        STR              r0, [r2], #-4
 5295 00004A5C EB0007A4        BL               Division
 5296 00004A60 E5934000        LDR              r4, [r3]    ;get d/a
 5297 00004A64 E3540102        CMP              r4, #0x80000000
 5298 00004A68 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5299 00004A6C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5300 00004A70         ;get -d/a
 5301 00004A70 E3A06207        MOV              r6, 0x70000000
 5302 00004A74 E3A07E19        MOV              r7, #400
 5303 00004A78 E4867004        STR              r7, [r6], #4 ;store i
 5304 00004A7C E1A07008        MOV              r7, r8



ARM Macro Assembler    Page 102 


 5305 00004A80 E2877E19        ADD              r7, #400
 5306 00004A84 E4867004        STR              r7, [r6], #4 ;store j
 5307 00004A88 E4064008        STR              r4, [r6], #-8 ;store k
 5308 00004A8C EB00061D        BL               Eijk
 5309 00004A90 E3580E46        CMP              r8, #1120
 5310 00004A94 1AFFFFDA        BNE              Loop20_6
 5311 00004A98 E24BBF69        SUB              r11, #420
 5312 00004A9C         
 5313 00004A9C E3A08000        MOV              r8, #0
 5314 00004AA0 E28BBF7E        ADD              r11, #504
 5315 00004AA4         Loop20_7
 5316 00004AA4 E2888050        ADD              r8, #80
 5317 00004AA8 E69B0008        LDR              r0, [r11], r8 ;(a)
 5318 00004AAC E61B1008        LDR              r1, [r11], -r8 ;(d)
 5319 00004AB0         ;compare a and d
 5320 00004AB0 E3500000        CMP              r0, #0x00000000
 5321 00004AB4 03A00001        MOVEQ            r0, #1      ;when a is 0
 5322 00004AB8 13A00000        MOVNE            r0, #0
 5323 00004ABC E3510000        CMP              r1, #0x00000000
 5324 00004AC0 13A01001        MOVNE            r1, #1      ;when d is non-0
 5325 00004AC4 03A01000        MOVEQ            r1, #0
 5326 00004AC8 E0811000        ADD              r1, r0
 5327 00004ACC E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5328 00004AD0 03A06207        MOVEQ            r6, 0x70000000
 5329 00004AD4 03A07E1E        MOVEQ            r7, #480
 5330 00004AD8 04867004        STREQ            r7, [r6], #4 ;store i
 5331 00004ADC 01A07008        MOVEQ            r7, r8
 5332 00004AE0 02877E1E        ADDEQ            r7, #480
 5333 00004AE4 04067004        STREQ            r7, [r6], #-4 ;store j
 5334 00004AE8 0B000678        BLEQ             Eij
 5335 00004AEC E69B0008        LDR              r0, [r11], r8 ;(a)
 5336 00004AF0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5337 00004AF4         ;recompare a and d
 5338 00004AF4 E4821004        STR              r1, [r2], #4
 5339 00004AF8 E4020004        STR              r0, [r2], #-4
 5340 00004AFC EB00077C        BL               Division
 5341 00004B00 E5934000        LDR              r4, [r3]    ;get d/a
 5342 00004B04 E3540102        CMP              r4, #0x80000000
 5343 00004B08 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5344 00004B0C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5345 00004B10         ;get -d/a
 5346 00004B10 E3A06207        MOV              r6, 0x70000000
 5347 00004B14 E3A07E1E        MOV              r7, #480
 5348 00004B18 E4867004        STR              r7, [r6], #4 ;store i
 5349 00004B1C E1A07008        MOV              r7, r8
 5350 00004B20 E2877E1E        ADD              r7, #480
 5351 00004B24 E4867004        STR              r7, [r6], #4 ;store j
 5352 00004B28 E4064008        STR              r4, [r6], #-8 ;store k
 5353 00004B2C EB0005F5        BL               Eijk
 5354 00004B30 E3580E41        CMP              r8, #1040
 5355 00004B34 1AFFFFDA        BNE              Loop20_7
 5356 00004B38 E24BBF7E        SUB              r11, #504
 5357 00004B3C         
 5358 00004B3C E3A08000        MOV              r8, #0
 5359 00004B40 E28BBF93        ADD              r11, #588
 5360 00004B44         Loop20_8



ARM Macro Assembler    Page 103 


 5361 00004B44 E2888050        ADD              r8, #80
 5362 00004B48 E69B0008        LDR              r0, [r11], r8 ;(a)
 5363 00004B4C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5364 00004B50         ;compare a and d
 5365 00004B50 E3500000        CMP              r0, #0x00000000
 5366 00004B54 03A00001        MOVEQ            r0, #1      ;when a is 0
 5367 00004B58 13A00000        MOVNE            r0, #0
 5368 00004B5C E3510000        CMP              r1, #0x00000000
 5369 00004B60 13A01001        MOVNE            r1, #1      ;when d is non-0
 5370 00004B64 03A01000        MOVEQ            r1, #0
 5371 00004B68 E0811000        ADD              r1, r0
 5372 00004B6C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5373 00004B70 03A06207        MOVEQ            r6, 0x70000000
 5374 00004B74 03A07E23        MOVEQ            r7, #560
 5375 00004B78 04867004        STREQ            r7, [r6], #4 ;store i
 5376 00004B7C 01A07008        MOVEQ            r7, r8
 5377 00004B80 02877E23        ADDEQ            r7, #560
 5378 00004B84 04067004        STREQ            r7, [r6], #-4 ;store j
 5379 00004B88 0B000650        BLEQ             Eij
 5380 00004B8C E69B0008        LDR              r0, [r11], r8 ;(a)
 5381 00004B90 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5382 00004B94         ;recompare a and d
 5383 00004B94 E4821004        STR              r1, [r2], #4
 5384 00004B98 E4020004        STR              r0, [r2], #-4
 5385 00004B9C EB000754        BL               Division
 5386 00004BA0 E5934000        LDR              r4, [r3]    ;get d/a
 5387 00004BA4 E3540102        CMP              r4, #0x80000000
 5388 00004BA8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5389 00004BAC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5390 00004BB0         ;get -d/a
 5391 00004BB0 E3A06207        MOV              r6, 0x70000000
 5392 00004BB4 E3A07E23        MOV              r7, #560
 5393 00004BB8 E4867004        STR              r7, [r6], #4 ;store i
 5394 00004BBC E1A07008        MOV              r7, r8
 5395 00004BC0 E2877E23        ADD              r7, #560
 5396 00004BC4 E4867004        STR              r7, [r6], #4 ;store j
 5397 00004BC8 E4064008        STR              r4, [r6], #-8 ;store k
 5398 00004BCC EB0005CD        BL               Eijk
 5399 00004BD0 E3580D0F        CMP              r8, #960
 5400 00004BD4 1AFFFFDA        BNE              Loop20_8
 5401 00004BD8 E24BBF93        SUB              r11, #588
 5402 00004BDC         
 5403 00004BDC E3A08000        MOV              r8, #0
 5404 00004BE0 E28BBE2A        ADD              r11, #672
 5405 00004BE4         Loop20_9
 5406 00004BE4 E2888050        ADD              r8, #80
 5407 00004BE8 E69B0008        LDR              r0, [r11], r8 ;(a)
 5408 00004BEC E61B1008        LDR              r1, [r11], -r8 ;(d)
 5409 00004BF0         ;compare a and d
 5410 00004BF0 E3500000        CMP              r0, #0x00000000
 5411 00004BF4 03A00001        MOVEQ            r0, #1      ;when a is 0
 5412 00004BF8 13A00000        MOVNE            r0, #0
 5413 00004BFC E3510000        CMP              r1, #0x00000000
 5414 00004C00 13A01001        MOVNE            r1, #1      ;when d is non-0
 5415 00004C04 03A01000        MOVEQ            r1, #0
 5416 00004C08 E0811000        ADD              r1, r0



ARM Macro Assembler    Page 104 


 5417 00004C0C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5418 00004C10 03A06207        MOVEQ            r6, 0x70000000
 5419 00004C14 03A07D0A        MOVEQ            r7, #640
 5420 00004C18 04867004        STREQ            r7, [r6], #4 ;store i
 5421 00004C1C 01A07008        MOVEQ            r7, r8
 5422 00004C20 02877D0A        ADDEQ            r7, #640
 5423 00004C24 04067004        STREQ            r7, [r6], #-4 ;store j
 5424 00004C28 0B000628        BLEQ             Eij
 5425 00004C2C E69B0008        LDR              r0, [r11], r8 ;(a)
 5426 00004C30 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5427 00004C34         ;recompare a and d
 5428 00004C34 E4821004        STR              r1, [r2], #4
 5429 00004C38 E4020004        STR              r0, [r2], #-4
 5430 00004C3C EB00072C        BL               Division
 5431 00004C40 E5934000        LDR              r4, [r3]    ;get d/a
 5432 00004C44 E3540102        CMP              r4, #0x80000000
 5433 00004C48 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5434 00004C4C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5435 00004C50         ;get -d/a
 5436 00004C50 E3A06207        MOV              r6, 0x70000000
 5437 00004C54 E3A07D0A        MOV              r7, #640
 5438 00004C58 E4867004        STR              r7, [r6], #4 ;store i
 5439 00004C5C E1A07008        MOV              r7, r8
 5440 00004C60 E2877D0A        ADD              r7, #640
 5441 00004C64 E4867004        STR              r7, [r6], #4 ;store j
 5442 00004C68 E4064008        STR              r4, [r6], #-8 ;store k
 5443 00004C6C EB0005A5        BL               Eijk
 5444 00004C70 E3580E37        CMP              r8, #880
 5445 00004C74 1AFFFFDA        BNE              Loop20_9
 5446 00004C78 E24BBE2A        SUB              r11, #672
 5447 00004C7C         
 5448 00004C7C E3A08000        MOV              r8, #0
 5449 00004C80 E28BBFBD        ADD              r11, #756
 5450 00004C84         Loop20_10
 5451 00004C84 E2888050        ADD              r8, #80
 5452 00004C88 E69B0008        LDR              r0, [r11], r8 ;(a)
 5453 00004C8C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5454 00004C90         ;compare a and d
 5455 00004C90 E3500000        CMP              r0, #0x00000000
 5456 00004C94 03A00001        MOVEQ            r0, #1      ;when a is 0
 5457 00004C98 13A00000        MOVNE            r0, #0
 5458 00004C9C E3510000        CMP              r1, #0x00000000
 5459 00004CA0 13A01001        MOVNE            r1, #1      ;when d is non-0
 5460 00004CA4 03A01000        MOVEQ            r1, #0
 5461 00004CA8 E0811000        ADD              r1, r0
 5462 00004CAC E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5463 00004CB0 03A06207        MOVEQ            r6, 0x70000000
 5464 00004CB4 03A07E2D        MOVEQ            r7, #720
 5465 00004CB8 04867004        STREQ            r7, [r6], #4 ;store i
 5466 00004CBC 01A07008        MOVEQ            r7, r8
 5467 00004CC0 02877E2D        ADDEQ            r7, #720
 5468 00004CC4 04067004        STREQ            r7, [r6], #-4 ;store j
 5469 00004CC8 0B000600        BLEQ             Eij
 5470 00004CCC E69B0008        LDR              r0, [r11], r8 ;(a)
 5471 00004CD0 E61B1008        LDR              r1, [r11], -r8 ;(d)



ARM Macro Assembler    Page 105 


 5472 00004CD4         ;recompare a and d
 5473 00004CD4 E4821004        STR              r1, [r2], #4
 5474 00004CD8 E4020004        STR              r0, [r2], #-4
 5475 00004CDC EB000704        BL               Division
 5476 00004CE0 E5934000        LDR              r4, [r3]    ;get d/a
 5477 00004CE4 E3540102        CMP              r4, #0x80000000
 5478 00004CE8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5479 00004CEC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5480 00004CF0         ;get -d/a
 5481 00004CF0 E3A06207        MOV              r6, 0x70000000
 5482 00004CF4 E3A07E2D        MOV              r7, #720
 5483 00004CF8 E4867004        STR              r7, [r6], #4 ;store i
 5484 00004CFC E1A07008        MOV              r7, r8
 5485 00004D00 E2877E2D        ADD              r7, #720
 5486 00004D04 E4867004        STR              r7, [r6], #4 ;store j
 5487 00004D08 E4064008        STR              r4, [r6], #-8 ;store k
 5488 00004D0C EB00057D        BL               Eijk
 5489 00004D10 E3580E32        CMP              r8, #800
 5490 00004D14 1AFFFFDA        BNE              Loop20_10
 5491 00004D18 E24BBFBD        SUB              r11, #756
 5492 00004D1C         
 5493 00004D1C E3A08000        MOV              r8, #0
 5494 00004D20 E28BBFD2        ADD              r11, #840
 5495 00004D24         Loop20_11
 5496 00004D24 E2888050        ADD              r8, #80
 5497 00004D28 E69B0008        LDR              r0, [r11], r8 ;(a)
 5498 00004D2C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5499 00004D30         ;compare a and d
 5500 00004D30 E3500000        CMP              r0, #0x00000000
 5501 00004D34 03A00001        MOVEQ            r0, #1      ;when a is 0
 5502 00004D38 13A00000        MOVNE            r0, #0
 5503 00004D3C E3510000        CMP              r1, #0x00000000
 5504 00004D40 13A01001        MOVNE            r1, #1      ;when d is non-0
 5505 00004D44 03A01000        MOVEQ            r1, #0
 5506 00004D48 E0811000        ADD              r1, r0
 5507 00004D4C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5508 00004D50 03A06207        MOVEQ            r6, 0x70000000
 5509 00004D54 03A07E32        MOVEQ            r7, #800
 5510 00004D58 04867004        STREQ            r7, [r6], #4 ;store i
 5511 00004D5C 01A07008        MOVEQ            r7, r8
 5512 00004D60 02877E32        ADDEQ            r7, #800
 5513 00004D64 04067004        STREQ            r7, [r6], #-4 ;store j
 5514 00004D68 0B0005D8        BLEQ             Eij
 5515 00004D6C E69B0008        LDR              r0, [r11], r8 ;(a)
 5516 00004D70 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5517 00004D74         ;recompare a and d
 5518 00004D74 E4821004        STR              r1, [r2], #4
 5519 00004D78 E4020004        STR              r0, [r2], #-4
 5520 00004D7C EB0006DC        BL               Division
 5521 00004D80 E5934000        LDR              r4, [r3]    ;get d/a
 5522 00004D84 E3540102        CMP              r4, #0x80000000
 5523 00004D88 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5524 00004D8C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5525 00004D90         ;get -d/a



ARM Macro Assembler    Page 106 


 5526 00004D90 E3A06207        MOV              r6, 0x70000000
 5527 00004D94 E3A07E32        MOV              r7, #800
 5528 00004D98 E4867004        STR              r7, [r6], #4 ;store i
 5529 00004D9C E1A07008        MOV              r7, r8
 5530 00004DA0 E2877E32        ADD              r7, #800
 5531 00004DA4 E4867004        STR              r7, [r6], #4 ;store j
 5532 00004DA8 E4064008        STR              r4, [r6], #-8 ;store k
 5533 00004DAC EB000555        BL               Eijk
 5534 00004DB0 E3580E2D        CMP              r8, #720
 5535 00004DB4 1AFFFFDA        BNE              Loop20_11
 5536 00004DB8 E24BBFD2        SUB              r11, #840
 5537 00004DBC         
 5538 00004DBC E3A08000        MOV              r8, #0
 5539 00004DC0 E28BBFE7        ADD              r11, #924
 5540 00004DC4         Loop20_12
 5541 00004DC4 E2888050        ADD              r8, #80
 5542 00004DC8 E69B0008        LDR              r0, [r11], r8 ;(a)
 5543 00004DCC E61B1008        LDR              r1, [r11], -r8 ;(d)
 5544 00004DD0         ;compare a and d
 5545 00004DD0 E3500000        CMP              r0, #0x00000000
 5546 00004DD4 03A00001        MOVEQ            r0, #1      ;when a is 0
 5547 00004DD8 13A00000        MOVNE            r0, #0
 5548 00004DDC E3510000        CMP              r1, #0x00000000
 5549 00004DE0 13A01001        MOVNE            r1, #1      ;when d is non-0
 5550 00004DE4 03A01000        MOVEQ            r1, #0
 5551 00004DE8 E0811000        ADD              r1, r0
 5552 00004DEC E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5553 00004DF0 03A06207        MOVEQ            r6, 0x70000000
 5554 00004DF4 03A07E37        MOVEQ            r7, #880
 5555 00004DF8 04867004        STREQ            r7, [r6], #4 ;store i
 5556 00004DFC 01A07008        MOVEQ            r7, r8
 5557 00004E00 02877E37        ADDEQ            r7, #880
 5558 00004E04 04067004        STREQ            r7, [r6], #-4 ;store j
 5559 00004E08 0B0005B0        BLEQ             Eij
 5560 00004E0C E69B0008        LDR              r0, [r11], r8 ;(a)
 5561 00004E10 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5562 00004E14         ;recompare a and d
 5563 00004E14 E4821004        STR              r1, [r2], #4
 5564 00004E18 E4020004        STR              r0, [r2], #-4
 5565 00004E1C EB0006B4        BL               Division
 5566 00004E20 E5934000        LDR              r4, [r3]    ;get d/a
 5567 00004E24 E3540102        CMP              r4, #0x80000000
 5568 00004E28 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5569 00004E2C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5570 00004E30         ;get -d/a
 5571 00004E30 E3A06207        MOV              r6, 0x70000000
 5572 00004E34 E3A07E37        MOV              r7, #880
 5573 00004E38 E4867004        STR              r7, [r6], #4 ;store i
 5574 00004E3C E1A07008        MOV              r7, r8
 5575 00004E40 E2877E37        ADD              r7, #880
 5576 00004E44 E4867004        STR              r7, [r6], #4 ;store j
 5577 00004E48 E4064008        STR              r4, [r6], #-8 ;store k
 5578 00004E4C EB00052D        BL               Eijk
 5579 00004E50 E3580D0A        CMP              r8, #640
 5580 00004E54 1AFFFFDA        BNE              Loop20_12
 5581 00004E58 E24BBFE7        SUB              r11, #924



ARM Macro Assembler    Page 107 


 5582 00004E5C         
 5583 00004E5C E3A08000        MOV              r8, #0
 5584 00004E60 E28BBE3F        ADD              r11, #1008
 5585 00004E64         Loop20_13
 5586 00004E64 E2888050        ADD              r8, #80
 5587 00004E68 E69B0008        LDR              r0, [r11], r8 ;(a)
 5588 00004E6C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5589 00004E70         ;compare a and d
 5590 00004E70 E3500000        CMP              r0, #0x00000000
 5591 00004E74 03A00001        MOVEQ            r0, #1      ;when a is 0
 5592 00004E78 13A00000        MOVNE            r0, #0
 5593 00004E7C E3510000        CMP              r1, #0x00000000
 5594 00004E80 13A01001        MOVNE            r1, #1      ;when d is non-0
 5595 00004E84 03A01000        MOVEQ            r1, #0
 5596 00004E88 E0811000        ADD              r1, r0
 5597 00004E8C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5598 00004E90 03A06207        MOVEQ            r6, 0x70000000
 5599 00004E94 03A07D0F        MOVEQ            r7, #960
 5600 00004E98 04867004        STREQ            r7, [r6], #4 ;store i
 5601 00004E9C 01A07008        MOVEQ            r7, r8
 5602 00004EA0 02877D0F        ADDEQ            r7, #960
 5603 00004EA4 04067004        STREQ            r7, [r6], #-4 ;store j
 5604 00004EA8 0B000588        BLEQ             Eij
 5605 00004EAC E69B0008        LDR              r0, [r11], r8 ;(a)
 5606 00004EB0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5607 00004EB4         ;recompare a and d
 5608 00004EB4 E4821004        STR              r1, [r2], #4
 5609 00004EB8 E4020004        STR              r0, [r2], #-4
 5610 00004EBC EB00068C        BL               Division
 5611 00004EC0 E5934000        LDR              r4, [r3]    ;get d/a
 5612 00004EC4 E3540102        CMP              r4, #0x80000000
 5613 00004EC8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5614 00004ECC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5615 00004ED0         ;get -d/a
 5616 00004ED0 E3A06207        MOV              r6, 0x70000000
 5617 00004ED4 E3A07D0F        MOV              r7, #960
 5618 00004ED8 E4867004        STR              r7, [r6], #4 ;store i
 5619 00004EDC E1A07008        MOV              r7, r8
 5620 00004EE0 E2877D0F        ADD              r7, #960
 5621 00004EE4 E4867004        STR              r7, [r6], #4 ;store j
 5622 00004EE8 E4064008        STR              r4, [r6], #-8 ;store k
 5623 00004EEC EB000505        BL               Eijk
 5624 00004EF0 E3580E23        CMP              r8, #560
 5625 00004EF4 1AFFFFDA        BNE              Loop20_13
 5626 00004EF8 E24BBE3F        SUB              r11, #1008
 5627 00004EFC         
 5628 00004EFC E3A08000        MOV              r8, #0
 5629 00004F00 E28BBE3F        ADD              r11, #1008
 5630 00004F04 E28BB054        ADD              r11, #84    ;1092
 5631 00004F08         Loop20_14
 5632 00004F08 E2888050        ADD              r8, #80
 5633 00004F0C E69B0008        LDR              r0, [r11], r8 ;(a)
 5634 00004F10 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5635 00004F14         ;compare a and d
 5636 00004F14 E3500000        CMP              r0, #0x00000000
 5637 00004F18 03A00001        MOVEQ            r0, #1      ;when a is 0



ARM Macro Assembler    Page 108 


 5638 00004F1C 13A00000        MOVNE            r0, #0
 5639 00004F20 E3510000        CMP              r1, #0x00000000
 5640 00004F24 13A01001        MOVNE            r1, #1      ;when d is non-0
 5641 00004F28 03A01000        MOVEQ            r1, #0
 5642 00004F2C E0811000        ADD              r1, r0
 5643 00004F30 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5644 00004F34 03A06207        MOVEQ            r6, 0x70000000
 5645 00004F38 03A07E41        MOVEQ            r7, #1040
 5646 00004F3C 04867004        STREQ            r7, [r6], #4 ;store i
 5647 00004F40 01A07008        MOVEQ            r7, r8
 5648 00004F44 02877E41        ADDEQ            r7, #1040
 5649 00004F48 04067004        STREQ            r7, [r6], #-4 ;store j
 5650 00004F4C 0B00055F        BLEQ             Eij
 5651 00004F50 E69B0008        LDR              r0, [r11], r8 ;(a)
 5652 00004F54 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5653 00004F58         ;recompare a and d
 5654 00004F58 E4821004        STR              r1, [r2], #4
 5655 00004F5C E4020004        STR              r0, [r2], #-4
 5656 00004F60 EB000663        BL               Division
 5657 00004F64 E5934000        LDR              r4, [r3]    ;get d/a
 5658 00004F68 E3540102        CMP              r4, #0x80000000
 5659 00004F6C C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5660 00004F70 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5661 00004F74         ;get -d/a
 5662 00004F74 E3A06207        MOV              r6, 0x70000000
 5663 00004F78 E3A07E41        MOV              r7, #1040
 5664 00004F7C E4867004        STR              r7, [r6], #4 ;store i
 5665 00004F80 E1A07008        MOV              r7, r8
 5666 00004F84 E2877E41        ADD              r7, #1040
 5667 00004F88 E4867004        STR              r7, [r6], #4 ;store j
 5668 00004F8C E4064008        STR              r4, [r6], #-8 ;store k
 5669 00004F90 EB0004DC        BL               Eijk
 5670 00004F94 E3580E1E        CMP              r8, #480
 5671 00004F98 1AFFFFDA        BNE              Loop20_14
 5672 00004F9C E24BBE3F        SUB              r11, #1008
 5673 00004FA0 E24BB054        SUB              r11, #84    ;1092
 5674 00004FA4         
 5675 00004FA4 E3A08000        MOV              r8, #0
 5676 00004FA8 E28BBE3F        ADD              r11, #1008
 5677 00004FAC E28BB0A8        ADD              r11, #168   ;1176
 5678 00004FB0         Loop20_15
 5679 00004FB0 E2888050        ADD              r8, #80
 5680 00004FB4 E69B0008        LDR              r0, [r11], r8 ;(a)
 5681 00004FB8 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5682 00004FBC         ;compare a and d
 5683 00004FBC E3500000        CMP              r0, #0x00000000
 5684 00004FC0 03A00001        MOVEQ            r0, #1      ;when a is 0
 5685 00004FC4 13A00000        MOVNE            r0, #0
 5686 00004FC8 E3510000        CMP              r1, #0x00000000
 5687 00004FCC 13A01001        MOVNE            r1, #1      ;when d is non-0
 5688 00004FD0 03A01000        MOVEQ            r1, #0
 5689 00004FD4 E0811000        ADD              r1, r0
 5690 00004FD8 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5691 00004FDC 03A06207        MOVEQ            r6, 0x70000000
 5692 00004FE0 03A07E46        MOVEQ            r7, #1120



ARM Macro Assembler    Page 109 


 5693 00004FE4 04867004        STREQ            r7, [r6], #4 ;store i
 5694 00004FE8 01A07008        MOVEQ            r7, r8
 5695 00004FEC 02877E46        ADDEQ            r7, #1120
 5696 00004FF0 04067004        STREQ            r7, [r6], #-4 ;store j
 5697 00004FF4 0B000535        BLEQ             Eij
 5698 00004FF8 E69B0008        LDR              r0, [r11], r8 ;(a)
 5699 00004FFC E61B1008        LDR              r1, [r11], -r8 ;(d)
 5700 00005000         ;recompare a and d
 5701 00005000 E4821004        STR              r1, [r2], #4
 5702 00005004 E4020004        STR              r0, [r2], #-4
 5703 00005008 EB000639        BL               Division
 5704 0000500C E5934000        LDR              r4, [r3]    ;get d/a
 5705 00005010 E3540102        CMP              r4, #0x80000000
 5706 00005014 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5707 00005018 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5708 0000501C         ;get -d/a
 5709 0000501C E3A06207        MOV              r6, 0x70000000
 5710 00005020 E3A07E46        MOV              r7, #1120
 5711 00005024 E4867004        STR              r7, [r6], #4 ;store i
 5712 00005028 E1A07008        MOV              r7, r8
 5713 0000502C E2877E46        ADD              r7, #1120
 5714 00005030 E4867004        STR              r7, [r6], #4 ;store j
 5715 00005034 E4064008        STR              r4, [r6], #-8 ;store k
 5716 00005038 EB0004B2        BL               Eijk
 5717 0000503C E3580E19        CMP              r8, #400
 5718 00005040 1AFFFFDA        BNE              Loop20_15
 5719 00005044 E24BBE3F        SUB              r11, #1008
 5720 00005048 E24BB0A8        SUB              r11, #168   ;1176
 5721 0000504C         
 5722 0000504C E3A08000        MOV              r8, #0
 5723 00005050 E28BBE3F        ADD              r11, #1008
 5724 00005054 E28BB0FC        ADD              r11, #252   ;1260
 5725 00005058         Loop20_16
 5726 00005058 E2888050        ADD              r8, #80
 5727 0000505C E69B0008        LDR              r0, [r11], r8 ;(a)
 5728 00005060 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5729 00005064         ;compare a and d
 5730 00005064 E3500000        CMP              r0, #0x00000000
 5731 00005068 03A00001        MOVEQ            r0, #1      ;when a is 0
 5732 0000506C 13A00000        MOVNE            r0, #0
 5733 00005070 E3510000        CMP              r1, #0x00000000
 5734 00005074 13A01001        MOVNE            r1, #1      ;when d is non-0
 5735 00005078 03A01000        MOVEQ            r1, #0
 5736 0000507C E0811000        ADD              r1, r0
 5737 00005080 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5738 00005084 03A06207        MOVEQ            r6, 0x70000000
 5739 00005088 03A07E4B        MOVEQ            r7, #1200
 5740 0000508C 04867004        STREQ            r7, [r6], #4 ;store i
 5741 00005090 01A07008        MOVEQ            r7, r8
 5742 00005094 02877E4B        ADDEQ            r7, #1200
 5743 00005098 04067004        STREQ            r7, [r6], #-4 ;store j
 5744 0000509C 0B00050B        BLEQ             Eij
 5745 000050A0 E69B0008        LDR              r0, [r11], r8 ;(a)
 5746 000050A4 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5747 000050A8         ;recompare a and d
 5748 000050A8 E4821004        STR              r1, [r2], #4



ARM Macro Assembler    Page 110 


 5749 000050AC E4020004        STR              r0, [r2], #-4
 5750 000050B0 EB00060F        BL               Division
 5751 000050B4 E5934000        LDR              r4, [r3]    ;get d/a
 5752 000050B8 E3540102        CMP              r4, #0x80000000
 5753 000050BC C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5754 000050C0 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5755 000050C4         ;get -d/a
 5756 000050C4 E3A06207        MOV              r6, 0x70000000
 5757 000050C8 E3A07E4B        MOV              r7, #1200
 5758 000050CC E4867004        STR              r7, [r6], #4 ;store i
 5759 000050D0 E1A07008        MOV              r7, r8
 5760 000050D4 E2877E4B        ADD              r7, #1200
 5761 000050D8 E4867004        STR              r7, [r6], #4 ;store j
 5762 000050DC E4064008        STR              r4, [r6], #-8 ;store k
 5763 000050E0 EB000488        BL               Eijk
 5764 000050E4 E3580D05        CMP              r8, #320
 5765 000050E8 1AFFFFDA        BNE              Loop20_16
 5766 000050EC E24BBE3F        SUB              r11, #1008
 5767 000050F0 E24BB0FC        SUB              r11, #252   ;1260
 5768 000050F4         
 5769 000050F4 E3A08000        MOV              r8, #0
 5770 000050F8 E28BBE3F        ADD              r11, #1008
 5771 000050FC E28BBE15        ADD              r11, #336   ;1344
 5772 00005100         Loop20_17
 5773 00005100 E2888050        ADD              r8, #80
 5774 00005104 E69B0008        LDR              r0, [r11], r8 ;(a)
 5775 00005108 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5776 0000510C         ;compare a and d
 5777 0000510C E3500000        CMP              r0, #0x00000000
 5778 00005110 03A00001        MOVEQ            r0, #1      ;when a is 0
 5779 00005114 13A00000        MOVNE            r0, #0
 5780 00005118 E3510000        CMP              r1, #0x00000000
 5781 0000511C 13A01001        MOVNE            r1, #1      ;when d is non-0
 5782 00005120 03A01000        MOVEQ            r1, #0
 5783 00005124 E0811000        ADD              r1, r0
 5784 00005128 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5785 0000512C 03A06207        MOVEQ            r6, 0x70000000
 5786 00005130 03A07C05        MOVEQ            r7, #1280
 5787 00005134 04867004        STREQ            r7, [r6], #4 ;store i
 5788 00005138 01A07008        MOVEQ            r7, r8
 5789 0000513C 02877C05        ADDEQ            r7, #1280
 5790 00005140 04067004        STREQ            r7, [r6], #-4 ;store j
 5791 00005144 0B0004E1        BLEQ             Eij
 5792 00005148 E69B0008        LDR              r0, [r11], r8 ;(a)
 5793 0000514C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5794 00005150         ;recompare a and d
 5795 00005150 E4821004        STR              r1, [r2], #4
 5796 00005154 E4020004        STR              r0, [r2], #-4
 5797 00005158 EB0005E5        BL               Division
 5798 0000515C E5934000        LDR              r4, [r3]    ;get d/a
 5799 00005160 E3540102        CMP              r4, #0x80000000
 5800 00005164 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5801 00005168 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5802 0000516C         ;get -d/a



ARM Macro Assembler    Page 111 


 5803 0000516C E3A06207        MOV              r6, 0x70000000
 5804 00005170 E3A07C05        MOV              r7, #1280
 5805 00005174 E4867004        STR              r7, [r6], #4 ;store i
 5806 00005178 E1A07008        MOV              r7, r8
 5807 0000517C E2877C05        ADD              r7, #1280
 5808 00005180 E4867004        STR              r7, [r6], #4 ;store j
 5809 00005184 E4064008        STR              r4, [r6], #-8 ;store k
 5810 00005188 EB00045E        BL               Eijk
 5811 0000518C E35800F0        CMP              r8, #240
 5812 00005190 1AFFFFDA        BNE              Loop20_17
 5813 00005194 E24BBE3F        SUB              r11, #1008
 5814 00005198 E24BBE15        SUB              r11, #336   ;1344
 5815 0000519C         
 5816 0000519C E3A08000        MOV              r8, #0
 5817 000051A0 E28BBE3F        ADD              r11, #1008
 5818 000051A4 E28BBF69        ADD              r11, #420   ;1428
 5819 000051A8         Loop20_18
 5820 000051A8 E2888050        ADD              r8, #80
 5821 000051AC E69B0008        LDR              r0, [r11], r8 ;(a)
 5822 000051B0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5823 000051B4         ;compare a and d
 5824 000051B4 E3500000        CMP              r0, #0x00000000
 5825 000051B8 03A00001        MOVEQ            r0, #1      ;when a is 0
 5826 000051BC 13A00000        MOVNE            r0, #0
 5827 000051C0 E3510000        CMP              r1, #0x00000000
 5828 000051C4 13A01001        MOVNE            r1, #1      ;when d is non-0
 5829 000051C8 03A01000        MOVEQ            r1, #0
 5830 000051CC E0811000        ADD              r1, r0
 5831 000051D0 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5832 000051D4 03A06207        MOVEQ            r6, 0x70000000
 5833 000051D8 03A07E55        MOVEQ            r7, #1360
 5834 000051DC 04867004        STREQ            r7, [r6], #4 ;store i
 5835 000051E0 01A07008        MOVEQ            r7, r8
 5836 000051E4 02877E55        ADDEQ            r7, #1360
 5837 000051E8 04067004        STREQ            r7, [r6], #-4 ;store j
 5838 000051EC 0B0004B7        BLEQ             Eij
 5839 000051F0 E69B0008        LDR              r0, [r11], r8 ;(a)
 5840 000051F4 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5841 000051F8         ;recompare a and d
 5842 000051F8 E4821004        STR              r1, [r2], #4
 5843 000051FC E4020004        STR              r0, [r2], #-4
 5844 00005200 EB0005BB        BL               Division
 5845 00005204 E5934000        LDR              r4, [r3]    ;get d/a
 5846 00005208 E3540102        CMP              r4, #0x80000000
 5847 0000520C C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5848 00005210 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5849 00005214         ;get -d/a
 5850 00005214 E3A06207        MOV              r6, 0x70000000
 5851 00005218 E3A07E55        MOV              r7, #1360
 5852 0000521C E4867004        STR              r7, [r6], #4 ;store i
 5853 00005220 E1A07008        MOV              r7, r8
 5854 00005224 E2877E55        ADD              r7, #1360
 5855 00005228 E4867004        STR              r7, [r6], #4 ;store j
 5856 0000522C E4064008        STR              r4, [r6], #-8 ;store k
 5857 00005230 EB000434        BL               Eijk
 5858 00005234 E35800A0        CMP              r8, #160



ARM Macro Assembler    Page 112 


 5859 00005238 1AFFFFDA        BNE              Loop20_18
 5860 0000523C E24BBE3F        SUB              r11, #1008
 5861 00005240 E24BBF69        SUB              r11, #420   ;1428
 5862 00005244         
 5863 00005244 E3A08000        MOV              r8, #0
 5864 00005248 E28BBE3F        ADD              r11, #1008
 5865 0000524C E28BBF7E        ADD              r11, #504   ;1512
 5866 00005250         Loop20_19
 5867 00005250 E2888050        ADD              r8, #80
 5868 00005254 E69B0008        LDR              r0, [r11], r8 ;(a)
 5869 00005258 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5870 0000525C         ;compare a and d
 5871 0000525C E3500000        CMP              r0, #0x00000000
 5872 00005260 03A00001        MOVEQ            r0, #1      ;when a is 0
 5873 00005264 13A00000        MOVNE            r0, #0
 5874 00005268 E3510000        CMP              r1, #0x00000000
 5875 0000526C 13A01001        MOVNE            r1, #1      ;when d is non-0
 5876 00005270 03A01000        MOVEQ            r1, #0
 5877 00005274 E0811000        ADD              r1, r0
 5878 00005278 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5879 0000527C 03A06207        MOVEQ            r6, 0x70000000
 5880 00005280 03A07E5A        MOVEQ            r7, #1440
 5881 00005284 04867004        STREQ            r7, [r6], #4 ;store i
 5882 00005288 01A07008        MOVEQ            r7, r8
 5883 0000528C 02877E5A        ADDEQ            r7, #1440
 5884 00005290 04067004        STREQ            r7, [r6], #-4 ;store j
 5885 00005294 0B00048D        BLEQ             Eij
 5886 00005298 E69B0008        LDR              r0, [r11], r8 ;(a)
 5887 0000529C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5888 000052A0         ;recompare a and d
 5889 000052A0 E4821004        STR              r1, [r2], #4
 5890 000052A4 E4020004        STR              r0, [r2], #-4
 5891 000052A8 EB000591        BL               Division
 5892 000052AC E5934000        LDR              r4, [r3]    ;get d/a
 5893 000052B0 E3540102        CMP              r4, #0x80000000
 5894 000052B4 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5895 000052B8 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5896 000052BC         ;get -d/a
 5897 000052BC E3A06207        MOV              r6, 0x70000000
 5898 000052C0 E3A07E5A        MOV              r7, #1440
 5899 000052C4 E4867004        STR              r7, [r6], #4 ;store i
 5900 000052C8 E1A07008        MOV              r7, r8
 5901 000052CC E2877E5A        ADD              r7, #1440
 5902 000052D0 E4867004        STR              r7, [r6], #4 ;store j
 5903 000052D4 E4064008        STR              r4, [r6], #-8 ;store k
 5904 000052D8 EB00040A        BL               Eijk
 5905 000052DC E3580050        CMP              r8, #80
 5906 000052E0 1AFFFFDA        BNE              Loop20_19
 5907 000052E4 E24BBE3F        SUB              r11, #1008
 5908 000052E8 E24BBF7E        SUB              r11, #504   ;1512
 5909 000052EC         ;now upper triangle
 5910 000052EC         
 5911 000052EC E3A08E3F        MOV              r8, #1008
 5912 000052F0 E2888F93        ADD              r8, #588    ;1596
 5913 000052F4         Loop20_20
 5914 000052F4 E2488050        SUB              r8, #80



ARM Macro Assembler    Page 113 


 5915 000052F8 E28BBE3F        ADD              r11, #1008
 5916 000052FC E28BBF93        ADD              r11, #588   ;1592
 5917 00005300 E59B0000        LDR              r0, [r11]   ;(a)
 5918 00005304 E24BBE3F        SUB              r11, #1008
 5919 00005308 E24BBF93        SUB              r11, #588   ;1592
 5920 0000530C E08BB008        ADD              r11, r8
 5921 00005310 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5922 00005314         ;compare a and d
 5923 00005314 E3500000        CMP              r0, #0x00000000
 5924 00005318 03A00001        MOVEQ            r0, #1      ;when a is 0
 5925 0000531C 13A00000        MOVNE            r0, #0
 5926 00005320 E3510000        CMP              r1, #0x00000000
 5927 00005324 13A01001        MOVNE            r1, #1      ;when d is non-0
 5928 00005328 03A01000        MOVEQ            r1, #0
 5929 0000532C E0811000        ADD              r1, r0
 5930 00005330 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5931 00005334 03A06207        MOVEQ            r6, 0x70000000
 5932 00005338 03A07E5F        MOVEQ            r7, #1520
 5933 0000533C 04867004        STREQ            r7, [r6], #4 ;store i
 5934 00005340 01A07008        MOVEQ            r7, r8
 5935 00005344 0247704C        SUBEQ            r7, #76
 5936 00005348 04867004        STREQ            r7, [r6], #4 ;store j
 5937 0000534C 0B00045F        BLEQ             Eij
 5938 00005350 E28BBE3F        ADD              r11, #1008
 5939 00005354 E28BBF93        ADD              r11, #588   ;1592
 5940 00005358 E59B0000        LDR              r0, [r11]   ;(a)
 5941 0000535C E24BBE3F        SUB              r11, #1008
 5942 00005360 E24BBF93        SUB              r11, #588   ;1592
 5943 00005364 E08BB008        ADD              r11, r8
 5944 00005368 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5945 0000536C         ;recompare a and d
 5946 0000536C E4821004        STR              r1, [r2], #4
 5947 00005370 E4020004        STR              r0, [r2], #-4
 5948 00005374 EB00055E        BL               Division
 5949 00005378 E5934000        LDR              r4, [r3]    ;get d/a
 5950 0000537C E3540102        CMP              r4, #0x80000000
 5951 00005380 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 5952 00005384 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 5953 00005388         ;get -d/a
 5954 00005388 E3A06207        MOV              r6, 0x70000000
 5955 0000538C E3A07E5F        MOV              r7, #1520
 5956 00005390 E4867004        STR              r7, [r6], #4 ;store i
 5957 00005394 E1A07008        MOV              r7, r8
 5958 00005398 E247704C        SUB              r7, #76
 5959 0000539C E4867004        STR              r7, [r6], #4 ;store j
 5960 000053A0 E4064008        STR              r4, [r6], #-8 ;store k
 5961 000053A4 EB0003D7        BL               Eijk
 5962 000053A8 E358004C        CMP              r8, #76
 5963 000053AC 1AFFFFD0        BNE              Loop20_20
 5964 000053B0         
 5965 000053B0 E3A08E3F        MOV              r8, #1008
 5966 000053B4 E2888F7E        ADD              r8, #504    ;1512
 5967 000053B8         Loop20_21
 5968 000053B8 E2488050        SUB              r8, #80
 5969 000053BC E28BBE3F        ADD              r11, #1008
 5970 000053C0 E28BBF7E        ADD              r11, #504   ;1512



ARM Macro Assembler    Page 114 


 5971 000053C4 E59B0000        LDR              r0, [r11]   ;(a)
 5972 000053C8 E24BBE3F        SUB              r11, #1008
 5973 000053CC E24BBF7E        SUB              r11, #504   ;1512
 5974 000053D0 E08BB008        ADD              r11, r8
 5975 000053D4 E61B1008        LDR              r1, [r11], -r8 ;(d)
 5976 000053D8         ;compare a and d
 5977 000053D8 E3500000        CMP              r0, #0x00000000
 5978 000053DC 03A00001        MOVEQ            r0, #1      ;when a is 0
 5979 000053E0 13A00000        MOVNE            r0, #0
 5980 000053E4 E3510000        CMP              r1, #0x00000000
 5981 000053E8 13A01001        MOVNE            r1, #1      ;when d is non-0
 5982 000053EC 03A01000        MOVEQ            r1, #0
 5983 000053F0 E0811000        ADD              r1, r0
 5984 000053F4 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 5985 000053F8 03A06207        MOVEQ            r6, 0x70000000
 5986 000053FC 03A07E5A        MOVEQ            r7, #1440
 5987 00005400 04867004        STREQ            r7, [r6], #4 ;store i
 5988 00005404 01A07008        MOVEQ            r7, r8
 5989 00005408 02477048        SUBEQ            r7, #72
 5990 0000540C 04867004        STREQ            r7, [r6], #4 ;store j
 5991 00005410 0B00042E        BLEQ             Eij
 5992 00005414 E28BBE3F        ADD              r11, #1008
 5993 00005418 E28BBF7E        ADD              r11, #504   ;1512
 5994 0000541C E59B0000        LDR              r0, [r11]   ;(a)
 5995 00005420 E24BBE3F        SUB              r11, #1008
 5996 00005424 E24BBF7E        SUB              r11, #504   ;1512
 5997 00005428 E08BB008        ADD              r11, r8
 5998 0000542C E61B1008        LDR              r1, [r11], -r8 ;(d)
 5999 00005430         ;recompare a and d
 6000 00005430 E4821004        STR              r1, [r2], #4
 6001 00005434 E4020004        STR              r0, [r2], #-4
 6002 00005438 EB00052D        BL               Division
 6003 0000543C E5934000        LDR              r4, [r3]    ;get d/a
 6004 00005440 E3540102        CMP              r4, #0x80000000
 6005 00005444 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6006 00005448 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6007 0000544C         ;get -d/a
 6008 0000544C E3A06207        MOV              r6, 0x70000000
 6009 00005450 E3A07E5A        MOV              r7, #1440
 6010 00005454 E4867004        STR              r7, [r6], #4 ;store i
 6011 00005458 E1A07008        MOV              r7, r8
 6012 0000545C E2477048        SUB              r7, #72
 6013 00005460 E4867004        STR              r7, [r6], #4 ;store j
 6014 00005464 E4064008        STR              r4, [r6], #-8 ;store k
 6015 00005468 EB0003A6        BL               Eijk
 6016 0000546C E3580048        CMP              r8, #72
 6017 00005470 1AFFFFD0        BNE              Loop20_21
 6018 00005474         
 6019 00005474 E3A08E3F        MOV              r8, #1008
 6020 00005478 E2888F69        ADD              r8, #420    ;1428
 6021 0000547C         Loop20_22
 6022 0000547C E2488050        SUB              r8, #80
 6023 00005480 E28BBE3F        ADD              r11, #1008
 6024 00005484 E28BBF69        ADD              r11, #420   ;1428
 6025 00005488 E59B0000        LDR              r0, [r11]   ;(a)
 6026 0000548C E24BBE3F        SUB              r11, #1008



ARM Macro Assembler    Page 115 


 6027 00005490 E24BBF69        SUB              r11, #420   ;1428
 6028 00005494 E08BB008        ADD              r11, r8
 6029 00005498 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6030 0000549C         ;compare a and d
 6031 0000549C E3500000        CMP              r0, #0x00000000
 6032 000054A0 03A00001        MOVEQ            r0, #1      ;when a is 0
 6033 000054A4 13A00000        MOVNE            r0, #0
 6034 000054A8 E3510000        CMP              r1, #0x00000000
 6035 000054AC 13A01001        MOVNE            r1, #1      ;when d is non-0
 6036 000054B0 03A01000        MOVEQ            r1, #0
 6037 000054B4 E0811000        ADD              r1, r0
 6038 000054B8 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6039 000054BC 03A06207        MOVEQ            r6, 0x70000000
 6040 000054C0 03A07E55        MOVEQ            r7, #1360
 6041 000054C4 04867004        STREQ            r7, [r6], #4 ;store i
 6042 000054C8 01A07008        MOVEQ            r7, r8
 6043 000054CC 02477044        SUBEQ            r7, #68
 6044 000054D0 04867004        STREQ            r7, [r6], #4 ;store j
 6045 000054D4 0B0003FD        BLEQ             Eij
 6046 000054D8 E28BBE3F        ADD              r11, #1008
 6047 000054DC E28BBF69        ADD              r11, #420   ;1428
 6048 000054E0 E59B0000        LDR              r0, [r11]   ;(a)
 6049 000054E4 E24BBE3F        SUB              r11, #1008
 6050 000054E8 E24BBF69        SUB              r11, #420   ;1428
 6051 000054EC E08BB008        ADD              r11, r8
 6052 000054F0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6053 000054F4         ;recompare a and d
 6054 000054F4 E4821004        STR              r1, [r2], #4
 6055 000054F8 E4020004        STR              r0, [r2], #-4
 6056 000054FC EB0004FC        BL               Division
 6057 00005500 E5934000        LDR              r4, [r3]    ;get d/a
 6058 00005504 E3540102        CMP              r4, #0x80000000
 6059 00005508 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6060 0000550C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6061 00005510         ;get -d/a
 6062 00005510 E3A06207        MOV              r6, 0x70000000
 6063 00005514 E3A07E55        MOV              r7, #1360
 6064 00005518 E4867004        STR              r7, [r6], #4 ;store i
 6065 0000551C E1A07008        MOV              r7, r8
 6066 00005520 E2477044        SUB              r7, #68
 6067 00005524 E4867004        STR              r7, [r6], #4 ;store j
 6068 00005528 E4064008        STR              r4, [r6], #-8 ;store k
 6069 0000552C EB000375        BL               Eijk
 6070 00005530 E3580044        CMP              r8, #68
 6071 00005534 1AFFFFD0        BNE              Loop20_22
 6072 00005538         
 6073 00005538 E3A08E3F        MOV              r8, #1008
 6074 0000553C E2888E15        ADD              r8, #336    ;1344
 6075 00005540         Loop20_23
 6076 00005540 E2488050        SUB              r8, #80
 6077 00005544 E28BBE3F        ADD              r11, #1008
 6078 00005548 E28BBE15        ADD              r11, #336   ;1344
 6079 0000554C E59B0000        LDR              r0, [r11]   ;(a)
 6080 00005550 E24BBE3F        SUB              r11, #1008
 6081 00005554 E24BBE15        SUB              r11, #336   ;1344
 6082 00005558 E08BB008        ADD              r11, r8



ARM Macro Assembler    Page 116 


 6083 0000555C E61B1008        LDR              r1, [r11], -r8 ;(d)
 6084 00005560         ;compare a and d
 6085 00005560 E3500000        CMP              r0, #0x00000000
 6086 00005564 03A00001        MOVEQ            r0, #1      ;when a is 0
 6087 00005568 13A00000        MOVNE            r0, #0
 6088 0000556C E3510000        CMP              r1, #0x00000000
 6089 00005570 13A01001        MOVNE            r1, #1      ;when d is non-0
 6090 00005574 03A01000        MOVEQ            r1, #0
 6091 00005578 E0811000        ADD              r1, r0
 6092 0000557C E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6093 00005580 03A06207        MOVEQ            r6, 0x70000000
 6094 00005584 03A07C05        MOVEQ            r7, #1280
 6095 00005588 04867004        STREQ            r7, [r6], #4 ;store i
 6096 0000558C 01A07008        MOVEQ            r7, r8
 6097 00005590 02477040        SUBEQ            r7, #64
 6098 00005594 04867004        STREQ            r7, [r6], #4 ;store j
 6099 00005598 0B0003CC        BLEQ             Eij
 6100 0000559C E28BBE3F        ADD              r11, #1008
 6101 000055A0 E28BBE15        ADD              r11, #336   ;1344
 6102 000055A4 E59B0000        LDR              r0, [r11]   ;(a)
 6103 000055A8 E24BBE3F        SUB              r11, #1008
 6104 000055AC E24BBE15        SUB              r11, #336   ;1344
 6105 000055B0 E08BB008        ADD              r11, r8
 6106 000055B4 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6107 000055B8         ;recompare a and d
 6108 000055B8 E4821004        STR              r1, [r2], #4
 6109 000055BC E4020004        STR              r0, [r2], #-4
 6110 000055C0 EB0004CB        BL               Division
 6111 000055C4 E5934000        LDR              r4, [r3]    ;get d/a
 6112 000055C8 E3540102        CMP              r4, #0x80000000
 6113 000055CC C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6114 000055D0 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6115 000055D4         ;get -d/a
 6116 000055D4 E3A06207        MOV              r6, 0x70000000
 6117 000055D8 E3A07C05        MOV              r7, #1280
 6118 000055DC E4867004        STR              r7, [r6], #4 ;store i
 6119 000055E0 E1A07008        MOV              r7, r8
 6120 000055E4 E2477040        SUB              r7, #64
 6121 000055E8 E4867004        STR              r7, [r6], #4 ;store j
 6122 000055EC E4064008        STR              r4, [r6], #-8 ;store k
 6123 000055F0 EB000344        BL               Eijk
 6124 000055F4 E3580040        CMP              r8, #64
 6125 000055F8 1AFFFFD0        BNE              Loop20_23
 6126 000055FC         
 6127 000055FC E3A08E3F        MOV              r8, #1008
 6128 00005600 E28880FC        ADD              r8, #252    ;1260
 6129 00005604         Loop20_24
 6130 00005604 E2488050        SUB              r8, #80
 6131 00005608 E28BBE3F        ADD              r11, #1008
 6132 0000560C E28BB0FC        ADD              r11, #252   ;1260
 6133 00005610 E59B0000        LDR              r0, [r11]   ;(a)
 6134 00005614 E24BBE3F        SUB              r11, #1008
 6135 00005618 E24BB0FC        SUB              r11, #252   ;1260
 6136 0000561C E08BB008        ADD              r11, r8
 6137 00005620 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6138 00005624         ;compare a and d



ARM Macro Assembler    Page 117 


 6139 00005624 E3500000        CMP              r0, #0x00000000
 6140 00005628 03A00001        MOVEQ            r0, #1      ;when a is 0
 6141 0000562C 13A00000        MOVNE            r0, #0
 6142 00005630 E3510000        CMP              r1, #0x00000000
 6143 00005634 13A01001        MOVNE            r1, #1      ;when d is non-0
 6144 00005638 03A01000        MOVEQ            r1, #0
 6145 0000563C E0811000        ADD              r1, r0
 6146 00005640 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6147 00005644 03A06207        MOVEQ            r6, 0x70000000
 6148 00005648 03A07E4B        MOVEQ            r7, #1200
 6149 0000564C 04867004        STREQ            r7, [r6], #4 ;store i
 6150 00005650 01A07008        MOVEQ            r7, r8
 6151 00005654 0247703C        SUBEQ            r7, #60
 6152 00005658 04867004        STREQ            r7, [r6], #4 ;store j
 6153 0000565C 0B00039B        BLEQ             Eij
 6154 00005660 E28BBE3F        ADD              r11, #1008
 6155 00005664 E28BB0FC        ADD              r11, #252   ;1260
 6156 00005668 E59B0000        LDR              r0, [r11]   ;(a)
 6157 0000566C E24BBE3F        SUB              r11, #1008
 6158 00005670 E24BB0FC        SUB              r11, #252   ;1260
 6159 00005674 E08BB008        ADD              r11, r8
 6160 00005678 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6161 0000567C         ;recompare a and d
 6162 0000567C E4821004        STR              r1, [r2], #4
 6163 00005680 E4020004        STR              r0, [r2], #-4
 6164 00005684 EB00049A        BL               Division
 6165 00005688 E5934000        LDR              r4, [r3]    ;get d/a
 6166 0000568C E3540102        CMP              r4, #0x80000000
 6167 00005690 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6168 00005694 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6169 00005698         ;get -d/a
 6170 00005698 E3A06207        MOV              r6, 0x70000000
 6171 0000569C E3A07E4B        MOV              r7, #1200
 6172 000056A0 E4867004        STR              r7, [r6], #4 ;store i
 6173 000056A4 E1A07008        MOV              r7, r8
 6174 000056A8 E247703C        SUB              r7, #60
 6175 000056AC E4867004        STR              r7, [r6], #4 ;store j
 6176 000056B0 E4064008        STR              r4, [r6], #-8 ;store k
 6177 000056B4 EB000313        BL               Eijk
 6178 000056B8 E358003C        CMP              r8, #60
 6179 000056BC 1AFFFFD0        BNE              Loop20_24
 6180 000056C0         
 6181 000056C0 E3A08E3F        MOV              r8, #1008
 6182 000056C4 E28880A8        ADD              r8, #168    ;1176
 6183 000056C8         Loop20_25
 6184 000056C8 E2488050        SUB              r8, #80
 6185 000056CC E28BBE3F        ADD              r11, #1008
 6186 000056D0 E28BB0A8        ADD              r11, #168   ;1176
 6187 000056D4 E59B0000        LDR              r0, [r11]   ;(a)
 6188 000056D8 E24BBE3F        SUB              r11, #1008
 6189 000056DC E24BB0A8        SUB              r11, #168   ;1176
 6190 000056E0 E08BB008        ADD              r11, r8
 6191 000056E4 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6192 000056E8         ;compare a and d
 6193 000056E8 E3500000        CMP              r0, #0x00000000
 6194 000056EC 03A00001        MOVEQ            r0, #1      ;when a is 0



ARM Macro Assembler    Page 118 


 6195 000056F0 13A00000        MOVNE            r0, #0
 6196 000056F4 E3510000        CMP              r1, #0x00000000
 6197 000056F8 13A01001        MOVNE            r1, #1      ;when d is non-0
 6198 000056FC 03A01000        MOVEQ            r1, #0
 6199 00005700 E0811000        ADD              r1, r0
 6200 00005704 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6201 00005708 03A06207        MOVEQ            r6, 0x70000000
 6202 0000570C 03A07E46        MOVEQ            r7, #1120
 6203 00005710 04867004        STREQ            r7, [r6], #4 ;store i
 6204 00005714 01A07008        MOVEQ            r7, r8
 6205 00005718 02477038        SUBEQ            r7, #56
 6206 0000571C 04867004        STREQ            r7, [r6], #4 ;store j
 6207 00005720 0B00036A        BLEQ             Eij
 6208 00005724 E28BBE3F        ADD              r11, #1008
 6209 00005728 E28BB0A8        ADD              r11, #168   ;1176
 6210 0000572C E59B0000        LDR              r0, [r11]   ;(a)
 6211 00005730 E24BBE3F        SUB              r11, #1008
 6212 00005734 E24BB0A8        SUB              r11, #168   ;1176
 6213 00005738 E08BB008        ADD              r11, r8
 6214 0000573C E61B1008        LDR              r1, [r11], -r8 ;(d)
 6215 00005740         ;recompare a and d
 6216 00005740 E4821004        STR              r1, [r2], #4
 6217 00005744 E4020004        STR              r0, [r2], #-4
 6218 00005748 EB000469        BL               Division
 6219 0000574C E5934000        LDR              r4, [r3]    ;get d/a
 6220 00005750 E3540102        CMP              r4, #0x80000000
 6221 00005754 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6222 00005758 B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6223 0000575C         ;get -d/a
 6224 0000575C E3A06207        MOV              r6, 0x70000000
 6225 00005760 E3A07E46        MOV              r7, #1120
 6226 00005764 E4867004        STR              r7, [r6], #4 ;store i
 6227 00005768 E1A07008        MOV              r7, r8
 6228 0000576C E2477038        SUB              r7, #56
 6229 00005770 E4867004        STR              r7, [r6], #4 ;store j
 6230 00005774 E4064008        STR              r4, [r6], #-8 ;store k
 6231 00005778 EB0002E2        BL               Eijk
 6232 0000577C E3580038        CMP              r8, #56
 6233 00005780 1AFFFFD0        BNE              Loop20_25
 6234 00005784         
 6235 00005784 E3A08E3F        MOV              r8, #1008
 6236 00005788 E2888054        ADD              r8, #84     ;1092
 6237 0000578C         Loop20_26
 6238 0000578C E2488050        SUB              r8, #80
 6239 00005790 E28BBE3F        ADD              r11, #1008
 6240 00005794 E28BB054        ADD              r11, #84    ;1092
 6241 00005798 E59B0000        LDR              r0, [r11]   ;(a)
 6242 0000579C E24BBE3F        SUB              r11, #1008
 6243 000057A0 E24BB054        SUB              r11, #84    ;1092
 6244 000057A4 E08BB008        ADD              r11, r8
 6245 000057A8 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6246 000057AC         ;compare a and d
 6247 000057AC E3500000        CMP              r0, #0x00000000
 6248 000057B0 03A00001        MOVEQ            r0, #1      ;when a is 0
 6249 000057B4 13A00000        MOVNE            r0, #0
 6250 000057B8 E3510000        CMP              r1, #0x00000000



ARM Macro Assembler    Page 119 


 6251 000057BC 13A01001        MOVNE            r1, #1      ;when d is non-0
 6252 000057C0 03A01000        MOVEQ            r1, #0
 6253 000057C4 E0811000        ADD              r1, r0
 6254 000057C8 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6255 000057CC 03A06207        MOVEQ            r6, 0x70000000
 6256 000057D0 03A07E41        MOVEQ            r7, #1040
 6257 000057D4 04867004        STREQ            r7, [r6], #4 ;store i
 6258 000057D8 01A07008        MOVEQ            r7, r8
 6259 000057DC 02477034        SUBEQ            r7, #52
 6260 000057E0 04867004        STREQ            r7, [r6], #4 ;store j
 6261 000057E4 0B000339        BLEQ             Eij
 6262 000057E8 E28BBE3F        ADD              r11, #1008
 6263 000057EC E28BB054        ADD              r11, #84    ;1092
 6264 000057F0 E59B0000        LDR              r0, [r11]   ;(a)
 6265 000057F4 E24BBE3F        SUB              r11, #1008
 6266 000057F8 E24BB054        SUB              r11, #84    ;1092
 6267 000057FC E08BB008        ADD              r11, r8
 6268 00005800 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6269 00005804         ;recompare a and d
 6270 00005804 E4821004        STR              r1, [r2], #4
 6271 00005808 E4020004        STR              r0, [r2], #-4
 6272 0000580C EB000438        BL               Division
 6273 00005810 E5934000        LDR              r4, [r3]    ;get d/a
 6274 00005814 E3540102        CMP              r4, #0x80000000
 6275 00005818 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6276 0000581C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6277 00005820         ;get -d/a
 6278 00005820 E3A06207        MOV              r6, 0x70000000
 6279 00005824 E3A07E41        MOV              r7, #1040
 6280 00005828 E4867004        STR              r7, [r6], #4 ;store i
 6281 0000582C E1A07008        MOV              r7, r8
 6282 00005830 E2477034        SUB              r7, #52
 6283 00005834 E4867004        STR              r7, [r6], #4 ;store j
 6284 00005838 E4064008        STR              r4, [r6], #-8 ;store k
 6285 0000583C EB0002B1        BL               Eijk
 6286 00005840 E3580034        CMP              r8, #52
 6287 00005844 1AFFFFD0        BNE              Loop20_26
 6288 00005848         
 6289 00005848 E3A08E3F        MOV              r8, #1008
 6290 0000584C         Loop20_27
 6291 0000584C E2488050        SUB              r8, #80
 6292 00005850 E28BBE3F        ADD              r11, #1008
 6293 00005854 E59B0000        LDR              r0, [r11]   ;(a)
 6294 00005858 E24BBE3F        SUB              r11, #1008
 6295 0000585C E08BB008        ADD              r11, r8
 6296 00005860 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6297 00005864         ;compare a and d
 6298 00005864 E3500000        CMP              r0, #0x00000000
 6299 00005868 03A00001        MOVEQ            r0, #1      ;when a is 0
 6300 0000586C 13A00000        MOVNE            r0, #0
 6301 00005870 E3510000        CMP              r1, #0x00000000
 6302 00005874 13A01001        MOVNE            r1, #1      ;when d is non-0
 6303 00005878 03A01000        MOVEQ            r1, #0
 6304 0000587C E0811000        ADD              r1, r0
 6305 00005880 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0



ARM Macro Assembler    Page 120 


 6306 00005884 03A06207        MOVEQ            r6, 0x70000000
 6307 00005888 03A07D0F        MOVEQ            r7, #960
 6308 0000588C 04867004        STREQ            r7, [r6], #4 ;store i
 6309 00005890 01A07008        MOVEQ            r7, r8
 6310 00005894 02477030        SUBEQ            r7, #48
 6311 00005898 04867004        STREQ            r7, [r6], #4 ;store j
 6312 0000589C 0B00030B        BLEQ             Eij
 6313 000058A0 E28BBE3F        ADD              r11, #1008
 6314 000058A4 E59B0000        LDR              r0, [r11]   ;(a)
 6315 000058A8 E24BBE3F        SUB              r11, #1008
 6316 000058AC E08BB008        ADD              r11, r8
 6317 000058B0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6318 000058B4         ;recompare a and d
 6319 000058B4 E4821004        STR              r1, [r2], #4
 6320 000058B8 E4020004        STR              r0, [r2], #-4
 6321 000058BC EB00040C        BL               Division
 6322 000058C0 E5934000        LDR              r4, [r3]    ;get d/a
 6323 000058C4 E3540102        CMP              r4, #0x80000000
 6324 000058C8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6325 000058CC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6326 000058D0         ;get -d/a
 6327 000058D0 E3A06207        MOV              r6, 0x70000000
 6328 000058D4 E3A07D0F        MOV              r7, #960
 6329 000058D8 E4867004        STR              r7, [r6], #4 ;store i
 6330 000058DC E1A07008        MOV              r7, r8
 6331 000058E0 E2477030        SUB              r7, #48
 6332 000058E4 E4867004        STR              r7, [r6], #4 ;store j
 6333 000058E8 E4064008        STR              r4, [r6], #-8 ;store k
 6334 000058EC EB000285        BL               Eijk
 6335 000058F0 E3580030        CMP              r8, #48
 6336 000058F4 1AFFFFD4        BNE              Loop20_27
 6337 000058F8         
 6338 000058F8 E3A08FE7        MOV              r8, #924
 6339 000058FC         Loop20_28
 6340 000058FC E2488050        SUB              r8, #80
 6341 00005900 E28BBFE7        ADD              r11, #924
 6342 00005904 E59B0000        LDR              r0, [r11]   ;(a)
 6343 00005908 E24BBFE7        SUB              r11, #924
 6344 0000590C E08BB008        ADD              r11, r8
 6345 00005910 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6346 00005914         ;compare a and d
 6347 00005914 E3500000        CMP              r0, #0x00000000
 6348 00005918 03A00001        MOVEQ            r0, #1      ;when a is 0
 6349 0000591C 13A00000        MOVNE            r0, #0
 6350 00005920 E3510000        CMP              r1, #0x00000000
 6351 00005924 13A01001        MOVNE            r1, #1      ;when d is non-0
 6352 00005928 03A01000        MOVEQ            r1, #0
 6353 0000592C E0811000        ADD              r1, r0
 6354 00005930 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6355 00005934 03A06207        MOVEQ            r6, 0x70000000
 6356 00005938 03A07E37        MOVEQ            r7, #880
 6357 0000593C 04867004        STREQ            r7, [r6], #4 ;store i
 6358 00005940 01A07008        MOVEQ            r7, r8
 6359 00005944 0247702C        SUBEQ            r7, #44
 6360 00005948 04867004        STREQ            r7, [r6], #4 ;store j
 6361 0000594C 0B0002DF        BLEQ             Eij



ARM Macro Assembler    Page 121 


 6362 00005950 E28BBFE7        ADD              r11, #924
 6363 00005954 E59B0000        LDR              r0, [r11]   ;(a)
 6364 00005958 E24BBFE7        SUB              r11, #924
 6365 0000595C E08BB008        ADD              r11, r8
 6366 00005960 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6367 00005964         ;recompare a and d
 6368 00005964 E4821004        STR              r1, [r2], #4
 6369 00005968 E4020004        STR              r0, [r2], #-4
 6370 0000596C EB0003E0        BL               Division
 6371 00005970 E5934000        LDR              r4, [r3]    ;get d/a
 6372 00005974 E3540102        CMP              r4, #0x80000000
 6373 00005978 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6374 0000597C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6375 00005980         ;get -d/a
 6376 00005980 E3A06207        MOV              r6, 0x70000000
 6377 00005984 E3A07E37        MOV              r7, #880
 6378 00005988 E4867004        STR              r7, [r6], #4 ;store i
 6379 0000598C E1A07008        MOV              r7, r8
 6380 00005990 E247702C        SUB              r7, #44
 6381 00005994 E4867004        STR              r7, [r6], #4 ;store j
 6382 00005998 E4064008        STR              r4, [r6], #-8 ;store k
 6383 0000599C EB000259        BL               Eijk
 6384 000059A0 E358002C        CMP              r8, #44
 6385 000059A4 1AFFFFD4        BNE              Loop20_28
 6386 000059A8         
 6387 000059A8 E3A08FD2        MOV              r8, #840
 6388 000059AC         Loop20_29
 6389 000059AC E2488050        SUB              r8, #80
 6390 000059B0 E28BBFD2        ADD              r11, #840
 6391 000059B4 E59B0000        LDR              r0, [r11]   ;(a)
 6392 000059B8 E24BBFD2        SUB              r11, #840
 6393 000059BC E08BB008        ADD              r11, r8
 6394 000059C0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6395 000059C4         ;compare a and d
 6396 000059C4 E3500000        CMP              r0, #0x00000000
 6397 000059C8 03A00001        MOVEQ            r0, #1      ;when a is 0
 6398 000059CC 13A00000        MOVNE            r0, #0
 6399 000059D0 E3510000        CMP              r1, #0x00000000
 6400 000059D4 13A01001        MOVNE            r1, #1      ;when d is non-0
 6401 000059D8 03A01000        MOVEQ            r1, #0
 6402 000059DC E0811000        ADD              r1, r0
 6403 000059E0 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6404 000059E4 03A06207        MOVEQ            r6, 0x70000000
 6405 000059E8 03A07E32        MOVEQ            r7, #800
 6406 000059EC 04867004        STREQ            r7, [r6], #4 ;store i
 6407 000059F0 01A07008        MOVEQ            r7, r8
 6408 000059F4 02477028        SUBEQ            r7, #40
 6409 000059F8 04867004        STREQ            r7, [r6], #4 ;store j
 6410 000059FC 0B0002B3        BLEQ             Eij
 6411 00005A00 E28BBFD2        ADD              r11, #840
 6412 00005A04 E59B0000        LDR              r0, [r11]   ;(a)
 6413 00005A08 E24BBFD2        SUB              r11, #840
 6414 00005A0C E08BB008        ADD              r11, r8
 6415 00005A10 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6416 00005A14         ;recompare a and d
 6417 00005A14 E4821004        STR              r1, [r2], #4



ARM Macro Assembler    Page 122 


 6418 00005A18 E4020004        STR              r0, [r2], #-4
 6419 00005A1C EB0003B4        BL               Division
 6420 00005A20 E5934000        LDR              r4, [r3]    ;get d/a
 6421 00005A24 E3540102        CMP              r4, #0x80000000
 6422 00005A28 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6423 00005A2C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6424 00005A30         ;get -d/a
 6425 00005A30 E3A06207        MOV              r6, 0x70000000
 6426 00005A34 E3A07E32        MOV              r7, #800
 6427 00005A38 E4867004        STR              r7, [r6], #4 ;store i
 6428 00005A3C E1A07008        MOV              r7, r8
 6429 00005A40 E2477028        SUB              r7, #40
 6430 00005A44 E4867004        STR              r7, [r6], #4 ;store j
 6431 00005A48 E4064008        STR              r4, [r6], #-8 ;store k
 6432 00005A4C EB00022D        BL               Eijk
 6433 00005A50 E3580028        CMP              r8, #40
 6434 00005A54 1AFFFFD4        BNE              Loop20_29
 6435 00005A58         
 6436 00005A58 E3A08FBD        MOV              r8, #756
 6437 00005A5C         Loop20_30
 6438 00005A5C E2488050        SUB              r8, #80
 6439 00005A60 E28BBFBD        ADD              r11, #756
 6440 00005A64 E59B0000        LDR              r0, [r11]   ;(a)
 6441 00005A68 E24BBFBD        SUB              r11, #756
 6442 00005A6C E08BB008        ADD              r11, r8
 6443 00005A70 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6444 00005A74         ;compare a and d
 6445 00005A74 E3500000        CMP              r0, #0x00000000
 6446 00005A78 03A00001        MOVEQ            r0, #1      ;when a is 0
 6447 00005A7C 13A00000        MOVNE            r0, #0
 6448 00005A80 E3510000        CMP              r1, #0x00000000
 6449 00005A84 13A01001        MOVNE            r1, #1      ;when d is non-0
 6450 00005A88 03A01000        MOVEQ            r1, #0
 6451 00005A8C E0811000        ADD              r1, r0
 6452 00005A90 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6453 00005A94 03A06207        MOVEQ            r6, 0x70000000
 6454 00005A98 03A07E2D        MOVEQ            r7, #720
 6455 00005A9C 04867004        STREQ            r7, [r6], #4 ;store i
 6456 00005AA0 01A07008        MOVEQ            r7, r8
 6457 00005AA4 02477024        SUBEQ            r7, #36
 6458 00005AA8 04867004        STREQ            r7, [r6], #4 ;store j
 6459 00005AAC 0B000287        BLEQ             Eij
 6460 00005AB0 E28BBFBD        ADD              r11, #756
 6461 00005AB4 E59B0000        LDR              r0, [r11]   ;(a)
 6462 00005AB8 E24BBFBD        SUB              r11, #756
 6463 00005ABC E08BB008        ADD              r11, r8
 6464 00005AC0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6465 00005AC4         ;recompare a and d
 6466 00005AC4 E4821004        STR              r1, [r2], #4
 6467 00005AC8 E4020004        STR              r0, [r2], #-4
 6468 00005ACC EB000388        BL               Division
 6469 00005AD0 E5934000        LDR              r4, [r3]    ;get d/a
 6470 00005AD4 E3540102        CMP              r4, #0x80000000
 6471 00005AD8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6472 00005ADC B2844102        ADDLT            r4, #0x80000000 ;positive to ne



ARM Macro Assembler    Page 123 


                                                            gative
 6473 00005AE0         ;get -d/a
 6474 00005AE0 E3A06207        MOV              r6, 0x70000000
 6475 00005AE4 E3A07E2D        MOV              r7, #720
 6476 00005AE8 E4867004        STR              r7, [r6], #4 ;store i
 6477 00005AEC E1A07008        MOV              r7, r8
 6478 00005AF0 E2477024        SUB              r7, #36
 6479 00005AF4 E4867004        STR              r7, [r6], #4 ;store j
 6480 00005AF8 E4064008        STR              r4, [r6], #-8 ;store k
 6481 00005AFC EB000201        BL               Eijk
 6482 00005B00 E3580024        CMP              r8, #36
 6483 00005B04 1AFFFFD4        BNE              Loop20_30
 6484 00005B08         
 6485 00005B08 E3A08E2A        MOV              r8, #672
 6486 00005B0C         Loop20_31
 6487 00005B0C E2488050        SUB              r8, #80
 6488 00005B10 E28BBE2A        ADD              r11, #672
 6489 00005B14 E59B0000        LDR              r0, [r11]   ;(a)
 6490 00005B18 E24BBE2A        SUB              r11, #672
 6491 00005B1C E08BB008        ADD              r11, r8
 6492 00005B20 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6493 00005B24         ;compare a and d
 6494 00005B24 E3500000        CMP              r0, #0x00000000
 6495 00005B28 03A00001        MOVEQ            r0, #1      ;when a is 0
 6496 00005B2C 13A00000        MOVNE            r0, #0
 6497 00005B30 E3510000        CMP              r1, #0x00000000
 6498 00005B34 13A01001        MOVNE            r1, #1      ;when d is non-0
 6499 00005B38 03A01000        MOVEQ            r1, #0
 6500 00005B3C E0811000        ADD              r1, r0
 6501 00005B40 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6502 00005B44 03A06207        MOVEQ            r6, 0x70000000
 6503 00005B48 03A07D0A        MOVEQ            r7, #640
 6504 00005B4C 04867004        STREQ            r7, [r6], #4 ;store i
 6505 00005B50 01A07008        MOVEQ            r7, r8
 6506 00005B54 02477020        SUBEQ            r7, #32
 6507 00005B58 04867004        STREQ            r7, [r6], #4 ;store j
 6508 00005B5C 0B00025B        BLEQ             Eij
 6509 00005B60 E28BBE2A        ADD              r11, #672
 6510 00005B64 E59B0000        LDR              r0, [r11]   ;(a)
 6511 00005B68 E24BBE2A        SUB              r11, #672
 6512 00005B6C E08BB008        ADD              r11, r8
 6513 00005B70 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6514 00005B74         ;recompare a and d
 6515 00005B74 E4821004        STR              r1, [r2], #4
 6516 00005B78 E4020004        STR              r0, [r2], #-4
 6517 00005B7C EB00035C        BL               Division
 6518 00005B80 E5934000        LDR              r4, [r3]    ;get d/a
 6519 00005B84 E3540102        CMP              r4, #0x80000000
 6520 00005B88 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6521 00005B8C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6522 00005B90         ;get -d/a
 6523 00005B90 E3A06207        MOV              r6, 0x70000000
 6524 00005B94 E3A07D0A        MOV              r7, #640
 6525 00005B98 E4867004        STR              r7, [r6], #4 ;store i
 6526 00005B9C E1A07008        MOV              r7, r8
 6527 00005BA0 E2477020        SUB              r7, #32



ARM Macro Assembler    Page 124 


 6528 00005BA4 E4867004        STR              r7, [r6], #4 ;store j
 6529 00005BA8 E4064008        STR              r4, [r6], #-8 ;store k
 6530 00005BAC EB0001D5        BL               Eijk
 6531 00005BB0 E3580020        CMP              r8, #32
 6532 00005BB4 1AFFFFD4        BNE              Loop20_31
 6533 00005BB8         
 6534 00005BB8 E3A08F93        MOV              r8, #588
 6535 00005BBC         Loop20_32
 6536 00005BBC E2488050        SUB              r8, #80
 6537 00005BC0 E28BBF93        ADD              r11, #588
 6538 00005BC4 E59B0000        LDR              r0, [r11]   ;(a)
 6539 00005BC8 E24BBF93        SUB              r11, #588
 6540 00005BCC E08BB008        ADD              r11, r8
 6541 00005BD0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6542 00005BD4         ;compare a and d
 6543 00005BD4 E3500000        CMP              r0, #0x00000000
 6544 00005BD8 03A00001        MOVEQ            r0, #1      ;when a is 0
 6545 00005BDC 13A00000        MOVNE            r0, #0
 6546 00005BE0 E3510000        CMP              r1, #0x00000000
 6547 00005BE4 13A01001        MOVNE            r1, #1      ;when d is non-0
 6548 00005BE8 03A01000        MOVEQ            r1, #0
 6549 00005BEC E0811000        ADD              r1, r0
 6550 00005BF0 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6551 00005BF4 03A06207        MOVEQ            r6, 0x70000000
 6552 00005BF8 03A07E23        MOVEQ            r7, #560
 6553 00005BFC 04867004        STREQ            r7, [r6], #4 ;store i
 6554 00005C00 01A07008        MOVEQ            r7, r8
 6555 00005C04 0247701C        SUBEQ            r7, #28
 6556 00005C08 04867004        STREQ            r7, [r6], #4 ;store j
 6557 00005C0C 0B00022F        BLEQ             Eij
 6558 00005C10 E28BBF93        ADD              r11, #588
 6559 00005C14 E59B0000        LDR              r0, [r11]   ;(a)
 6560 00005C18 E24BBF93        SUB              r11, #588
 6561 00005C1C E08BB008        ADD              r11, r8
 6562 00005C20 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6563 00005C24         ;recompare a and d
 6564 00005C24 E4821004        STR              r1, [r2], #4
 6565 00005C28 E4020004        STR              r0, [r2], #-4
 6566 00005C2C EB000330        BL               Division
 6567 00005C30 E5934000        LDR              r4, [r3]    ;get d/a
 6568 00005C34 E3540102        CMP              r4, #0x80000000
 6569 00005C38 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6570 00005C3C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6571 00005C40         ;get -d/a
 6572 00005C40 E3A06207        MOV              r6, 0x70000000
 6573 00005C44 E3A07E23        MOV              r7, #560
 6574 00005C48 E4867004        STR              r7, [r6], #4 ;store i
 6575 00005C4C E1A07008        MOV              r7, r8
 6576 00005C50 E247701C        SUB              r7, #28
 6577 00005C54 E4867004        STR              r7, [r6], #4 ;store j
 6578 00005C58 E4064008        STR              r4, [r6], #-8 ;store k
 6579 00005C5C EB0001A9        BL               Eijk
 6580 00005C60 E358001C        CMP              r8, #28
 6581 00005C64 1AFFFFD4        BNE              Loop20_32
 6582 00005C68         
 6583 00005C68 E3A08F7E        MOV              r8, #504



ARM Macro Assembler    Page 125 


 6584 00005C6C         Loop20_33
 6585 00005C6C E2488050        SUB              r8, #80
 6586 00005C70 E28BBF7E        ADD              r11, #504
 6587 00005C74 E59B0000        LDR              r0, [r11]   ;(a)
 6588 00005C78 E24BBF7E        SUB              r11, #504
 6589 00005C7C E08BB008        ADD              r11, r8
 6590 00005C80 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6591 00005C84         ;compare a and d
 6592 00005C84 E3500000        CMP              r0, #0x00000000
 6593 00005C88 03A00001        MOVEQ            r0, #1      ;when a is 0
 6594 00005C8C 13A00000        MOVNE            r0, #0
 6595 00005C90 E3510000        CMP              r1, #0x00000000
 6596 00005C94 13A01001        MOVNE            r1, #1      ;when d is non-0
 6597 00005C98 03A01000        MOVEQ            r1, #0
 6598 00005C9C E0811000        ADD              r1, r0
 6599 00005CA0 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6600 00005CA4 03A06207        MOVEQ            r6, 0x70000000
 6601 00005CA8 03A07E1E        MOVEQ            r7, #480
 6602 00005CAC 04867004        STREQ            r7, [r6], #4 ;store i
 6603 00005CB0 01A07008        MOVEQ            r7, r8
 6604 00005CB4 02477018        SUBEQ            r7, #24
 6605 00005CB8 04867004        STREQ            r7, [r6], #4 ;store j
 6606 00005CBC 0B000203        BLEQ             Eij
 6607 00005CC0 E28BBF7E        ADD              r11, #504
 6608 00005CC4 E59B0000        LDR              r0, [r11]   ;(a)
 6609 00005CC8 E24BBF7E        SUB              r11, #504
 6610 00005CCC E08BB008        ADD              r11, r8
 6611 00005CD0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6612 00005CD4         ;recompare a and d
 6613 00005CD4 E4821004        STR              r1, [r2], #4
 6614 00005CD8 E4020004        STR              r0, [r2], #-4
 6615 00005CDC EB000304        BL               Division
 6616 00005CE0 E5934000        LDR              r4, [r3]    ;get d/a
 6617 00005CE4 E3540102        CMP              r4, #0x80000000
 6618 00005CE8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6619 00005CEC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6620 00005CF0         ;get -d/a
 6621 00005CF0 E3A06207        MOV              r6, 0x70000000
 6622 00005CF4 E3A07E1E        MOV              r7, #480
 6623 00005CF8 E4867004        STR              r7, [r6], #4 ;store i
 6624 00005CFC E1A07008        MOV              r7, r8
 6625 00005D00 E2477018        SUB              r7, #24
 6626 00005D04 E4867004        STR              r7, [r6], #4 ;store j
 6627 00005D08 E4064008        STR              r4, [r6], #-8 ;store k
 6628 00005D0C EB00017D        BL               Eijk
 6629 00005D10 E3580018        CMP              r8, #24
 6630 00005D14 1AFFFFD4        BNE              Loop20_33
 6631 00005D18         
 6632 00005D18 E3A08F69        MOV              r8, #420
 6633 00005D1C         Loop20_34
 6634 00005D1C E2488050        SUB              r8, #80
 6635 00005D20 E28BBF69        ADD              r11, #420
 6636 00005D24 E59B0000        LDR              r0, [r11]   ;(a)
 6637 00005D28 E24BBF69        SUB              r11, #420
 6638 00005D2C E08BB008        ADD              r11, r8
 6639 00005D30 E61B1008        LDR              r1, [r11], -r8 ;(d)



ARM Macro Assembler    Page 126 


 6640 00005D34         ;compare a and d
 6641 00005D34 E3500000        CMP              r0, #0x00000000
 6642 00005D38 03A00001        MOVEQ            r0, #1      ;when a is 0
 6643 00005D3C 13A00000        MOVNE            r0, #0
 6644 00005D40 E3510000        CMP              r1, #0x00000000
 6645 00005D44 13A01001        MOVNE            r1, #1      ;when d is non-0
 6646 00005D48 03A01000        MOVEQ            r1, #0
 6647 00005D4C E0811000        ADD              r1, r0
 6648 00005D50 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6649 00005D54 03A06207        MOVEQ            r6, 0x70000000
 6650 00005D58 03A07E19        MOVEQ            r7, #400
 6651 00005D5C 04867004        STREQ            r7, [r6], #4 ;store i
 6652 00005D60 01A07008        MOVEQ            r7, r8
 6653 00005D64 02477014        SUBEQ            r7, #20
 6654 00005D68 04867004        STREQ            r7, [r6], #4 ;store j
 6655 00005D6C 0B0001D7        BLEQ             Eij
 6656 00005D70 E28BBF69        ADD              r11, #420
 6657 00005D74 E59B0000        LDR              r0, [r11]   ;(a)
 6658 00005D78 E24BBF69        SUB              r11, #420
 6659 00005D7C E08BB008        ADD              r11, r8
 6660 00005D80 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6661 00005D84         ;recompare a and d
 6662 00005D84 E4821004        STR              r1, [r2], #4
 6663 00005D88 E4020004        STR              r0, [r2], #-4
 6664 00005D8C EB0002D8        BL               Division
 6665 00005D90 E5934000        LDR              r4, [r3]    ;get d/a
 6666 00005D94 E3540102        CMP              r4, #0x80000000
 6667 00005D98 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6668 00005D9C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6669 00005DA0         ;get -d/a
 6670 00005DA0 E3A06207        MOV              r6, 0x70000000
 6671 00005DA4 E3A07E19        MOV              r7, #400
 6672 00005DA8 E4867004        STR              r7, [r6], #4 ;store i
 6673 00005DAC E1A07008        MOV              r7, r8
 6674 00005DB0 E2477014        SUB              r7, #20
 6675 00005DB4 E4867004        STR              r7, [r6], #4 ;store j
 6676 00005DB8 E4064008        STR              r4, [r6], #-8 ;store k
 6677 00005DBC EB000151        BL               Eijk
 6678 00005DC0 E3580014        CMP              r8, #20
 6679 00005DC4 1AFFFFD4        BNE              Loop20_34
 6680 00005DC8         
 6681 00005DC8 E3A08E15        MOV              r8, #336
 6682 00005DCC         Loop20_35
 6683 00005DCC E2488050        SUB              r8, #80
 6684 00005DD0 E28BBE15        ADD              r11, #336
 6685 00005DD4 E59B0000        LDR              r0, [r11]   ;(a)
 6686 00005DD8 E24BBE15        SUB              r11, #336
 6687 00005DDC E08BB008        ADD              r11, r8
 6688 00005DE0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6689 00005DE4         ;compare a and d
 6690 00005DE4 E3500000        CMP              r0, #0x00000000
 6691 00005DE8 03A00001        MOVEQ            r0, #1      ;when a is 0
 6692 00005DEC 13A00000        MOVNE            r0, #0
 6693 00005DF0 E3510000        CMP              r1, #0x00000000
 6694 00005DF4 13A01001        MOVNE            r1, #1      ;when d is non-0
 6695 00005DF8 03A01000        MOVEQ            r1, #0



ARM Macro Assembler    Page 127 


 6696 00005DFC E0811000        ADD              r1, r0
 6697 00005E00 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6698 00005E04 03A06207        MOVEQ            r6, 0x70000000
 6699 00005E08 03A07D05        MOVEQ            r7, #320
 6700 00005E0C 04867004        STREQ            r7, [r6], #4 ;store i
 6701 00005E10 01A07008        MOVEQ            r7, r8
 6702 00005E14 02477010        SUBEQ            r7, #16
 6703 00005E18 04867004        STREQ            r7, [r6], #4 ;store j
 6704 00005E1C 0B0001AB        BLEQ             Eij
 6705 00005E20 E28BBE15        ADD              r11, #336
 6706 00005E24 E59B0000        LDR              r0, [r11]   ;(a)
 6707 00005E28 E24BBE15        SUB              r11, #336
 6708 00005E2C E08BB008        ADD              r11, r8
 6709 00005E30 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6710 00005E34         ;recompare a and d
 6711 00005E34 E4821004        STR              r1, [r2], #4
 6712 00005E38 E4020004        STR              r0, [r2], #-4
 6713 00005E3C EB0002AC        BL               Division
 6714 00005E40 E5934000        LDR              r4, [r3]    ;get d/a
 6715 00005E44 E3540102        CMP              r4, #0x80000000
 6716 00005E48 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6717 00005E4C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6718 00005E50         ;get -d/a
 6719 00005E50 E3A06207        MOV              r6, 0x70000000
 6720 00005E54 E3A07D05        MOV              r7, #320
 6721 00005E58 E4867004        STR              r7, [r6], #4 ;store i
 6722 00005E5C E1A07008        MOV              r7, r8
 6723 00005E60 E2477010        SUB              r7, #16
 6724 00005E64 E4867004        STR              r7, [r6], #4 ;store j
 6725 00005E68 E4064008        STR              r4, [r6], #-8 ;store k
 6726 00005E6C EB000125        BL               Eijk
 6727 00005E70 E3580010        CMP              r8, #16
 6728 00005E74 1AFFFFD4        BNE              Loop20_35
 6729 00005E78         
 6730 00005E78 E3A080FC        MOV              r8, #252
 6731 00005E7C         Loop20_36
 6732 00005E7C E2488050        SUB              r8, #80
 6733 00005E80 E28BB0FC        ADD              r11, #252
 6734 00005E84 E59B0000        LDR              r0, [r11]   ;(a)
 6735 00005E88 E24BB0FC        SUB              r11, #252
 6736 00005E8C E08BB008        ADD              r11, r8
 6737 00005E90 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6738 00005E94         ;compare a and d
 6739 00005E94 E3500000        CMP              r0, #0x00000000
 6740 00005E98 03A00001        MOVEQ            r0, #1      ;when a is 0
 6741 00005E9C 13A00000        MOVNE            r0, #0
 6742 00005EA0 E3510000        CMP              r1, #0x00000000
 6743 00005EA4 13A01001        MOVNE            r1, #1      ;when d is non-0
 6744 00005EA8 03A01000        MOVEQ            r1, #0
 6745 00005EAC E0811000        ADD              r1, r0
 6746 00005EB0 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6747 00005EB4 03A06207        MOVEQ            r6, 0x70000000
 6748 00005EB8 03A070F0        MOVEQ            r7, #240
 6749 00005EBC 04867004        STREQ            r7, [r6], #4 ;store i
 6750 00005EC0 01A07008        MOVEQ            r7, r8



ARM Macro Assembler    Page 128 


 6751 00005EC4 0247700C        SUBEQ            r7, #12
 6752 00005EC8 04867004        STREQ            r7, [r6], #4 ;store j
 6753 00005ECC 0B00017F        BLEQ             Eij
 6754 00005ED0 E28BB0FC        ADD              r11, #252
 6755 00005ED4 E59B0000        LDR              r0, [r11]   ;(a)
 6756 00005ED8 E24BB0FC        SUB              r11, #252
 6757 00005EDC E08BB008        ADD              r11, r8
 6758 00005EE0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6759 00005EE4         ;recompare a and d
 6760 00005EE4 E4821004        STR              r1, [r2], #4
 6761 00005EE8 E4020004        STR              r0, [r2], #-4
 6762 00005EEC EB000280        BL               Division
 6763 00005EF0 E5934000        LDR              r4, [r3]    ;get d/a
 6764 00005EF4 E3540102        CMP              r4, #0x80000000
 6765 00005EF8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6766 00005EFC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6767 00005F00         ;get -d/a
 6768 00005F00 E3A06207        MOV              r6, 0x70000000
 6769 00005F04 E3A070F0        MOV              r7, #240
 6770 00005F08 E4867004        STR              r7, [r6], #4 ;store i
 6771 00005F0C E1A07008        MOV              r7, r8
 6772 00005F10 E247700C        SUB              r7, #12
 6773 00005F14 E4867004        STR              r7, [r6], #4 ;store j
 6774 00005F18 E4064008        STR              r4, [r6], #-8 ;store k
 6775 00005F1C EB0000F9        BL               Eijk
 6776 00005F20 E358000C        CMP              r8, #12
 6777 00005F24 1AFFFFD4        BNE              Loop20_36
 6778 00005F28         
 6779 00005F28 E3A080A8        MOV              r8, #168
 6780 00005F2C         Loop20_37
 6781 00005F2C E2488050        SUB              r8, #80
 6782 00005F30 E28BB0A8        ADD              r11, #168
 6783 00005F34 E59B0000        LDR              r0, [r11]   ;(a)
 6784 00005F38 E24BB0A8        SUB              r11, #168
 6785 00005F3C E08BB008        ADD              r11, r8
 6786 00005F40 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6787 00005F44         ;compare a and d
 6788 00005F44 E3500000        CMP              r0, #0x00000000
 6789 00005F48 03A00001        MOVEQ            r0, #1      ;when a is 0
 6790 00005F4C 13A00000        MOVNE            r0, #0
 6791 00005F50 E3510000        CMP              r1, #0x00000000
 6792 00005F54 13A01001        MOVNE            r1, #1      ;when d is non-0
 6793 00005F58 03A01000        MOVEQ            r1, #0
 6794 00005F5C E0811000        ADD              r1, r0
 6795 00005F60 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6796 00005F64 03A06207        MOVEQ            r6, 0x70000000
 6797 00005F68 03A070A0        MOVEQ            r7, #160
 6798 00005F6C 04867004        STREQ            r7, [r6], #4 ;store i
 6799 00005F70 01A07008        MOVEQ            r7, r8
 6800 00005F74 02477008        SUBEQ            r7, #8
 6801 00005F78 04867004        STREQ            r7, [r6], #4 ;store j
 6802 00005F7C 0B000153        BLEQ             Eij
 6803 00005F80 E28BB0A8        ADD              r11, #168
 6804 00005F84 E59B0000        LDR              r0, [r11]   ;(a)
 6805 00005F88 E24BB0A8        SUB              r11, #168
 6806 00005F8C E08BB008        ADD              r11, r8



ARM Macro Assembler    Page 129 


 6807 00005F90 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6808 00005F94         ;recompare a and d
 6809 00005F94 E4821004        STR              r1, [r2], #4
 6810 00005F98 E4020004        STR              r0, [r2], #-4
 6811 00005F9C EB000254        BL               Division
 6812 00005FA0 E5934000        LDR              r4, [r3]    ;get d/a
 6813 00005FA4 E3540102        CMP              r4, #0x80000000
 6814 00005FA8 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6815 00005FAC B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6816 00005FB0         ;get -d/a
 6817 00005FB0 E3A06207        MOV              r6, 0x70000000
 6818 00005FB4 E3A070A0        MOV              r7, #160
 6819 00005FB8 E4867004        STR              r7, [r6], #4 ;store i
 6820 00005FBC E1A07008        MOV              r7, r8
 6821 00005FC0 E2477008        SUB              r7, #8
 6822 00005FC4 E4867004        STR              r7, [r6], #4 ;store j
 6823 00005FC8 E4064008        STR              r4, [r6], #-8 ;store k
 6824 00005FCC EB0000CD        BL               Eijk
 6825 00005FD0 E3580008        CMP              r8, #8
 6826 00005FD4 1AFFFFD4        BNE              Loop20_37
 6827 00005FD8         
 6828 00005FD8 E3A08054        MOV              r8, #84
 6829 00005FDC         Loop20_38
 6830 00005FDC E2488050        SUB              r8, #80
 6831 00005FE0 E28BB054        ADD              r11, #84
 6832 00005FE4 E59B0000        LDR              r0, [r11]   ;(a)
 6833 00005FE8 E24BB054        SUB              r11, #84
 6834 00005FEC E08BB008        ADD              r11, r8
 6835 00005FF0 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6836 00005FF4         ;compare a and d
 6837 00005FF4 E3500000        CMP              r0, #0x00000000
 6838 00005FF8 03A00001        MOVEQ            r0, #1      ;when a is 0
 6839 00005FFC 13A00000        MOVNE            r0, #0
 6840 00006000 E3510000        CMP              r1, #0x00000000
 6841 00006004 13A01001        MOVNE            r1, #1      ;when d is non-0
 6842 00006008 03A01000        MOVEQ            r1, #0
 6843 0000600C E0811000        ADD              r1, r0
 6844 00006010 E3510002        CMP              r1, #2      ;when a is 0 and d 
                                                            is non-0
 6845 00006014 03A06207        MOVEQ            r6, 0x70000000
 6846 00006018 03A07050        MOVEQ            r7, #80
 6847 0000601C 04867004        STREQ            r7, [r6], #4 ;store i
 6848 00006020 01A07008        MOVEQ            r7, r8
 6849 00006024 02477004        SUBEQ            r7, #4
 6850 00006028 04867004        STREQ            r7, [r6], #4 ;store j
 6851 0000602C 0B000127        BLEQ             Eij
 6852 00006030 E28BB054        ADD              r11, #84
 6853 00006034 E59B0000        LDR              r0, [r11]   ;(a)
 6854 00006038 E24BB054        SUB              r11, #84
 6855 0000603C E08BB008        ADD              r11, r8
 6856 00006040 E61B1008        LDR              r1, [r11], -r8 ;(d)
 6857 00006044         ;recompare a and d
 6858 00006044 E4821004        STR              r1, [r2], #4
 6859 00006048 E4020004        STR              r0, [r2], #-4
 6860 0000604C EB000228        BL               Division
 6861 00006050 E5934000        LDR              r4, [r3]    ;get d/a
 6862 00006054 E3540102        CMP              r4, #0x80000000



ARM Macro Assembler    Page 130 


 6863 00006058 C2444102        SUBGT            r4, #0x80000000 ;negative to po
                                                            sitive
 6864 0000605C B2844102        ADDLT            r4, #0x80000000 ;positive to ne
                                                            gative
 6865 00006060         ;get -d/a
 6866 00006060 E3A06207        MOV              r6, 0x70000000
 6867 00006064 E3A07050        MOV              r7, #80
 6868 00006068 E4867004        STR              r7, [r6], #4 ;store i
 6869 0000606C E1A07008        MOV              r7, r8
 6870 00006070 E2477004        SUB              r7, #4
 6871 00006074 E4867004        STR              r7, [r6], #4 ;store j
 6872 00006078 E4064008        STR              r4, [r6], #-8 ;store k
 6873 0000607C EB0000A1        BL               Eijk
 6874 00006080 E3580004        CMP              r8, #4
 6875 00006084 1AFFFFD4        BNE              Loop20_38
 6876 00006088         
 6877 00006088 E3A0B203        MOV              r11, #0x30000000
 6878 0000608C E3E08053        MOV              r8, #-84
 6879 00006090 E3E0C04F        MOV              r12, #-80
 6880 00006094         Loop20_39
 6881 00006094 E2888054        ADD              r8, #84
 6882 00006098 E28CC050        ADD              r12, #80
 6883 0000609C E08BB008        ADD              r11, r8
 6884 000060A0 E61B0008        LDR              r0, [r11], -r8 ;a
 6885 000060A4 E3A015FE        MOV              r1, #0x3F800000
 6886 000060A8 E4821004        STR              r1, [r2], #4
 6887 000060AC E4020004        STR              r0, [r2], #-4
 6888 000060B0 EB00020F        BL               Division
 6889 000060B4 E5934000        LDR              r4, [r3]    ;get 1/a
 6890 000060B8 E3A06207        MOV              r6, 0x70000000
 6891 000060BC E1A0700C        MOV              r7, r12
 6892 000060C0 E4867004        STR              r7, [r6], #4 ;store i
 6893 000060C4 E1A07000        MOV              r7, r0
 6894 000060C8 E4064004        STR              r4, [r6], #-4 ;store k
 6895 000060CC EB0000CD        BL               Eik
 6896 000060D0 E35C0E5F        CMP              r12, #1520
 6897 000060D4 1AFFFFEE        BNE              Loop20_39
 6898 000060D8         ;now identity
 6899 000060D8         
 6900 000060D8 E3A00205        MOV              r0, 0x50000000
 6901 000060DC E590B000        LDR              r11, [r0]   ;get size
 6902 000060E0 E3A0C206        MOV              r12, 0x60000000
 6903 000060E4 E3A0A000        MOV              r10, #0
 6904 000060E8 E35B000B        CMP              r11, #11
 6905 000060EC 03A0B206        MOVEQ            r11, 0x60000000
 6906 000060F0 0A000018        BEQ              Loop11_2
 6907 000060F4 E35B000C        CMP              r11, #12
 6908 000060F8 03A0B206        MOVEQ            r11, 0x60000000
 6909 000060FC 0A000021        BEQ              Loop12_2
 6910 00006100 E35B000D        CMP              r11, #13
 6911 00006104 03A0B206        MOVEQ            r11, 0x60000000
 6912 00006108 0A00002A        BEQ              Loop13_2
 6913 0000610C E35B000E        CMP              r11, #14
 6914 00006110 03A0B206        MOVEQ            r11, 0x60000000
 6915 00006114 0A000033        BEQ              Loop14_2
 6916 00006118 E35B000F        CMP              r11, #15
 6917 0000611C 03A0B206        MOVEQ            r11, 0x60000000
 6918 00006120 0A00003C        BEQ              Loop15_2
 6919 00006124 E35B0010        CMP              r11, #16



ARM Macro Assembler    Page 131 


 6920 00006128 03A0B206        MOVEQ            r11, 0x60000000
 6921 0000612C 0A000045        BEQ              Loop16_2
 6922 00006130 E35B0011        CMP              r11, #17
 6923 00006134 03A0B206        MOVEQ            r11, 0x60000000
 6924 00006138 0A00004E        BEQ              Loop17_2
 6925 0000613C E35B0012        CMP              r11, #18
 6926 00006140 03A0B206        MOVEQ            r11, 0x60000000
 6927 00006144 0A000057        BEQ              Loop18_2
 6928 00006148 E35B0013        CMP              r11, #19
 6929 0000614C 03A0B206        MOVEQ            r11, 0x60000000
 6930 00006150 0A000060        BEQ              Loop19_2
 6931 00006154         
 6932 00006154 E3A0F000        MOV              pc, #0      ;Program end
 6933 00006158                 LTORG
 6934 00006158         
 6935 00006158         Loop11_2                             ;resize (20 -> 11)
 6936 00006158 E28AA001        ADD              r10, #1
 6937 0000615C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6938 00006160 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 6939 00006164 E28CC028        ADD              r12, #40
 6940 00006168 E28BB028        ADD              r11, #40
 6941 0000616C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6942 00006170 E88C0001        STMEA            r12, {r0}   ;smaller
 6943 00006174 E28CC004        ADD              r12, #4
 6944 00006178 E28BB028        ADD              r11, #40
 6945 0000617C E35A000B        CMP              r10, #11
 6946 00006180 1AFFFFF4        BNE              Loop11_2
 6947 00006184 E3A0F000        MOV              pc, #0      ;Program end
 6948 00006188         
 6949 00006188         Loop12_2                             ;resize (20 -> 12)
 6950 00006188 E28AA001        ADD              r10, #1
 6951 0000618C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6952 00006190 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 6953 00006194 E28CC028        ADD              r12, #40
 6954 00006198 E28BB028        ADD              r11, #40
 6955 0000619C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6956 000061A0 E88C0003        STMEA            r12, {r0 - r1} ;smaller
 6957 000061A4 E28CC008        ADD              r12, #8
 6958 000061A8 E28BB028        ADD              r11, #40
 6959 000061AC E35A000C        CMP              r10, #12
 6960 000061B0 1AFFFFF4        BNE              Loop12_2
 6961 000061B4 E3A0F000        MOV              pc, #0      ;Program end
 6962 000061B8         
 6963 000061B8         Loop13_2                             ;resize (20 -> 13)
 6964 000061B8 E28AA001        ADD              r10, #1
 6965 000061BC E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6966 000061C0 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 6967 000061C4 E28CC028        ADD              r12, #40
 6968 000061C8 E28BB028        ADD              r11, #40
 6969 000061CC E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6970 000061D0 E88C0007        STMEA            r12, {r0 - r2} ;smaller
 6971 000061D4 E28CC00C        ADD              r12, #12
 6972 000061D8 E28BB028        ADD              r11, #40
 6973 000061DC E35A000D        CMP              r10, #13
 6974 000061E0 1AFFFFF4        BNE              Loop13_2
 6975 000061E4 E3A0F000        MOV              pc, #0      ;Program end
 6976 000061E8         
 6977 000061E8         Loop14_2                             ;resize (20 -> 14)
 6978 000061E8 E28AA001        ADD              r10, #1



ARM Macro Assembler    Page 132 


 6979 000061EC E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6980 000061F0 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 6981 000061F4 E28CC028        ADD              r12, #40
 6982 000061F8 E28BB028        ADD              r11, #40
 6983 000061FC E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6984 00006200 E88C000F        STMEA            r12, {r0 - r3} ;smaller
 6985 00006204 E28CC010        ADD              r12, #16
 6986 00006208 E28BB028        ADD              r11, #40
 6987 0000620C E35A000E        CMP              r10, #14
 6988 00006210 1AFFFFF4        BNE              Loop14_2
 6989 00006214 E3A0F000        MOV              pc, #0      ;Program end
 6990 00006218         
 6991 00006218         Loop15_2                             ;resize (20 -> 15)
 6992 00006218 E28AA001        ADD              r10, #1
 6993 0000621C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6994 00006220 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 6995 00006224 E28CC028        ADD              r12, #40
 6996 00006228 E28BB028        ADD              r11, #40
 6997 0000622C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 6998 00006230 E88C001F        STMEA            r12, {r0 - r4} ;smaller
 6999 00006234 E28CC014        ADD              r12, #20
 7000 00006238 E28BB028        ADD              r11, #40
 7001 0000623C E35A000F        CMP              r10, #15
 7002 00006240 1AFFFFF4        BNE              Loop15_2
 7003 00006244 E3A0F000        MOV              pc, #0      ;Program end
 7004 00006248         
 7005 00006248         Loop16_2                             ;resize (20 -> 16)
 7006 00006248 E28AA001        ADD              r10, #1
 7007 0000624C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 7008 00006250 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 7009 00006254 E28CC028        ADD              r12, #40
 7010 00006258 E28BB028        ADD              r11, #40
 7011 0000625C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 7012 00006260 E88C003F        STMEA            r12, {r0 - r5} ;smaller
 7013 00006264 E28CC018        ADD              r12, #24
 7014 00006268 E28BB028        ADD              r11, #40
 7015 0000626C E35A0010        CMP              r10, #16
 7016 00006270 1AFFFFF4        BNE              Loop16_2
 7017 00006274 E3A0F000        MOV              pc, #0      ;Program end
 7018 00006278         
 7019 00006278         Loop17_2                             ;resize (20 -> 17)
 7020 00006278 E28AA001        ADD              r10, #1
 7021 0000627C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 7022 00006280 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 7023 00006284 E28CC028        ADD              r12, #40
 7024 00006288 E28BB028        ADD              r11, #40
 7025 0000628C E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 7026 00006290 E88C007F        STMEA            r12, {r0 - r6} ;smaller
 7027 00006294 E28CC01C        ADD              r12, #28
 7028 00006298 E28BB028        ADD              r11, #40
 7029 0000629C E35A0011        CMP              r10, #17
 7030 000062A0 1AFFFFF4        BNE              Loop17_2
 7031 000062A4 E3A0F000        MOV              pc, #0      ;Program end
 7032 000062A8         
 7033 000062A8         Loop18_2                             ;resize (20 -> 18)
 7034 000062A8 E28AA001        ADD              r10, #1
 7035 000062AC E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 7036 000062B0 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 7037 000062B4 E28CC028        ADD              r12, #40



ARM Macro Assembler    Page 133 


 7038 000062B8 E28BB028        ADD              r11, #40
 7039 000062BC E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 7040 000062C0 E88C00FF        STMEA            r12, {r0 - r7} ;smaller
 7041 000062C4 E28CC020        ADD              r12, #32
 7042 000062C8 E28BB028        ADD              r11, #40
 7043 000062CC E35A0012        CMP              r10, #18
 7044 000062D0 1AFFFFF4        BNE              Loop18_2
 7045 000062D4 E3A0F000        MOV              pc, #0      ;Program end
 7046 000062D8         
 7047 000062D8         Loop19_2                             ;resize (20 -> 19)
 7048 000062D8 E28AA001        ADD              r10, #1
 7049 000062DC E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 7050 000062E0 E88C03FF        STMEA            r12, {r0 - r9} ;smaller
 7051 000062E4 E28CC028        ADD              r12, #40
 7052 000062E8 E28BB028        ADD              r11, #40
 7053 000062EC E89B03FF        LDMFD            r11, {r0 - r9} ;bigger
 7054 000062F0 E88C01FF        STMEA            r12, {r0 - r8} ;smaller
 7055 000062F4 E28CC024        ADD              r12, #36
 7056 000062F8 E28BB028        ADD              r11, #40
 7057 000062FC E35A0013        CMP              r10, #19
 7058 00006300 1AFFFFF4        BNE              Loop19_2
 7059 00006304 E3A0F000        MOV              pc, #0      ;Program end
 7060 00006308         
 7061 00006308         Eijk
 7062 00006308 E92D5FFF        STMFD            sp!, {r0-r12, lr}
 7063 0000630C         
 7064 0000630C E3A00000        MOV              r0, #0
 7065 00006310 E3A01000        MOV              r1, #0
 7066 00006314 E3A02000        MOV              r2, #0
 7067 00006318 E3A03000        MOV              r3, #0
 7068 0000631C E3A04000        MOV              r4, #0
 7069 00006320 E3A05000        MOV              r5, #0
 7070 00006324 E3A06000        MOV              r6, #0
 7071 00006328 E3A07000        MOV              r7, #0
 7072 0000632C E3A08000        MOV              r8, #0
 7073 00006330 E3A09000        MOV              r9, #0
 7074 00006334 E3A0A000        MOV              r10, #0
 7075 00006338 E3A0B000        MOV              r11, #0
 7076 0000633C E3A0C000        MOV              r12, #0
 7077 00006340         ;reset register
 7078 00006340         
 7079 00006340 E3A00205        MOV              r0, 0x50000000
 7080 00006344 E590C000        LDR              r12, [r0]   ;get size
 7081 00006348 E3A01207        MOV              r1, 0x70000000
 7082 0000634C E4912004        LDR              r2, [r1], #4 ;get i
 7083 00006350 E4913004        LDR              r3, [r1], #4 ;get j
 7084 00006354 E4114008        LDR              r4, [r1], #-8 ;get k
 7085 00006358         
 7086 00006358 E3A05203        MOV              r5, 0x30000000
 7087 0000635C E3A06206        MOV              r6, 0x60000000
 7088 00006360         
 7089 00006360 E3A07202        MOV              r7, 0x20000000
 7090 00006364 E3A08201        MOV              r8, 0x10000000
 7091 00006368         
 7092 00006368 E3E01003        MOV              r1, #-4
 7093 0000636C EAFFFFFF        B                Eijk2
 7094 00006370         
 7095 00006370         Eijk2                                ;Eijk loop
 7096 00006370 E2811004        ADD              r1, #4



ARM Macro Assembler    Page 134 


 7097 00006374         
 7098 00006374 E0859002        ADD              r9, r5, r2
 7099 00006378 E0899001        ADD              r9, r1
 7100 0000637C         ;r9 = address of ?th element of ith row of 1st matrix
 7101 0000637C E599A000        LDR              r10, [r9]   ;get s[i][?]   
 7102 00006380 E487A004        STR              r10, [r7], #4
 7103 00006384 E4074004        STR              r4, [r7], #-4
 7104 00006388 EB000114        BL               Multiplication
 7105 0000638C E598B000        LDR              r11, [r8]
 7106 00006390         ;get k x s[i][2]
 7107 00006390 E0859003        ADD              r9, r5, r3
 7108 00006394 E0899001        ADD              r9, r1
 7109 00006398         ;r9 = address of ?th element of jth row of 1st matrix
 7110 00006398 E599A000        LDR              r10, [r9]   ;get s[j][?]   
 7111 0000639C E487A004        STR              r10, [r7], #4
 7112 000063A0 E407B004        STR              r11, [r7], #-4
 7113 000063A4 EB000070        BL               Addition
 7114 000063A8 E598B000        LDR              r11, [r8]
 7115 000063AC         ;get k x s[i][?] + s[j][?]
 7116 000063AC E589B000        STR              r11, [r9]
 7117 000063B0         ;store k x s[i][?] + s[j][?] to s[j][?]
 7118 000063B0 E0869002        ADD              r9, r6, r2
 7119 000063B4 E0899001        ADD              r9, r1
 7120 000063B8         ;r9 = address of ?th element of ith row of 2nd matrix
 7121 000063B8 E599A000        LDR              r10, [r9]   ;get s[i][?]   
 7122 000063BC E487A004        STR              r10, [r7], #4
 7123 000063C0 E4074004        STR              r4, [r7], #-4
 7124 000063C4 EB000105        BL               Multiplication
 7125 000063C8 E598B000        LDR              r11, [r8]
 7126 000063CC         ;get k x s[i][?]
 7127 000063CC E0869003        ADD              r9, r6, r3
 7128 000063D0 E0899001        ADD              r9, r1
 7129 000063D4         ;r9 = address of ?th element of jth row of 2nd matrix
 7130 000063D4 E599A000        LDR              r10, [r9]   ;get s[j][?]   
 7131 000063D8 E487A004        STR              r10, [r7], #4
 7132 000063DC E407B004        STR              r11, [r7], #-4
 7133 000063E0 EB000061        BL               Addition
 7134 000063E4 E598B000        LDR              r11, [r8]
 7135 000063E8         ;get k x s[i][?] + s[j][?]
 7136 000063E8 E589B000        STR              r11, [r9]
 7137 000063EC         ;store k x s[i][?] + s[j][?] to s[j][?]
 7138 000063EC E1A01121        LSR              r1, #2
 7139 000063F0 E2811001        ADD              r1, #1
 7140 000063F4 E15C0001        CMP              r12, r1     ;if size is ?
 7141 000063F8 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc} ;calculation 
                                                            is done
 7142 000063FC 12411001        SUBNE            r1, #1
 7143 00006400 11A01101        LSLNE            r1, #2
 7144 00006404 1AFFFFD9        BNE              Eijk2
 7145 00006408         
 7146 00006408         Eik
 7147 00006408 E92D5FFF        STMFD            sp!, {r0-r12, lr}
 7148 0000640C         
 7149 0000640C E3A00000        MOV              r0, #0
 7150 00006410 E3A01000        MOV              r1, #0
 7151 00006414 E3A02000        MOV              r2, #0
 7152 00006418 E3A03000        MOV              r3, #0
 7153 0000641C E3A04000        MOV              r4, #0
 7154 00006420 E3A05000        MOV              r5, #0



ARM Macro Assembler    Page 135 


 7155 00006424 E3A06000        MOV              r6, #0
 7156 00006428 E3A07000        MOV              r7, #0
 7157 0000642C E3A08000        MOV              r8, #0
 7158 00006430 E3A09000        MOV              r9, #0
 7159 00006434 E3A0A000        MOV              r10, #0
 7160 00006438 E3A0B000        MOV              r11, #0
 7161 0000643C E3A0C000        MOV              r12, #0
 7162 00006440         ;reset register
 7163 00006440         
 7164 00006440 E3A00205        MOV              r0, 0x50000000
 7165 00006444 E590C000        LDR              r12, [r0]   ;get size
 7166 00006448 E3A01207        MOV              r1, 0x70000000
 7167 0000644C E4912004        LDR              r2, [r1], #4 ;get i
 7168 00006450 E4114004        LDR              r4, [r1], #-4 ;get k
 7169 00006454         
 7170 00006454 E3A05203        MOV              r5, 0x30000000
 7171 00006458 E3A06206        MOV              r6, 0x60000000
 7172 0000645C         
 7173 0000645C E3A07202        MOV              r7, 0x20000000
 7174 00006460 E3A08201        MOV              r8, 0x10000000
 7175 00006464         
 7176 00006464 E3E01003        MOV              r1, #-4
 7177 00006468 EA000000        B                Eik2
 7178 0000646C         
 7179 0000646C E8BD9FFF        LDMFD            sp!, {r0-r12, pc}
 7180 00006470         
 7181 00006470         Eik2                                 ;Eik loop
 7182 00006470 E2811004        ADD              r1, #4
 7183 00006474         
 7184 00006474 E0859002        ADD              r9, r5, r2
 7185 00006478 E0899001        ADD              r9, r1
 7186 0000647C         ;r9 = address of ?th element of ith row of 1st matrix
 7187 0000647C E599A000        LDR              r10, [r9]   ;get s[i][?]   
 7188 00006480 E487A004        STR              r10, [r7], #4
 7189 00006484 E4074004        STR              r4, [r7], #-4
 7190 00006488 EB0000D4        BL               Multiplication
 7191 0000648C E598B000        LDR              r11, [r8]
 7192 00006490         ;get k x s[i][?]
 7193 00006490 E589B000        STR              r11, [r9]
 7194 00006494         ;store k x s[i][?] to s[j][?]
 7195 00006494 E0869002        ADD              r9, r6, r2
 7196 00006498 E0899001        ADD              r9, r1
 7197 0000649C         ;r9 = address of ?th element of ith row of 2nd matrix
 7198 0000649C E599A000        LDR              r10, [r9]   ;get s[i][?]   
 7199 000064A0 E487A004        STR              r10, [r7], #4
 7200 000064A4 E4074004        STR              r4, [r7], #-4
 7201 000064A8 EB0000CC        BL               Multiplication
 7202 000064AC E598B000        LDR              r11, [r8]
 7203 000064B0         ;get k x s[i][?]
 7204 000064B0 E589B000        STR              r11, [r9]
 7205 000064B4         ;store k x s[i][?] to s[j][?]
 7206 000064B4 E1A01121        LSR              r1, #2
 7207 000064B8 E2811001        ADD              r1, #1
 7208 000064BC E15C0001        CMP              r12, r1     ;if size is ?
 7209 000064C0 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc} ;calculation 
                                                            is done
 7210 000064C4 12411001        SUBNE            r1, #1
 7211 000064C8 11A01101        LSLNE            r1, #2
 7212 000064CC 1AFFFFE7        BNE              Eik2



ARM Macro Assembler    Page 136 


 7213 000064D0         
 7214 000064D0         Eij
 7215 000064D0 E92D5FFF        STMFD            sp!, {r0-r12, lr}
 7216 000064D4         
 7217 000064D4 E3A01000        MOV              r1, #0
 7218 000064D8 E3A02000        MOV              r2, #0
 7219 000064DC E3A03000        MOV              r3, #0
 7220 000064E0 E3A04000        MOV              r4, #0
 7221 000064E4 E3A05000        MOV              r5, #0
 7222 000064E8 E3A06000        MOV              r6, #0
 7223 000064EC E3A07000        MOV              r7, #0
 7224 000064F0 E3A08000        MOV              r8, #0
 7225 000064F4 E3A09000        MOV              r9, #0
 7226 000064F8 E3A0A000        MOV              r10, #0
 7227 000064FC E3A0B000        MOV              r11, #0
 7228 00006500 E3A0C000        MOV              r12, #0     ;reset register
 7229 00006504         
 7230 00006504 E3A00205        MOV              r0, 0x50000000
 7231 00006508 E5906000        LDR              r6, [r0]    ;get size
 7232 0000650C E3A01207        MOV              r1, 0x70000000
 7233 00006510 E4917004        LDR              r7, [r1], #4 ;get i
 7234 00006514 E4118004        LDR              r8, [r1], #-4 ;get j
 7235 00006518 E2877203        ADD              r7, 0x30000000
 7236 0000651C E2888203        ADD              r8, 0x30000000
 7237 00006520 E4919004        LDR              r9, [r1], #4 ;get i
 7238 00006524 E411A004        LDR              r10, [r1], #-4 ;get j
 7239 00006528 E2899206        ADD              r9, 0x60000000
 7240 0000652C E28AA206        ADD              r10, 0x60000000
 7241 00006530 E3A00000        MOV              r0, #0
 7242 00006534 E3A01000        MOV              r1, #0
 7243 00006538 EAFFFFFF        B                Eij2
 7244 0000653C         
 7245 0000653C         Eij2                                 ;Eij loop
 7246 0000653C E2811001        ADD              r1, #1
 7247 00006540         
 7248 00006540 E597B000        LDR              r11, [r7]   ;get m1[i][?]
 7249 00006544 E598C000        LDR              r12, [r8]   ;get m1[j][?]
 7250 00006548 E488B004        STR              r11, [r8], #4
 7251 0000654C E487C004        STR              r12, [r7], #4 ;swap m1[][?]
 7252 00006550 E599B000        LDR              r11, [r9]   ;get m2[i][?]
 7253 00006554 E59AC000        LDR              r12, [r10]  ;get m2[j][?]
 7254 00006558 E48AB004        STR              r11, [r10], #4
 7255 0000655C E489C004        STR              r12, [r9], #4 ;swap m2[][?]
 7256 00006560 E1510006        CMP              r1, r6      ;when ? swap is don
                                                            e
 7257 00006564 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7258 00006568 1AFFFFF3        BNE              Eij2
 7259 0000656C         
 7260 0000656C         Addition
 7261 0000656C E92D5FFF        STMFD            sp!, {r0-r12, lr}
 7262 00006570 E3A00000        MOV              r0, #0
 7263 00006574 E3A01000        MOV              r1, #0
 7264 00006578 E3A02000        MOV              r2, #0
 7265 0000657C E3A03000        MOV              r3, #0
 7266 00006580 E3A04000        MOV              r4, #0
 7267 00006584 E3A05000        MOV              r5, #0
 7268 00006588 E3A06000        MOV              r6, #0
 7269 0000658C E3A07000        MOV              r7, #0
 7270 00006590 E3A08000        MOV              r8, #0



ARM Macro Assembler    Page 137 


 7271 00006594 E3A09000        MOV              r9, #0
 7272 00006598 E3A0A000        MOV              r10, #0
 7273 0000659C E3A0B000        MOV              r11, #0
 7274 000065A0 E3A0C000        MOV              r12, #0
 7275 000065A4         ;reset register
 7276 000065A4         
 7277 000065A4 E3A00201        MOV              r0, 0x10000000 ;r0 = address fo
                                                            r result
 7278 000065A8 E3A01202        MOV              r1, 0x20000000 ;r1 = address fo
                                                            r operands
 7279 000065AC E4912004        LDR              r2, [r1], #4 ;load 1st operand
 7280 000065B0 E4113004        LDR              r3, [r1], #-4 ;load 2nd operand
                                                            
 7281 000065B4         
 7282 000065B4 E3520000        CMP              r2, #0x00000000
 7283 000065B8 05803000        STREQ            r3, [r0]    ;when r2 = 0 so r2 
                                                            + r3 = r3
 7284 000065BC 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7285 000065C0 E3520102        CMP              r2, #0x80000000
 7286 000065C4 05803000        STREQ            r3, [r0]    ;when r2 = 0 so r2 
                                                            + r3 = r3
 7287 000065C8 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7288 000065CC E3530000        CMP              r3, #0x00000000
 7289 000065D0 05802000        STREQ            r2, [r0]    ;when r3 = 0 so r2 
                                                            + r3 = r2
 7290 000065D4 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7291 000065D8 E3530102        CMP              r3, #0x80000000
 7292 000065DC 05802000        STREQ            r2, [r0]    ;when r3 = 0 so r2 
                                                            + r3 = r2
 7293 000065E0 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7294 000065E4         
 7295 000065E4 E1A04002        MOV              r4, r2
 7296 000065E8 E1A04FA4        LSR              r4, #31
 7297 000065EC         ;r4 = sign part of first operand
 7298 000065EC         
 7299 000065EC E1A05003        MOV              r5, r3
 7300 000065F0 E1A05FA5        LSR              r5, #31
 7301 000065F4         ;r5 = sign part of second operand
 7302 000065F4         
 7303 000065F4 E1A06002        MOV              r6, r2
 7304 000065F8 E1A06086        LSL              r6, #1
 7305 000065FC E1A06C26        LSR              r6, #24
 7306 00006600         ;r6 = exponent part of first operand
 7307 00006600         
 7308 00006600 E1A07003        MOV              r7, r3
 7309 00006604 E1A07087        LSL              r7, #1
 7310 00006608 E1A07C27        LSR              r7, #24
 7311 0000660C         ;r7 = exponent part of second operand
 7312 0000660C         
 7313 0000660C E1A08002        MOV              r8, r2
 7314 00006610 E1A08488        LSL              r8, #9
 7315 00006614 E1A084A8        LSR              r8, #9
 7316 00006618 E2888502        ADD              r8, #0x00800000 ;insert '1' bit
                                                             to mantissa
 7317 0000661C         ;r8 = mantissa part of first operand
 7318 0000661C         
 7319 0000661C E1A09003        MOV              r9, r3
 7320 00006620 E1A09489        LSL              r9, #9
 7321 00006624 E1A094A9        LSR              r9, #9



ARM Macro Assembler    Page 138 


 7322 00006628 E2899502        ADD              r9, #0x00800000 ;insert '1' bit
                                                             to mantissa
 7323 0000662C         ;r9 = mantissa part of second operand
 7324 0000662C         
 7325 0000662C E0842005        ADD              r2, r4, r5
 7326 00006630 E3520000        CMP              r2, #0
 7327 00006634 03A02000        MOVEQ            r2, #0      ;postive + positive
                                                             = positive
 7328 00006638 E3520001        CMP              r2, #1
 7329 0000663C 0B0000EB        BLEQ             compare
 7330 00006640 E3520002        CMP              r2, #2
 7331 00006644 03A02001        MOVEQ            r2, #1      ;negative + negativ
                                                            e = negative
 7332 00006648         ;r2 = new sign
 7333 00006648         
 7334 00006648 E046A007        SUB              r10, r6, r7
 7335 0000664C         ;r10 = difference of two exponent part (positive)
 7336 0000664C         
 7337 0000664C E35A0000        CMP              r10, #0
 7338 00006650 C1A09A39        LSRGT            r9, r10
 7339 00006654 B26AA000        RSBLT            r10, r10, #0
 7340 00006658 B1A08A38        LSRLT            r8, r10
 7341 0000665C         ;shift mantissa whose exponent is smaller
 7342 0000665C         
 7343 0000665C E084C005        ADD              r12, r4, r5
 7344 00006660 E35C0000        CMP              r12, #0
 7345 00006664 0088B009        ADDEQ            r11, r8, r9 ;positive + positiv
                                                            e
 7346 00006668 E35C0001        CMP              r12, #1
 7347 0000666C 0B0000E9        BLEQ             absolute
 7348 00006670 E35C0002        CMP              r12, #2
 7349 00006674 0088B009        ADDEQ            r11, r8, r9 ;negative + negativ
                                                            e
 7350 00006678         ;r11 = sum of sub of two mantissa (new mantissa)
 7351 00006678         
 7352 00006678 E1560007        CMP              r6, r7
 7353 0000667C A1A01006        MOVGE            r1, r6
 7354 00006680 B1A01007        MOVLT            r1, r7
 7355 00006684         ;r1 = big value of two exponent (new exponent)
 7356 00006684         
 7357 00006684 EB0000E7        BL               normalize
 7358 00006688         ;normalize r11 and r1
 7359 00006688         
 7360 00006688 E1A0B48B        LSL              r11, #9
 7361 0000668C E1A0B4AB        LSR              r11, #9
 7362 00006690         ;first 1 of mantissa is discarded
 7363 00006690         
 7364 00006690 E1A03002        MOV              r3, r2
 7365 00006694 E1A03403        LSL              r3, #8
 7366 00006698 E0833001        ADD              r3, r1
 7367 0000669C E1A03B83        LSL              r3, #23
 7368 000066A0 E083300B        ADD              r3, r11
 7369 000066A4         
 7370 000066A4 E5803000        STR              r3, [r0]
 7371 000066A8         ;store result of addition
 7372 000066A8         
 7373 000066A8 E8BD9FFF        LDMFD            sp!, {r0-r12, pc}
 7374 000066AC         
 7375 000066AC         Subtraction                          ;r0 = address for r



ARM Macro Assembler    Page 139 


                                                            esult, r1 = address
                                                             for operands
 7376 000066AC E92D5FFF        STMFD            sp!, {r0-r12, lr}
 7377 000066B0 E3A00000        MOV              r0, #0
 7378 000066B4 E3A01000        MOV              r1, #0
 7379 000066B8 E3A02000        MOV              r2, #0
 7380 000066BC E3A03000        MOV              r3, #0
 7381 000066C0 E3A04000        MOV              r4, #0
 7382 000066C4 E3A05000        MOV              r5, #0
 7383 000066C8 E3A06000        MOV              r6, #0
 7384 000066CC E3A07000        MOV              r7, #0
 7385 000066D0 E3A08000        MOV              r8, #0
 7386 000066D4 E3A09000        MOV              r9, #0
 7387 000066D8 E3A0A000        MOV              r10, #0
 7388 000066DC E3A0B000        MOV              r11, #0
 7389 000066E0 E3A0C000        MOV              r12, #0
 7390 000066E4         ;reset register
 7391 000066E4         
 7392 000066E4 E3A00201        MOV              r0, 0x10000000 ;r0 = address fo
                                                            r result
 7393 000066E8 E3A01202        MOV              r1, 0x20000000 ;r1 = address fo
                                                            r operands
 7394 000066EC E4912004        LDR              r2, [r1], #4 ;load 1st operand
 7395 000066F0 E4113004        LDR              r3, [r1], #-4 ;load 2nd operand
                                                            
 7396 000066F4         
 7397 000066F4 E3530000        CMP              r3, #0x00000000
 7398 000066F8 05802000        STREQ            r2, [r0]    ;when r3 = 0 so r2 
                                                            - r3 = r2
 7399 000066FC 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7400 00006700 E3530102        CMP              r3, #0x80000000
 7401 00006704 05802000        STREQ            r2, [r0]    ;when r3 = 0 so r2 
                                                            - r3 = r2
 7402 00006708 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7403 0000670C         
 7404 0000670C E1A04002        MOV              r4, r2
 7405 00006710 E1A04FA4        LSR              r4, #31
 7406 00006714         ;r4 = sign part of first operand
 7407 00006714         
 7408 00006714 E1A05003        MOV              r5, r3
 7409 00006718 E1A05FA5        LSR              r5, #31
 7410 0000671C         ;r5 = sign part of second operand
 7411 0000671C E3550000        CMP              r5, #0
 7412 00006720 03A05001        MOVEQ            r5, #1      ;positive to negati
                                                            ve
 7413 00006724 13A05000        MOVNE            r5, #0      ;negative to positi
                                                            ve
 7414 00006728         
 7415 00006728 E1A06002        MOV              r6, r2
 7416 0000672C E1A06086        LSL              r6, #1
 7417 00006730 E1A06C26        LSR              r6, #24
 7418 00006734         ;r6 = exponent part of first operand
 7419 00006734         
 7420 00006734 E1A07003        MOV              r7, r3
 7421 00006738 E1A07087        LSL              r7, #1
 7422 0000673C E1A07C27        LSR              r7, #24
 7423 00006740         ;r7 = exponent part of second operand
 7424 00006740         
 7425 00006740 E1A08002        MOV              r8, r2



ARM Macro Assembler    Page 140 


 7426 00006744 E1A08488        LSL              r8, #9
 7427 00006748 E1A084A8        LSR              r8, #9
 7428 0000674C E2888502        ADD              r8, #0x00800000 ;insert '1' bit
                                                             to mantissa
 7429 00006750         ;r8 = mantissa part of first operand
 7430 00006750         
 7431 00006750 E1A09003        MOV              r9, r3
 7432 00006754 E1A09489        LSL              r9, #9
 7433 00006758 E1A094A9        LSR              r9, #9
 7434 0000675C E2899502        ADD              r9, #0x00800000 ;insert '1' bit
                                                             to mantissa
 7435 00006760         ;r9 = mantissa part of second operand
 7436 00006760         
 7437 00006760 E0842005        ADD              r2, r4, r5
 7438 00006764 E3520000        CMP              r2, #0
 7439 00006768 03A02000        MOVEQ            r2, #0      ;postive + positive
                                                             = positive
 7440 0000676C E3520001        CMP              r2, #1
 7441 00006770 0B00009E        BLEQ             compare
 7442 00006774 E3520002        CMP              r2, #2
 7443 00006778 03A02001        MOVEQ            r2, #1      ;negative + negativ
                                                            e = negative
 7444 0000677C         ;r2 = new sign
 7445 0000677C         
 7446 0000677C E046A007        SUB              r10, r6, r7
 7447 00006780         ;r10 = difference of two exponent part (positive)
 7448 00006780         
 7449 00006780 E35A0000        CMP              r10, #0
 7450 00006784 C1A09A39        LSRGT            r9, r10
 7451 00006788 B26AA000        RSBLT            r10, r10, #0
 7452 0000678C B1A08A38        LSRLT            r8, r10
 7453 00006790         ;shift mantissa whose exponent is smaller
 7454 00006790         
 7455 00006790 E084C005        ADD              r12, r4, r5
 7456 00006794 E35C0000        CMP              r12, #0
 7457 00006798 0088B009        ADDEQ            r11, r8, r9 ;positive + positiv
                                                            e
 7458 0000679C E35C0001        CMP              r12, #1
 7459 000067A0 0B00009C        BLEQ             absolute
 7460 000067A4 E35C0002        CMP              r12, #2
 7461 000067A8 0088B009        ADDEQ            r11, r8, r9 ;negative + negativ
                                                            e
 7462 000067AC         ;r11 = sum of sub of two mantissa (new mantissa)
 7463 000067AC         
 7464 000067AC E1560007        CMP              r6, r7
 7465 000067B0 A1A01006        MOVGE            r1, r6
 7466 000067B4 B1A01007        MOVLT            r1, r7
 7467 000067B8         ;r1 = big value of two exponent (new exponent)
 7468 000067B8         
 7469 000067B8 EB00009A        BL               normalize
 7470 000067BC         ;normalize r11 and r1
 7471 000067BC         
 7472 000067BC E1A0B48B        LSL              r11, #9
 7473 000067C0 E1A0B4AB        LSR              r11, #9
 7474 000067C4         ;first 1 of mantissa is discarded
 7475 000067C4         
 7476 000067C4 E1A03002        MOV              r3, r2
 7477 000067C8 E1A03403        LSL              r3, #8
 7478 000067CC E0833001        ADD              r3, r1



ARM Macro Assembler    Page 141 


 7479 000067D0 E1A03B83        LSL              r3, #23
 7480 000067D4 E083300B        ADD              r3, r11
 7481 000067D8         
 7482 000067D8 E5803000        STR              r3, [r0]
 7483 000067DC         ;store result of subtraction
 7484 000067DC         
 7485 000067DC E8BD9FFF        LDMFD            sp!, {r0-r12, pc}
 7486 000067E0         
 7487 000067E0         Multiplication                       ;r0 = address for r
                                                            esult, r1 = address
                                                             for operands
 7488 000067E0 E92D5FFF        STMFD            sp!, {r0-r12, lr}
 7489 000067E4 E3A00000        MOV              r0, #0
 7490 000067E8 E3A01000        MOV              r1, #0
 7491 000067EC E3A02000        MOV              r2, #0
 7492 000067F0 E3A03000        MOV              r3, #0
 7493 000067F4 E3A04000        MOV              r4, #0
 7494 000067F8 E3A05000        MOV              r5, #0
 7495 000067FC E3A06000        MOV              r6, #0
 7496 00006800 E3A07000        MOV              r7, #0
 7497 00006804 E3A08000        MOV              r8, #0
 7498 00006808 E3A09000        MOV              r9, #0
 7499 0000680C E3A0A000        MOV              r10, #0
 7500 00006810 E3A0B000        MOV              r11, #0
 7501 00006814 E3A0C000        MOV              r12, #0
 7502 00006818         ;reset register
 7503 00006818         
 7504 00006818 E3A00201        MOV              r0, 0x10000000 ;r0 = address fo
                                                            r result
 7505 0000681C E3A01202        MOV              r1, 0x20000000 ;r1 = address fo
                                                            r operands
 7506 00006820 E4912004        LDR              r2, [r1], #4 ;load 1st operand
 7507 00006824 E4113004        LDR              r3, [r1], #-4 ;load 2nd operand
                                                            
 7508 00006828         
 7509 00006828 E3520000        CMP              r2, #0x00000000
 7510 0000682C 05802000        STREQ            r2, [r0]    ;when r2 = 0 so r2 
                                                            * r3 = 0
 7511 00006830 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7512 00006834 E3520102        CMP              r2, #0x80000000
 7513 00006838 05802000        STREQ            r2, [r0]    ;when r2 = 0 so r2 
                                                            * r3 = 0
 7514 0000683C 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7515 00006840 E3530000        CMP              r3, #0x00000000
 7516 00006844 05803000        STREQ            r3, [r0]    ;when r3 = 0 so r2 
                                                            * r3 = 0
 7517 00006848 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7518 0000684C E3530102        CMP              r3, #0x80000000
 7519 00006850 05803000        STREQ            r3, [r0]    ;when r3 = 0 so r2 
                                                            * r3 = 0
 7520 00006854 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7521 00006858         
 7522 00006858 E1A04002        MOV              r4, r2
 7523 0000685C E1A04FA4        LSR              r4, #31
 7524 00006860         ;r4 = sign part of first operand
 7525 00006860         
 7526 00006860 E1A05003        MOV              r5, r3
 7527 00006864 E1A05FA5        LSR              r5, #31
 7528 00006868         ;r5 = sign part of second operand



ARM Macro Assembler    Page 142 


 7529 00006868         
 7530 00006868 E1A06002        MOV              r6, r2
 7531 0000686C E1A06086        LSL              r6, #1
 7532 00006870 E1A06C26        LSR              r6, #24
 7533 00006874         ;r6 = exponent part of first operand
 7534 00006874         
 7535 00006874 E1A07003        MOV              r7, r3
 7536 00006878 E1A07087        LSL              r7, #1
 7537 0000687C E1A07C27        LSR              r7, #24
 7538 00006880         ;r7 = exponent part of second operand
 7539 00006880         
 7540 00006880 E1A08002        MOV              r8, r2
 7541 00006884 E1A08488        LSL              r8, #9
 7542 00006888 E1A084A8        LSR              r8, #9
 7543 0000688C E2888502        ADD              r8, #0x00800000 ;insert '1' bit
                                                             to mantissa
 7544 00006890         ;r8 = mantissa part of first operand
 7545 00006890         
 7546 00006890 E1A09003        MOV              r9, r3
 7547 00006894 E1A09489        LSL              r9, #9
 7548 00006898 E1A094A9        LSR              r9, #9
 7549 0000689C E2899502        ADD              r9, #0x00800000 ;insert '1' bit
                                                             to mantissa
 7550 000068A0         ;r9 = mantissa part of second operand
 7551 000068A0         
 7552 000068A0 E0842005        ADD              r2, r4, r5
 7553 000068A4 E3520000        CMP              r2, #0
 7554 000068A8 03A02000        MOVEQ            r2, #0      ;postive * positive
                                                             = positive
 7555 000068AC E3520001        CMP              r2, #1
 7556 000068B0 03A02001        MOVEQ            r2, #1      ;postive * negative
                                                             = negative
 7557 000068B4 E3520002        CMP              r2, #2
 7558 000068B8 03A02000        MOVEQ            r2, #0      ;negative * negativ
                                                            e = positive
 7559 000068BC         ;r2 = new sign
 7560 000068BC         
 7561 000068BC E0861007        ADD              r1, r6, r7
 7562 000068C0 E241107F        SUB              r1, #127
 7563 000068C4         ;r1 = new exponent
 7564 000068C4         
 7565 000068C4 E046A007        SUB              r10, r6, r7
 7566 000068C8         ;r10 = difference of two exponent part (positive)
 7567 000068C8         
 7568 000068C8 EB000062        BL               booth
 7569 000068CC         ;r11 = mul of two mantissa (new mantissa)
 7570 000068CC         
 7571 000068CC EB000055        BL               normalize
 7572 000068D0         ;normalize r11 and r1
 7573 000068D0         
 7574 000068D0 E1A0B48B        LSL              r11, #9
 7575 000068D4 E1A0B4AB        LSR              r11, #9
 7576 000068D8         ;first 1 of mantissa is discarded
 7577 000068D8         
 7578 000068D8 E1A03002        MOV              r3, r2
 7579 000068DC E1A03403        LSL              r3, #8
 7580 000068E0 E0833001        ADD              r3, r1
 7581 000068E4 E1A03B83        LSL              r3, #23
 7582 000068E8 E083300B        ADD              r3, r11



ARM Macro Assembler    Page 143 


 7583 000068EC         
 7584 000068EC E5803000        STR              r3, [r0]
 7585 000068F0         ;store result of multiplication
 7586 000068F0         
 7587 000068F0 E8BD9FFF        LDMFD            sp!, {r0-r12, pc}
 7588 000068F4         
 7589 000068F4         Division                             ;r0 = address for r
                                                            esult, r1 = address
                                                             for operands
 7590 000068F4 E92D5FFF        STMFD            sp!, {r0-r12, lr}
 7591 000068F8 E3A00000        MOV              r0, #0
 7592 000068FC E3A01000        MOV              r1, #0
 7593 00006900 E3A02000        MOV              r2, #0
 7594 00006904 E3A03000        MOV              r3, #0
 7595 00006908 E3A04000        MOV              r4, #0
 7596 0000690C E3A05000        MOV              r5, #0
 7597 00006910 E3A06000        MOV              r6, #0
 7598 00006914 E3A07000        MOV              r7, #0
 7599 00006918 E3A08000        MOV              r8, #0
 7600 0000691C E3A09000        MOV              r9, #0
 7601 00006920 E3A0A000        MOV              r10, #0
 7602 00006924 E3A0B000        MOV              r11, #0
 7603 00006928 E3A0C000        MOV              r12, #0
 7604 0000692C         ;reset register
 7605 0000692C         
 7606 0000692C E3A00201        MOV              r0, 0x10000000 ;r0 = address fo
                                                            r result
 7607 00006930 E3A01202        MOV              r1, 0x20000000 ;r1 = address fo
                                                            r operands
 7608 00006934 E4912004        LDR              r2, [r1], #4 ;load 1st operand
 7609 00006938 E4113004        LDR              r3, [r1], #-4 ;load 2nd operand
                                                            
 7610 0000693C         
 7611 0000693C E3520000        CMP              r2, #0x00000000
 7612 00006940 05802000        STREQ            r2, [r0]    ;when r2 = 0 so r2 
                                                            / r3 = 0
 7613 00006944 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7614 00006948 E3520102        CMP              r2, #0x80000000
 7615 0000694C 05802000        STREQ            r2, [r0]    ;when r2 = 0 so r2 
                                                            / r3 = 0
 7616 00006950 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7617 00006954         
 7618 00006954 E1A04002        MOV              r4, r2
 7619 00006958 E1A04FA4        LSR              r4, #31
 7620 0000695C         ;r4 = sign part of first operand
 7621 0000695C         
 7622 0000695C E1A05003        MOV              r5, r3
 7623 00006960 E1A05FA5        LSR              r5, #31
 7624 00006964         ;r5 = sign part of second operand
 7625 00006964         
 7626 00006964 E1A06002        MOV              r6, r2
 7627 00006968 E1A06086        LSL              r6, #1
 7628 0000696C E1A06C26        LSR              r6, #24
 7629 00006970         ;r6 = exponent part of first operand
 7630 00006970         
 7631 00006970 E1A07003        MOV              r7, r3
 7632 00006974 E1A07087        LSL              r7, #1
 7633 00006978 E1A07C27        LSR              r7, #24
 7634 0000697C         ;r7 = exponent part of second operand



ARM Macro Assembler    Page 144 


 7635 0000697C         
 7636 0000697C E1A08002        MOV              r8, r2
 7637 00006980 E1A08488        LSL              r8, #9
 7638 00006984 E1A084A8        LSR              r8, #9
 7639 00006988 E2888502        ADD              r8, #0x00800000 ;insert '1' bit
                                                             to mantissa
 7640 0000698C         ;r8 = mantissa part of first operand
 7641 0000698C         
 7642 0000698C E1A09003        MOV              r9, r3
 7643 00006990 E1A09489        LSL              r9, #9
 7644 00006994 E1A094A9        LSR              r9, #9
 7645 00006998 E2899502        ADD              r9, #0x00800000 ;insert '1' bit
                                                             to mantissa
 7646 0000699C         ;r9 = mantissa part of second operand
 7647 0000699C         
 7648 0000699C E0842005        ADD              r2, r4, r5
 7649 000069A0 E3520000        CMP              r2, #0
 7650 000069A4 03A02000        MOVEQ            r2, #0      ;postive / positive
                                                             = positive
 7651 000069A8 E3520001        CMP              r2, #1
 7652 000069AC 03A02001        MOVEQ            r2, #1      ;postive / negative
                                                             = negative
 7653 000069B0 E3520002        CMP              r2, #2
 7654 000069B4 03A02000        MOVEQ            r2, #0      ;negative / negativ
                                                            e = positive
 7655 000069B8         ;r2 = new sign
 7656 000069B8         
 7657 000069B8 E0461007        SUB              r1, r6, r7
 7658 000069BC E281107F        ADD              r1, #127
 7659 000069C0         ;r1 = new exponent
 7660 000069C0         
 7661 000069C0 E046A007        SUB              r10, r6, r7
 7662 000069C4         ;r10 = difference of two exponent part (positive)
 7663 000069C4         
 7664 000069C4 EB000072        BL               binary
 7665 000069C8         ;r11 = div of two mantissa (new mantissa)
 7666 000069C8         
 7667 000069C8 EB000016        BL               normalize
 7668 000069CC         ;normalize r11 and r1
 7669 000069CC         
 7670 000069CC E1A0B48B        LSL              r11, #9
 7671 000069D0 E1A0B4AB        LSR              r11, #9
 7672 000069D4         ;first 1 of mantissa is discarded
 7673 000069D4         
 7674 000069D4 E1A03002        MOV              r3, r2
 7675 000069D8 E1A03403        LSL              r3, #8
 7676 000069DC E0833001        ADD              r3, r1
 7677 000069E0 E1A03B83        LSL              r3, #23
 7678 000069E4 E083300B        ADD              r3, r11
 7679 000069E8         
 7680 000069E8 E5803000        STR              r3, [r0]
 7681 000069EC         ;store result of multiplication
 7682 000069EC         
 7683 000069EC E8BD9FFF        LDMFD            sp!, {r0-r12, pc}
 7684 000069F0         
 7685 000069F0         compare                              ;for additon and su
                                                            btraction
 7686 000069F0 E1560007        CMP              r6, r7
 7687 000069F4 C1A02004        MOVGT            r2, r4



ARM Macro Assembler    Page 145 


 7688 000069F8 B1A02005        MOVLT            r2, r5      ;new sign bit = sig
                                                            n bit which has big
                                                            ger exponent 
 7689 000069FC 01580009        CMPEQ            r8, r9
 7690 00006A00 C1A02004        MOVGT            r2, r4
 7691 00006A04 B1A02005        MOVLT            r2, r5      ;new sign bit = sig
                                                            n bit which has big
                                                            ger mantissa (expon
                                                            ent is same)
 7692 00006A08 03A02000        MOVEQ            r2, #0      ;a + (-a) = 0
 7693 00006A0C 05802000        STREQ            r2, [r0]    ;store 0 (only exec
                                                            eption)
 7694 00006A10 08BD9FFF        LDMFDEQ          sp!, {r0-r12, pc}
 7695 00006A14 E1A0F00E        MOV              pc, lr
 7696 00006A18         
 7697 00006A18         absolute                             ;for additon and su
                                                            btraction
 7698 00006A18 E1580009        CMP              r8, r9
 7699 00006A1C A048B009        SUBGE            r11, r8, r9
 7700 00006A20 B049B008        SUBLT            r11, r9, r8 ;|positive + negati
                                                            ve| 
 7701 00006A24 E1A0F00E        MOV              pc, lr
 7702 00006A28         
 7703 00006A28         normalize                            ;for additon, subtr
                                                            action, multiplicat
                                                            ion and division
 7704 00006A28 E1A0C00B        MOV              r12, r11
 7705 00006A2C E35C0000        CMP              r12, #0x00000000
 7706 00006A30 01A0F00E        MOVEQ            pc, lr
 7707 00006A34         
 7708 00006A34 E35C0401        CMP              r12, #0x01000000
 7709 00006A38 A1A0B0AB        LSRGE            r11, #1
 7710 00006A3C A2811001        ADDGE            r1, #1
 7711 00006A40 AAFFFFF8        BGE              normalize
 7712 00006A44         
 7713 00006A44 E35C0502        CMP              r12, #0x00800000
 7714 00006A48 B1A0B08B        LSLLT            r11, #1
 7715 00006A4C B2411001        SUBLT            r1, #1
 7716 00006A50 BAFFFFF4        BLT              normalize
 7717 00006A54 A1A0F00E        MOVGE            pc, lr
 7718 00006A58         ;LSR mantissa and ADD exponenet until normalized
 7719 00006A58         ;or LSL mantissa and SUB exponenet until normalized 
 7720 00006A58         
 7721 00006A58         booth                                ;for multiplication
                                                            . needs r8(first ma
                                                            ntissa), r9(second 
                                                            mantissa), r11(resu
                                                            lt mantisaa)
 7722 00006A58 E1A08388        LSL              r8, #7      ;24bit to 31bit (ha
                                                            s 1st bit to 31th b
                                                            it)
 7723 00006A5C E1A09389        LSL              r9, #7      ;24bit to 31bit (ha
                                                            s 1st bit to 31th b
                                                            it)
 7724 00006A60         
 7725 00006A60 E3590101        CMP              r9, #0x40000000 ;find 32th bit
 7726 00006A64 A08BB008        ADDGE            r11, r8
 7727 00006A68 A2499101        SUBGE            r9, #0x40000000
 7728 00006A6C         



ARM Macro Assembler    Page 146 


 7729 00006A6C E3590202        CMP              r9, #0x20000000 ;find 31th bit
 7730 00006A70 A08BB0A8        ADDGE            r11, r8, LSR #1
 7731 00006A74 A2499202        SUBGE            r9, #0x20000000
 7732 00006A78         
 7733 00006A78 E3590201        CMP              r9, #0x10000000 ;find 30th bit
 7734 00006A7C A08BB128        ADDGE            r11, r8, LSR #2
 7735 00006A80 A2499201        SUBGE            r9, #0x10000000
 7736 00006A84         
 7737 00006A84 E3590302        CMP              r9, #0x08000000 ;find 29th bit
 7738 00006A88 A08BB1A8        ADDGE            r11, r8, LSR #3
 7739 00006A8C A2499302        SUBGE            r9, #0x08000000
 7740 00006A90         
 7741 00006A90 E3590301        CMP              r9, #0x04000000 ;find 28th bit
 7742 00006A94 A08BB228        ADDGE            r11, r8, LSR #4
 7743 00006A98 A2499301        SUBGE            r9, #0x04000000
 7744 00006A9C         
 7745 00006A9C E3590402        CMP              r9, #0x02000000 ;find 27th bit
 7746 00006AA0 A08BB2A8        ADDGE            r11, r8, LSR #5
 7747 00006AA4 A2499402        SUBGE            r9, #0x02000000
 7748 00006AA8         
 7749 00006AA8 E3590401        CMP              r9, #0x01000000 ;find 26th bit
 7750 00006AAC A08BB328        ADDGE            r11, r8, LSR #6
 7751 00006AB0 A2499401        SUBGE            r9, #0x01000000
 7752 00006AB4         
 7753 00006AB4 E3590502        CMP              r9, #0x00800000 ;find 25th bit
 7754 00006AB8 A08BB3A8        ADDGE            r11, r8, LSR #7
 7755 00006ABC A2499502        SUBGE            r9, #0x00800000
 7756 00006AC0         
 7757 00006AC0 E3590501        CMP              r9, #0x00400000 ;find 24th bit
 7758 00006AC4 A08BB428        ADDGE            r11, r8, LSR #8
 7759 00006AC8 A2499501        SUBGE            r9, #0x00400000
 7760 00006ACC         
 7761 00006ACC E3590602        CMP              r9, #0x00200000 ;find 23th bit
 7762 00006AD0 A08BB4A8        ADDGE            r11, r8, LSR #9
 7763 00006AD4 A2499602        SUBGE            r9, #0x00200000
 7764 00006AD8         
 7765 00006AD8 E3590601        CMP              r9, #0x00100000 ;find 22th bit
 7766 00006ADC A08BB528        ADDGE            r11, r8, LSR #10
 7767 00006AE0 A2499601        SUBGE            r9, #0x00100000
 7768 00006AE4         
 7769 00006AE4 E3590702        CMP              r9, #0x00080000 ;find 21th bit
 7770 00006AE8 A08BB5A8        ADDGE            r11, r8, LSR #11
 7771 00006AEC A2499702        SUBGE            r9, #0x00080000
 7772 00006AF0         
 7773 00006AF0 E3590701        CMP              r9, #0x00040000 ;find 20th bit
 7774 00006AF4 A08BB628        ADDGE            r11, r8, LSR #12
 7775 00006AF8 A2499701        SUBGE            r9, #0x00040000
 7776 00006AFC         
 7777 00006AFC E3590802        CMP              r9, #0x00020000 ;find 19th bit
 7778 00006B00 A08BB6A8        ADDGE            r11, r8, LSR #13
 7779 00006B04 A2499802        SUBGE            r9, #0x00020000
 7780 00006B08         
 7781 00006B08 E3590801        CMP              r9, #0x00010000 ;find 18th bit
 7782 00006B0C A08BB728        ADDGE            r11, r8, LSR #14
 7783 00006B10 A2499801        SUBGE            r9, #0x00010000
 7784 00006B14         
 7785 00006B14 E3590902        CMP              r9, #0x00008000 ;find 17th bit
 7786 00006B18 A08BB7A8        ADDGE            r11, r8, LSR #15
 7787 00006B1C A2499902        SUBGE            r9, #0x00008000



ARM Macro Assembler    Page 147 


 7788 00006B20         
 7789 00006B20 E3590901        CMP              r9, #0x00004000 ;find 16th bit
 7790 00006B24 A08BB828        ADDGE            r11, r8, LSR #16
 7791 00006B28 A2499901        SUBGE            r9, #0x00004000
 7792 00006B2C         
 7793 00006B2C E3590A02        CMP              r9, #0x00002000 ;find 15th bit
 7794 00006B30 A08BB8A8        ADDGE            r11, r8, LSR #17
 7795 00006B34 A2499A02        SUBGE            r9, #0x00002000
 7796 00006B38         
 7797 00006B38 E3590A01        CMP              r9, #0x00001000 ;find 14th bit
 7798 00006B3C A08BB928        ADDGE            r11, r8, LSR #18
 7799 00006B40 A2499A01        SUBGE            r9, #0x00001000
 7800 00006B44         
 7801 00006B44 E3590B02        CMP              r9, #0x00000800 ;find 13th bit
 7802 00006B48 A08BB9A8        ADDGE            r11, r8, LSR #19
 7803 00006B4C A2499B02        SUBGE            r9, #0x00000800
 7804 00006B50         
 7805 00006B50 E3590B01        CMP              r9, #0x00000400 ;find 12th bit
 7806 00006B54 A08BBA28        ADDGE            r11, r8, LSR #20
 7807 00006B58 A2499B01        SUBGE            r9, #0x00000400
 7808 00006B5C         
 7809 00006B5C E3590C02        CMP              r9, #0x00000200 ;find 11th bit
 7810 00006B60 A08BBAA8        ADDGE            r11, r8, LSR #21
 7811 00006B64 A2499C02        SUBGE            r9, #0x00000200
 7812 00006B68         
 7813 00006B68 E3590C01        CMP              r9, #0x00000100 ;find 10th bit
 7814 00006B6C A08BBB28        ADDGE            r11, r8, LSR #22
 7815 00006B70 A2499C01        SUBGE            r9, #0x00000100
 7816 00006B74         
 7817 00006B74 E3590080        CMP              r9, #0x00000080 ;find 9th bit
 7818 00006B78 A08BBBA8        ADDGE            r11, r8, LSR #23
 7819 00006B7C A2499080        SUBGE            r9, #0x00000080
 7820 00006B80         
 7821 00006B80 E3590040        CMP              r9, #0x00000040 ;find 8th bit
 7822 00006B84 A08BBC28        ADDGE            r11, r8, LSR #24
 7823 00006B88 A2499040        SUBGE            r9, #0x00000040
 7824 00006B8C         
 7825 00006B8C E1A0B3AB        LSR              r11, #7     ;32bit to 25bit 
 7826 00006B90         
 7827 00006B90 E1A0F00E        MOV              pc, lr
 7828 00006B94         
 7829 00006B94         binary                               ;for division. need
                                                            s r8(first mantissa
                                                            ), r9(second mantis
                                                            sa), r11(result man
                                                            tisaa)
 7830 00006B94 E1A08388        LSL              r8, #7      ;24bit to 31bit (ha
                                                            s 1st bit to 31th b
                                                            it)
 7831 00006B98 E1A09389        LSL              r9, #7      ;24bit to 31bit (ha
                                                            s 1st bit to 31th b
                                                            it)
 7832 00006B9C         
 7833 00006B9C E1580009        CMP              r8, r9
 7834 00006BA0 A28BB102        ADDGE            r11, #0x80000000 ; + 0x80000000
                                                             (find 32th bit)
 7835 00006BA4 A0488009        SUBGE            r8, r9
 7836 00006BA8 E1A090A9        LSR              r9, #1
 7837 00006BAC         



ARM Macro Assembler    Page 148 


 7838 00006BAC E1580009        CMP              r8, r9
 7839 00006BB0 A28BB101        ADDGE            r11, #0x40000000 ; + 0x40000000
                                                             (find 31th bit)
 7840 00006BB4 A0488009        SUBGE            r8, r9
 7841 00006BB8 E1A090A9        LSR              r9, #1
 7842 00006BBC         
 7843 00006BBC E1580009        CMP              r8, r9
 7844 00006BC0 A28BB202        ADDGE            r11, #0x20000000 ; + 0x20000000
                                                             (find 30th bit)
 7845 00006BC4 A0488009        SUBGE            r8, r9
 7846 00006BC8 E1A090A9        LSR              r9, #1
 7847 00006BCC         
 7848 00006BCC E1580009        CMP              r8, r9
 7849 00006BD0 A28BB201        ADDGE            r11, #0x10000000 ; + 0x10000000
                                                             (find 29th bit)
 7850 00006BD4 A0488009        SUBGE            r8, r9
 7851 00006BD8 E1A090A9        LSR              r9, #1
 7852 00006BDC         
 7853 00006BDC E1580009        CMP              r8, r9
 7854 00006BE0 A28BB302        ADDGE            r11, #0x08000000 ; + 0x08000000
                                                             (find 28th bit)
 7855 00006BE4 A0488009        SUBGE            r8, r9
 7856 00006BE8 E1A090A9        LSR              r9, #1
 7857 00006BEC         
 7858 00006BEC E1580009        CMP              r8, r9
 7859 00006BF0 A28BB301        ADDGE            r11, #0x04000000 ; + 0x04000000
                                                             (find 27th bit)
 7860 00006BF4 A0488009        SUBGE            r8, r9
 7861 00006BF8 E1A090A9        LSR              r9, #1
 7862 00006BFC         
 7863 00006BFC E1580009        CMP              r8, r9
 7864 00006C00 A28BB402        ADDGE            r11, #0x02000000 ; + 0x02000000
                                                             (find 26th bit)
 7865 00006C04 A0488009        SUBGE            r8, r9
 7866 00006C08 E1A090A9        LSR              r9, #1
 7867 00006C0C         
 7868 00006C0C E1580009        CMP              r8, r9
 7869 00006C10 A28BB401        ADDGE            r11, #0x01000000 ; + 0x01000000
                                                             (find 25th bit)
 7870 00006C14 A0488009        SUBGE            r8, r9
 7871 00006C18 E1A090A9        LSR              r9, #1
 7872 00006C1C         
 7873 00006C1C E1580009        CMP              r8, r9
 7874 00006C20 A28BB502        ADDGE            r11, #0x00800000 ; + 0x00800000
                                                             (find 24th bit)
 7875 00006C24 A0488009        SUBGE            r8, r9
 7876 00006C28 E1A090A9        LSR              r9, #1
 7877 00006C2C         
 7878 00006C2C E1580009        CMP              r8, r9
 7879 00006C30 A28BB501        ADDGE            r11, #0x00400000 ; + 0x00400000
                                                             (find 23th bit)
 7880 00006C34 A0488009        SUBGE            r8, r9
 7881 00006C38 E1A090A9        LSR              r9, #1
 7882 00006C3C         
 7883 00006C3C E1580009        CMP              r8, r9
 7884 00006C40 A28BB602        ADDGE            r11, #0x00200000 ; + 0x00200000
                                                             (find 22th bit)
 7885 00006C44 A0488009        SUBGE            r8, r9
 7886 00006C48 E1A090A9        LSR              r9, #1



ARM Macro Assembler    Page 149 


 7887 00006C4C         
 7888 00006C4C E1580009        CMP              r8, r9
 7889 00006C50 A28BB601        ADDGE            r11, #0x00100000 ; + 0x00100000
                                                             (find 21th bit)
 7890 00006C54 A0488009        SUBGE            r8, r9
 7891 00006C58 E1A090A9        LSR              r9, #1
 7892 00006C5C         
 7893 00006C5C E1580009        CMP              r8, r9
 7894 00006C60 A28BB702        ADDGE            r11, #0x00080000 ; + 0x00080000
                                                             (find 20th bit)
 7895 00006C64 A0488009        SUBGE            r8, r9
 7896 00006C68 E1A090A9        LSR              r9, #1
 7897 00006C6C         
 7898 00006C6C E1580009        CMP              r8, r9
 7899 00006C70 A28BB701        ADDGE            r11, #0x00040000 ; + 0x00040000
                                                             (find 19th bit)
 7900 00006C74 A0488009        SUBGE            r8, r9
 7901 00006C78 E1A090A9        LSR              r9, #1
 7902 00006C7C         
 7903 00006C7C E1580009        CMP              r8, r9
 7904 00006C80 A28BB802        ADDGE            r11, #0x00020000 ; + 0x00020000
                                                             (find 18th bit)
 7905 00006C84 A0488009        SUBGE            r8, r9
 7906 00006C88 E1A090A9        LSR              r9, #1
 7907 00006C8C         
 7908 00006C8C E1580009        CMP              r8, r9
 7909 00006C90 A28BB801        ADDGE            r11, #0x00010000 ; + 0x00010000
                                                             (find 17th bit)
 7910 00006C94 A0488009        SUBGE            r8, r9
 7911 00006C98 E1A090A9        LSR              r9, #1
 7912 00006C9C         
 7913 00006C9C E1580009        CMP              r8, r9
 7914 00006CA0 A28BB902        ADDGE            r11, #0x00008000 ; + 0x00008000
                                                             (find 16th bit)
 7915 00006CA4 A0488009        SUBGE            r8, r9
 7916 00006CA8 E1A090A9        LSR              r9, #1
 7917 00006CAC         
 7918 00006CAC E1580009        CMP              r8, r9
 7919 00006CB0 A28BB901        ADDGE            r11, #0x00004000 ; + 0x00004000
                                                             (find 15th bit)
 7920 00006CB4 A0488009        SUBGE            r8, r9
 7921 00006CB8 E1A090A9        LSR              r9, #1
 7922 00006CBC         
 7923 00006CBC E1580009        CMP              r8, r9
 7924 00006CC0 A28BBA02        ADDGE            r11, #0x00002000 ; + 0x00002000
                                                             (find 14th bit)
 7925 00006CC4 A0488009        SUBGE            r8, r9
 7926 00006CC8 E1A090A9        LSR              r9, #1
 7927 00006CCC         
 7928 00006CCC E1580009        CMP              r8, r9
 7929 00006CD0 A28BBA01        ADDGE            r11, #0x00001000 ; + 0x00001000
                                                             (find 13th bit)
 7930 00006CD4 A0488009        SUBGE            r8, r9
 7931 00006CD8 E1A090A9        LSR              r9, #1
 7932 00006CDC         
 7933 00006CDC E1580009        CMP              r8, r9
 7934 00006CE0 A28BBB02        ADDGE            r11, #0x00000800 ; + 0x00000800
                                                             (find 12th bit)
 7935 00006CE4 A0488009        SUBGE            r8, r9



ARM Macro Assembler    Page 150 


 7936 00006CE8 E1A090A9        LSR              r9, #1
 7937 00006CEC         
 7938 00006CEC E1580009        CMP              r8, r9
 7939 00006CF0 A28BBB01        ADDGE            r11, #0x00000400 ; + 0x00000400
                                                             (find 11th bit)
 7940 00006CF4 A0488009        SUBGE            r8, r9
 7941 00006CF8 E1A090A9        LSR              r9, #1
 7942 00006CFC         
 7943 00006CFC E1580009        CMP              r8, r9
 7944 00006D00 A28BBC02        ADDGE            r11, #0x00000200 ; + 0x00000200
                                                             (find 10th bit)
 7945 00006D04 A0488009        SUBGE            r8, r9
 7946 00006D08 E1A090A9        LSR              r9, #1
 7947 00006D0C         
 7948 00006D0C E1580009        CMP              r8, r9
 7949 00006D10 A28BBC01        ADDGE            r11, #0x00000100 ; + 0x00000100
                                                             (find 9th bit)
 7950 00006D14 A0488009        SUBGE            r8, r9
 7951 00006D18 E1A090A9        LSR              r9, #1
 7952 00006D1C         
 7953 00006D1C E1A0B42B        LSR              r11, #8     ;32bit to 24bit 
 7954 00006D20         
 7955 00006D20 E1A0F00E        MOV              pc, lr
 7956 00006D24         
 7957 00006D24         ;Result & 0x10000000 ;adrress for operation result 
 7958 00006D24         
 7959 00006D24         ;Operand & 0x20000000 ;address for 2 operands
 7960 00006D24         
 7961 00006D24         ;Matrix_1 & 0x30000000 ;address for 1st matrix (matrix -
                       > identity matrix)
 7962 00006D24         
 7963 00006D24         ;Matrix_2 & 0x60000000 ;address for 2nd matrix (identity
                        matrix -> inverse matrix) (same as result data)
 7964 00006D24         
 7965 00006D24         ;Size & 0x50000000 ;address for matrix size
 7966 00006D24         
 7967 00006D24         ;Ecommand & 0x70000000 ;address for i, j, k of Eij or Ei
                       jk or Eik
 7968 00006D24         
 7969 00006D24 60000000 
                       Result_data
                               &                0x60000000  ;label for output
 7970 00006D28         
 7971 00006D28                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\top.d -o.\objects\top.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_
v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION
 SETA 528" --list=.\listings\top.lst Top.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Addition 0000656C

Symbol: Addition
   Definitions
      At line 7260 in file Top.s
   Uses
      At line 7113 in file Top.s
      At line 7133 in file Top.s

Division 000068F4

Symbol: Division
   Definitions
      At line 7589 in file Top.s
   Uses
      At line 482 in file Top.s
      At line 513 in file Top.s
      At line 603 in file Top.s
      At line 644 in file Top.s
      At line 687 in file Top.s
      At line 731 in file Top.s
      At line 774 in file Top.s
      At line 817 in file Top.s
      At line 841 in file Top.s
      At line 860 in file Top.s
      At line 879 in file Top.s
      At line 974 in file Top.s
      At line 1014 in file Top.s
      At line 1054 in file Top.s
      At line 1095 in file Top.s
      At line 1136 in file Top.s
      At line 1177 in file Top.s
      At line 1218 in file Top.s
      At line 1259 in file Top.s
      At line 1300 in file Top.s
      At line 1341 in file Top.s
      At line 1382 in file Top.s
      At line 1423 in file Top.s
      At line 1445 in file Top.s
      At line 1462 in file Top.s
      At line 1479 in file Top.s
      At line 1496 in file Top.s
      At line 1604 in file Top.s
      At line 1645 in file Top.s
      At line 1686 in file Top.s
      At line 1727 in file Top.s
      At line 1768 in file Top.s
      At line 1809 in file Top.s
      At line 1850 in file Top.s
      At line 1891 in file Top.s
      At line 1932 in file Top.s
      At line 1973 in file Top.s
      At line 2014 in file Top.s
      At line 2055 in file Top.s
      At line 2096 in file Top.s
      At line 2137 in file Top.s
      At line 2178 in file Top.s
      At line 2219 in file Top.s
      At line 2260 in file Top.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 2301 in file Top.s
      At line 2342 in file Top.s
      At line 2383 in file Top.s
      At line 2405 in file Top.s
      At line 2422 in file Top.s
      At line 2439 in file Top.s
      At line 2456 in file Top.s
      At line 2473 in file Top.s
      At line 2827 in file Top.s
      At line 2871 in file Top.s
      At line 2916 in file Top.s
      At line 2961 in file Top.s
      At line 3006 in file Top.s
      At line 3051 in file Top.s
      At line 3096 in file Top.s
      At line 3141 in file Top.s
      At line 3186 in file Top.s
      At line 3235 in file Top.s
      At line 3282 in file Top.s
      At line 3329 in file Top.s
      At line 3376 in file Top.s
      At line 3423 in file Top.s
      At line 3470 in file Top.s
      At line 3517 in file Top.s
      At line 3564 in file Top.s
      At line 3611 in file Top.s
      At line 3640 in file Top.s
      At line 5071 in file Top.s
      At line 5115 in file Top.s
      At line 5160 in file Top.s
      At line 5205 in file Top.s
      At line 5250 in file Top.s
      At line 5295 in file Top.s
      At line 5340 in file Top.s
      At line 5385 in file Top.s
      At line 5430 in file Top.s
      At line 5475 in file Top.s
      At line 5520 in file Top.s
      At line 5565 in file Top.s
      At line 5610 in file Top.s
      At line 5656 in file Top.s
      At line 5703 in file Top.s
      At line 5750 in file Top.s
      At line 5797 in file Top.s
      At line 5844 in file Top.s
      At line 5891 in file Top.s
      At line 5948 in file Top.s
      At line 6002 in file Top.s
      At line 6056 in file Top.s
      At line 6110 in file Top.s
      At line 6164 in file Top.s
      At line 6218 in file Top.s
      At line 6272 in file Top.s
      At line 6321 in file Top.s
      At line 6370 in file Top.s
      At line 6419 in file Top.s
      At line 6468 in file Top.s
      At line 6517 in file Top.s
      At line 6566 in file Top.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 6615 in file Top.s
      At line 6664 in file Top.s
      At line 6713 in file Top.s
      At line 6762 in file Top.s
      At line 6811 in file Top.s
      At line 6860 in file Top.s
      At line 6888 in file Top.s

Eij 000064D0

Symbol: Eij
   Definitions
      At line 7214 in file Top.s
   Uses
      At line 597 in file Top.s
      At line 638 in file Top.s
      At line 680 in file Top.s
      At line 724 in file Top.s
      At line 767 in file Top.s
      At line 810 in file Top.s
      At line 968 in file Top.s
      At line 1008 in file Top.s
      At line 1048 in file Top.s
      At line 1088 in file Top.s
      At line 1129 in file Top.s
      At line 1170 in file Top.s
      At line 1211 in file Top.s
      At line 1252 in file Top.s
      At line 1293 in file Top.s
      At line 1334 in file Top.s
      At line 1375 in file Top.s
      At line 1416 in file Top.s
      At line 1597 in file Top.s
      At line 1638 in file Top.s
      At line 1679 in file Top.s
      At line 1720 in file Top.s
      At line 1761 in file Top.s
      At line 1802 in file Top.s
      At line 1843 in file Top.s
      At line 1884 in file Top.s
      At line 1925 in file Top.s
      At line 1966 in file Top.s
      At line 2007 in file Top.s
      At line 2048 in file Top.s
      At line 2089 in file Top.s
      At line 2130 in file Top.s
      At line 2171 in file Top.s
      At line 2212 in file Top.s
      At line 2253 in file Top.s
      At line 2294 in file Top.s
      At line 2335 in file Top.s
      At line 2376 in file Top.s
      At line 2821 in file Top.s
      At line 2865 in file Top.s
      At line 2910 in file Top.s
      At line 2955 in file Top.s
      At line 3000 in file Top.s
      At line 3045 in file Top.s
      At line 3090 in file Top.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 3135 in file Top.s
      At line 3180 in file Top.s
      At line 3227 in file Top.s
      At line 3274 in file Top.s
      At line 3321 in file Top.s
      At line 3368 in file Top.s
      At line 3415 in file Top.s
      At line 3462 in file Top.s
      At line 3509 in file Top.s
      At line 3556 in file Top.s
      At line 3603 in file Top.s
      At line 5065 in file Top.s
      At line 5109 in file Top.s
      At line 5154 in file Top.s
      At line 5199 in file Top.s
      At line 5244 in file Top.s
      At line 5289 in file Top.s
      At line 5334 in file Top.s
      At line 5379 in file Top.s
      At line 5424 in file Top.s
      At line 5469 in file Top.s
      At line 5514 in file Top.s
      At line 5559 in file Top.s
      At line 5604 in file Top.s
      At line 5650 in file Top.s
      At line 5697 in file Top.s
      At line 5744 in file Top.s
      At line 5791 in file Top.s
      At line 5838 in file Top.s
      At line 5885 in file Top.s
      At line 5937 in file Top.s
      At line 5991 in file Top.s
      At line 6045 in file Top.s
      At line 6099 in file Top.s
      At line 6153 in file Top.s
      At line 6207 in file Top.s
      At line 6261 in file Top.s
      At line 6312 in file Top.s
      At line 6361 in file Top.s
      At line 6410 in file Top.s
      At line 6459 in file Top.s
      At line 6508 in file Top.s
      At line 6557 in file Top.s
      At line 6606 in file Top.s
      At line 6655 in file Top.s
      At line 6704 in file Top.s
      At line 6753 in file Top.s
      At line 6802 in file Top.s
      At line 6851 in file Top.s

Eij2 0000653C

Symbol: Eij2
   Definitions
      At line 7245 in file Top.s
   Uses
      At line 7243 in file Top.s
      At line 7258 in file Top.s




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Eijk 00006308

Symbol: Eijk
   Definitions
      At line 7061 in file Top.s
   Uses
      At line 617 in file Top.s
      At line 658 in file Top.s
      At line 701 in file Top.s
      At line 745 in file Top.s
      At line 788 in file Top.s
      At line 831 in file Top.s
      At line 988 in file Top.s
      At line 1028 in file Top.s
      At line 1068 in file Top.s
      At line 1109 in file Top.s
      At line 1150 in file Top.s
      At line 1191 in file Top.s
      At line 1232 in file Top.s
      At line 1273 in file Top.s
      At line 1314 in file Top.s
      At line 1355 in file Top.s
      At line 1396 in file Top.s
      At line 1437 in file Top.s
      At line 1618 in file Top.s
      At line 1659 in file Top.s
      At line 1700 in file Top.s
      At line 1741 in file Top.s
      At line 1782 in file Top.s
      At line 1823 in file Top.s
      At line 1864 in file Top.s
      At line 1905 in file Top.s
      At line 1946 in file Top.s
      At line 1987 in file Top.s
      At line 2028 in file Top.s
      At line 2069 in file Top.s
      At line 2110 in file Top.s
      At line 2151 in file Top.s
      At line 2192 in file Top.s
      At line 2233 in file Top.s
      At line 2274 in file Top.s
      At line 2315 in file Top.s
      At line 2356 in file Top.s
      At line 2397 in file Top.s
      At line 2839 in file Top.s
      At line 2884 in file Top.s
      At line 2929 in file Top.s
      At line 2974 in file Top.s
      At line 3019 in file Top.s
      At line 3064 in file Top.s
      At line 3109 in file Top.s
      At line 3154 in file Top.s
      At line 3199 in file Top.s
      At line 3248 in file Top.s
      At line 3295 in file Top.s
      At line 3342 in file Top.s
      At line 3389 in file Top.s
      At line 3436 in file Top.s
      At line 3483 in file Top.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 3530 in file Top.s
      At line 3577 in file Top.s
      At line 3624 in file Top.s
      At line 5083 in file Top.s
      At line 5128 in file Top.s
      At line 5173 in file Top.s
      At line 5218 in file Top.s
      At line 5263 in file Top.s
      At line 5308 in file Top.s
      At line 5353 in file Top.s
      At line 5398 in file Top.s
      At line 5443 in file Top.s
      At line 5488 in file Top.s
      At line 5533 in file Top.s
      At line 5578 in file Top.s
      At line 5623 in file Top.s
      At line 5669 in file Top.s
      At line 5716 in file Top.s
      At line 5763 in file Top.s
      At line 5810 in file Top.s
      At line 5857 in file Top.s
      At line 5904 in file Top.s
      At line 5961 in file Top.s
      At line 6015 in file Top.s
      At line 6069 in file Top.s
      At line 6123 in file Top.s
      At line 6177 in file Top.s
      At line 6231 in file Top.s
      At line 6285 in file Top.s
      At line 6334 in file Top.s
      At line 6383 in file Top.s
      At line 6432 in file Top.s
      At line 6481 in file Top.s
      At line 6530 in file Top.s
      At line 6579 in file Top.s
      At line 6628 in file Top.s
      At line 6677 in file Top.s
      At line 6726 in file Top.s
      At line 6775 in file Top.s
      At line 6824 in file Top.s
      At line 6873 in file Top.s

Eijk2 00006370

Symbol: Eijk2
   Definitions
      At line 7095 in file Top.s
   Uses
      At line 7093 in file Top.s
      At line 7144 in file Top.s

Eik 00006408

Symbol: Eik
   Definitions
      At line 7146 in file Top.s
   Uses
      At line 850 in file Top.s
      At line 869 in file Top.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      At line 888 in file Top.s
      At line 1454 in file Top.s
      At line 1471 in file Top.s
      At line 1488 in file Top.s
      At line 1505 in file Top.s
      At line 2414 in file Top.s
      At line 2431 in file Top.s
      At line 2448 in file Top.s
      At line 2465 in file Top.s
      At line 2482 in file Top.s
      At line 3647 in file Top.s
      At line 6895 in file Top.s

Eik2 00006470

Symbol: Eik2
   Definitions
      At line 7181 in file Top.s
   Uses
      At line 7177 in file Top.s
      At line 7212 in file Top.s

Loop10 00002598

Symbol: Loop10
   Definitions
      At line 2741 in file Top.s
   Uses
      At line 2504 in file Top.s
      At line 2748 in file Top.s

Loop10_1 00002674

Symbol: Loop10_1
   Definitions
      At line 2802 in file Top.s
   Uses
      At line 2561 in file Top.s
      At line 2619 in file Top.s
      At line 2678 in file Top.s
      At line 2738 in file Top.s
      At line 2799 in file Top.s
      At line 2841 in file Top.s

Loop10_10 00002C0C

Symbol: Loop10_10
   Definitions
      At line 3206 in file Top.s
   Uses
      At line 3250 in file Top.s
Comment: Loop10_10 used once
Loop10_11 00002CB4

Symbol: Loop10_11
   Definitions
      At line 3253 in file Top.s
   Uses
      At line 3297 in file Top.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

Comment: Loop10_11 used once
Loop10_12 00002D5C

Symbol: Loop10_12
   Definitions
      At line 3300 in file Top.s
   Uses
      At line 3344 in file Top.s
Comment: Loop10_12 used once
Loop10_13 00002E04

Symbol: Loop10_13
   Definitions
      At line 3347 in file Top.s
   Uses
      At line 3391 in file Top.s
Comment: Loop10_13 used once
Loop10_14 00002EAC

Symbol: Loop10_14
   Definitions
      At line 3394 in file Top.s
   Uses
      At line 3438 in file Top.s
Comment: Loop10_14 used once
Loop10_15 00002F54

Symbol: Loop10_15
   Definitions
      At line 3441 in file Top.s
   Uses
      At line 3485 in file Top.s
Comment: Loop10_15 used once
Loop10_16 00002FFC

Symbol: Loop10_16
   Definitions
      At line 3488 in file Top.s
   Uses
      At line 3532 in file Top.s
Comment: Loop10_16 used once
Loop10_17 000030A4

Symbol: Loop10_17
   Definitions
      At line 3535 in file Top.s
   Uses
      At line 3579 in file Top.s
Comment: Loop10_17 used once
Loop10_18 0000314C

Symbol: Loop10_18
   Definitions
      At line 3582 in file Top.s
   Uses
      At line 3626 in file Top.s
Comment: Loop10_18 used once
Loop10_19 000031FC




ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

Symbol: Loop10_19
   Definitions
      At line 3632 in file Top.s
   Uses
      At line 3649 in file Top.s
Comment: Loop10_19 used once
Loop10_2 00002710

Symbol: Loop10_2
   Definitions
      At line 2846 in file Top.s
   Uses
      At line 2886 in file Top.s
Comment: Loop10_2 used once
Loop10_3 000027B0

Symbol: Loop10_3
   Definitions
      At line 2891 in file Top.s
   Uses
      At line 2931 in file Top.s
Comment: Loop10_3 used once
Loop10_4 00002850

Symbol: Loop10_4
   Definitions
      At line 2936 in file Top.s
   Uses
      At line 2976 in file Top.s
Comment: Loop10_4 used once
Loop10_5 000028F0

Symbol: Loop10_5
   Definitions
      At line 2981 in file Top.s
   Uses
      At line 3021 in file Top.s
Comment: Loop10_5 used once
Loop10_6 00002990

Symbol: Loop10_6
   Definitions
      At line 3026 in file Top.s
   Uses
      At line 3066 in file Top.s
Comment: Loop10_6 used once
Loop10_7 00002A30

Symbol: Loop10_7
   Definitions
      At line 3071 in file Top.s
   Uses
      At line 3111 in file Top.s
Comment: Loop10_7 used once
Loop10_8 00002AD0

Symbol: Loop10_8
   Definitions
      At line 3116 in file Top.s



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 3156 in file Top.s
Comment: Loop10_8 used once
Loop10_9 00002B70

Symbol: Loop10_9
   Definitions
      At line 3161 in file Top.s
   Uses
      At line 3201 in file Top.s
Comment: Loop10_9 used once
Loop11 00003370

Symbol: Loop11
   Definitions
      At line 3740 in file Top.s
   Uses
      At line 3719 in file Top.s
      At line 3751 in file Top.s

Loop11_2 00006158

Symbol: Loop11_2
   Definitions
      At line 6935 in file Top.s
   Uses
      At line 6906 in file Top.s
      At line 6946 in file Top.s

Loop12 00003550

Symbol: Loop12
   Definitions
      At line 3866 in file Top.s
   Uses
      At line 3721 in file Top.s
      At line 3877 in file Top.s

Loop12_2 00006188

Symbol: Loop12_2
   Definitions
      At line 6949 in file Top.s
   Uses
      At line 6909 in file Top.s
      At line 6960 in file Top.s

Loop13 00003734

Symbol: Loop13
   Definitions
      At line 3993 in file Top.s
   Uses
      At line 3723 in file Top.s
      At line 4004 in file Top.s

Loop13_2 000061B8

Symbol: Loop13_2



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 6963 in file Top.s
   Uses
      At line 6912 in file Top.s
      At line 6974 in file Top.s

Loop14 0000391C

Symbol: Loop14
   Definitions
      At line 4121 in file Top.s
   Uses
      At line 3725 in file Top.s
      At line 4132 in file Top.s

Loop14_2 000061E8

Symbol: Loop14_2
   Definitions
      At line 6977 in file Top.s
   Uses
      At line 6915 in file Top.s
      At line 6988 in file Top.s

Loop15 00003B08

Symbol: Loop15
   Definitions
      At line 4250 in file Top.s
   Uses
      At line 3727 in file Top.s
      At line 4261 in file Top.s

Loop15_2 00006218

Symbol: Loop15_2
   Definitions
      At line 6991 in file Top.s
   Uses
      At line 6918 in file Top.s
      At line 7002 in file Top.s

Loop16 00003CF8

Symbol: Loop16
   Definitions
      At line 4380 in file Top.s
   Uses
      At line 3729 in file Top.s
      At line 4391 in file Top.s

Loop16_2 00006248

Symbol: Loop16_2
   Definitions
      At line 7005 in file Top.s
   Uses
      At line 6921 in file Top.s
      At line 7016 in file Top.s



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Relocatable symbols


Loop17 00003EEC

Symbol: Loop17
   Definitions
      At line 4511 in file Top.s
   Uses
      At line 3731 in file Top.s
      At line 4522 in file Top.s

Loop17_2 00006278

Symbol: Loop17_2
   Definitions
      At line 7019 in file Top.s
   Uses
      At line 6924 in file Top.s
      At line 7030 in file Top.s

Loop18 000040E4

Symbol: Loop18
   Definitions
      At line 4643 in file Top.s
   Uses
      At line 3733 in file Top.s
      At line 4654 in file Top.s

Loop18_2 000062A8

Symbol: Loop18_2
   Definitions
      At line 7033 in file Top.s
   Uses
      At line 6927 in file Top.s
      At line 7044 in file Top.s

Loop19 000042E0

Symbol: Loop19
   Definitions
      At line 4776 in file Top.s
   Uses
      At line 3735 in file Top.s
      At line 4787 in file Top.s

Loop19_2 000062D8

Symbol: Loop19_2
   Definitions
      At line 7047 in file Top.s
   Uses
      At line 6930 in file Top.s
      At line 7058 in file Top.s

Loop20 000044E0

Symbol: Loop20
   Definitions



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Relocatable symbols

      At line 4910 in file Top.s
   Uses
      At line 3737 in file Top.s
      At line 4921 in file Top.s

Loop20_1 000046E8

Symbol: Loop20_1
   Definitions
      At line 5046 in file Top.s
   Uses
      At line 3864 in file Top.s
      At line 3991 in file Top.s
      At line 4119 in file Top.s
      At line 4248 in file Top.s
      At line 4378 in file Top.s
      At line 4509 in file Top.s
      At line 4641 in file Top.s
      At line 4774 in file Top.s
      At line 4908 in file Top.s
      At line 5044 in file Top.s
      At line 5085 in file Top.s

Loop20_10 00004C84

Symbol: Loop20_10
   Definitions
      At line 5450 in file Top.s
   Uses
      At line 5490 in file Top.s
Comment: Loop20_10 used once
Loop20_11 00004D24

Symbol: Loop20_11
   Definitions
      At line 5495 in file Top.s
   Uses
      At line 5535 in file Top.s
Comment: Loop20_11 used once
Loop20_12 00004DC4

Symbol: Loop20_12
   Definitions
      At line 5540 in file Top.s
   Uses
      At line 5580 in file Top.s
Comment: Loop20_12 used once
Loop20_13 00004E64

Symbol: Loop20_13
   Definitions
      At line 5585 in file Top.s
   Uses
      At line 5625 in file Top.s
Comment: Loop20_13 used once
Loop20_14 00004F08

Symbol: Loop20_14
   Definitions



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Relocatable symbols

      At line 5631 in file Top.s
   Uses
      At line 5671 in file Top.s
Comment: Loop20_14 used once
Loop20_15 00004FB0

Symbol: Loop20_15
   Definitions
      At line 5678 in file Top.s
   Uses
      At line 5718 in file Top.s
Comment: Loop20_15 used once
Loop20_16 00005058

Symbol: Loop20_16
   Definitions
      At line 5725 in file Top.s
   Uses
      At line 5765 in file Top.s
Comment: Loop20_16 used once
Loop20_17 00005100

Symbol: Loop20_17
   Definitions
      At line 5772 in file Top.s
   Uses
      At line 5812 in file Top.s
Comment: Loop20_17 used once
Loop20_18 000051A8

Symbol: Loop20_18
   Definitions
      At line 5819 in file Top.s
   Uses
      At line 5859 in file Top.s
Comment: Loop20_18 used once
Loop20_19 00005250

Symbol: Loop20_19
   Definitions
      At line 5866 in file Top.s
   Uses
      At line 5906 in file Top.s
Comment: Loop20_19 used once
Loop20_2 00004784

Symbol: Loop20_2
   Definitions
      At line 5090 in file Top.s
   Uses
      At line 5130 in file Top.s
Comment: Loop20_2 used once
Loop20_20 000052F4

Symbol: Loop20_20
   Definitions
      At line 5913 in file Top.s
   Uses
      At line 5963 in file Top.s



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Relocatable symbols

Comment: Loop20_20 used once
Loop20_21 000053B8

Symbol: Loop20_21
   Definitions
      At line 5967 in file Top.s
   Uses
      At line 6017 in file Top.s
Comment: Loop20_21 used once
Loop20_22 0000547C

Symbol: Loop20_22
   Definitions
      At line 6021 in file Top.s
   Uses
      At line 6071 in file Top.s
Comment: Loop20_22 used once
Loop20_23 00005540

Symbol: Loop20_23
   Definitions
      At line 6075 in file Top.s
   Uses
      At line 6125 in file Top.s
Comment: Loop20_23 used once
Loop20_24 00005604

Symbol: Loop20_24
   Definitions
      At line 6129 in file Top.s
   Uses
      At line 6179 in file Top.s
Comment: Loop20_24 used once
Loop20_25 000056C8

Symbol: Loop20_25
   Definitions
      At line 6183 in file Top.s
   Uses
      At line 6233 in file Top.s
Comment: Loop20_25 used once
Loop20_26 0000578C

Symbol: Loop20_26
   Definitions
      At line 6237 in file Top.s
   Uses
      At line 6287 in file Top.s
Comment: Loop20_26 used once
Loop20_27 0000584C

Symbol: Loop20_27
   Definitions
      At line 6290 in file Top.s
   Uses
      At line 6336 in file Top.s
Comment: Loop20_27 used once
Loop20_28 000058FC




ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Relocatable symbols

Symbol: Loop20_28
   Definitions
      At line 6339 in file Top.s
   Uses
      At line 6385 in file Top.s
Comment: Loop20_28 used once
Loop20_29 000059AC

Symbol: Loop20_29
   Definitions
      At line 6388 in file Top.s
   Uses
      At line 6434 in file Top.s
Comment: Loop20_29 used once
Loop20_3 00004824

Symbol: Loop20_3
   Definitions
      At line 5135 in file Top.s
   Uses
      At line 5175 in file Top.s
Comment: Loop20_3 used once
Loop20_30 00005A5C

Symbol: Loop20_30
   Definitions
      At line 6437 in file Top.s
   Uses
      At line 6483 in file Top.s
Comment: Loop20_30 used once
Loop20_31 00005B0C

Symbol: Loop20_31
   Definitions
      At line 6486 in file Top.s
   Uses
      At line 6532 in file Top.s
Comment: Loop20_31 used once
Loop20_32 00005BBC

Symbol: Loop20_32
   Definitions
      At line 6535 in file Top.s
   Uses
      At line 6581 in file Top.s
Comment: Loop20_32 used once
Loop20_33 00005C6C

Symbol: Loop20_33
   Definitions
      At line 6584 in file Top.s
   Uses
      At line 6630 in file Top.s
Comment: Loop20_33 used once
Loop20_34 00005D1C

Symbol: Loop20_34
   Definitions
      At line 6633 in file Top.s



ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 6679 in file Top.s
Comment: Loop20_34 used once
Loop20_35 00005DCC

Symbol: Loop20_35
   Definitions
      At line 6682 in file Top.s
   Uses
      At line 6728 in file Top.s
Comment: Loop20_35 used once
Loop20_36 00005E7C

Symbol: Loop20_36
   Definitions
      At line 6731 in file Top.s
   Uses
      At line 6777 in file Top.s
Comment: Loop20_36 used once
Loop20_37 00005F2C

Symbol: Loop20_37
   Definitions
      At line 6780 in file Top.s
   Uses
      At line 6826 in file Top.s
Comment: Loop20_37 used once
Loop20_38 00005FDC

Symbol: Loop20_38
   Definitions
      At line 6829 in file Top.s
   Uses
      At line 6875 in file Top.s
Comment: Loop20_38 used once
Loop20_39 00006094

Symbol: Loop20_39
   Definitions
      At line 6880 in file Top.s
   Uses
      At line 6897 in file Top.s
Comment: Loop20_39 used once
Loop20_4 000048C4

Symbol: Loop20_4
   Definitions
      At line 5180 in file Top.s
   Uses
      At line 5220 in file Top.s
Comment: Loop20_4 used once
Loop20_5 00004964

Symbol: Loop20_5
   Definitions
      At line 5225 in file Top.s
   Uses
      At line 5265 in file Top.s
Comment: Loop20_5 used once



ARM Macro Assembler    Page 18 Alphabetic symbol ordering
Relocatable symbols

Loop20_6 00004A04

Symbol: Loop20_6
   Definitions
      At line 5270 in file Top.s
   Uses
      At line 5310 in file Top.s
Comment: Loop20_6 used once
Loop20_7 00004AA4

Symbol: Loop20_7
   Definitions
      At line 5315 in file Top.s
   Uses
      At line 5355 in file Top.s
Comment: Loop20_7 used once
Loop20_8 00004B44

Symbol: Loop20_8
   Definitions
      At line 5360 in file Top.s
   Uses
      At line 5400 in file Top.s
Comment: Loop20_8 used once
Loop20_9 00004BE4

Symbol: Loop20_9
   Definitions
      At line 5405 in file Top.s
   Uses
      At line 5445 in file Top.s
Comment: Loop20_9 used once
Loop6 00002260

Symbol: Loop6
   Definitions
      At line 2507 in file Top.s
   Uses
      At line 2496 in file Top.s
      At line 2514 in file Top.s

Loop6_2 00003284

Symbol: Loop6_2
   Definitions
      At line 3671 in file Top.s
   Uses
      At line 3658 in file Top.s
      At line 3678 in file Top.s

Loop7 00002328

Symbol: Loop7
   Definitions
      At line 2564 in file Top.s
   Uses
      At line 2498 in file Top.s
      At line 2571 in file Top.s




ARM Macro Assembler    Page 19 Alphabetic symbol ordering
Relocatable symbols

Loop7_2 000032A4

Symbol: Loop7_2
   Definitions
      At line 3681 in file Top.s
   Uses
      At line 3661 in file Top.s
      At line 3688 in file Top.s

Loop8 000023F4

Symbol: Loop8
   Definitions
      At line 2622 in file Top.s
   Uses
      At line 2500 in file Top.s
      At line 2629 in file Top.s

Loop8_2 000032C4

Symbol: Loop8_2
   Definitions
      At line 3691 in file Top.s
   Uses
      At line 3664 in file Top.s
      At line 3698 in file Top.s

Loop9 000024C4

Symbol: Loop9
   Definitions
      At line 2681 in file Top.s
   Uses
      At line 2502 in file Top.s
      At line 2688 in file Top.s

Loop9_2 000032E4

Symbol: Loop9_2
   Definitions
      At line 3701 in file Top.s
   Uses
      At line 3667 in file Top.s
      At line 3708 in file Top.s

Main 00000000

Symbol: Main
   Definitions
      At line 4 in file Top.s
   Uses
      None
Comment: Main unused
Makeidentity1 00000700

Symbol: Makeidentity1
   Definitions
      At line 477 in file Top.s
   Uses



ARM Macro Assembler    Page 20 Alphabetic symbol ordering
Relocatable symbols

      At line 31 in file Top.s
Comment: Makeidentity1 used once
Makeidentity10 0000221C

Symbol: Makeidentity10
   Definitions
      At line 2488 in file Top.s
   Uses
      At line 41 in file Top.s
      At line 43 in file Top.s
      At line 45 in file Top.s
      At line 47 in file Top.s
      At line 49 in file Top.s

Makeidentity2 00000720

Symbol: Makeidentity2
   Definitions
      At line 489 in file Top.s
   Uses
      At line 33 in file Top.s
Comment: Makeidentity2 used once
Makeidentity20 00003304

Symbol: Makeidentity20
   Definitions
      At line 3711 in file Top.s
   Uses
      At line 51 in file Top.s
      At line 53 in file Top.s
      At line 55 in file Top.s
      At line 57 in file Top.s
      At line 59 in file Top.s
      At line 61 in file Top.s
      At line 63 in file Top.s
      At line 65 in file Top.s
      At line 67 in file Top.s
      At line 69 in file Top.s

Makeidentity3 000007EC

Symbol: Makeidentity3
   Definitions
      At line 553 in file Top.s
   Uses
      At line 35 in file Top.s
Comment: Makeidentity3 used once
Makeidentity4 00000C48

Symbol: Makeidentity4
   Definitions
      At line 897 in file Top.s
   Uses
      At line 37 in file Top.s
Comment: Makeidentity4 used once
Makeidentity5 000014B0

Symbol: Makeidentity5
   Definitions



ARM Macro Assembler    Page 21 Alphabetic symbol ordering
Relocatable symbols

      At line 1511 in file Top.s
   Uses
      At line 39 in file Top.s
Comment: Makeidentity5 used once
Matrix_data 000000BC

Symbol: Matrix_data
   Definitions
      At line 74 in file Top.s
   Uses
      At line 8 in file Top.s
      At line 554 in file Top.s
      At line 898 in file Top.s
      At line 1512 in file Top.s
      At line 2489 in file Top.s
      At line 3712 in file Top.s

Multiplication 000067E0

Symbol: Multiplication
   Definitions
      At line 7487 in file Top.s
   Uses
      At line 497 in file Top.s
      At line 502 in file Top.s
      At line 518 in file Top.s
      At line 530 in file Top.s
      At line 540 in file Top.s
      At line 546 in file Top.s
      At line 7104 in file Top.s
      At line 7124 in file Top.s
      At line 7190 in file Top.s
      At line 7201 in file Top.s

Result_data 00006D24

Symbol: Result_data
   Definitions
      At line 7969 in file Top.s
   Uses
      None
Comment: Result_data unused
Subtraction 000066AC

Symbol: Subtraction
   Definitions
      At line 7375 in file Top.s
   Uses
      At line 507 in file Top.s
      At line 526 in file Top.s
      At line 536 in file Top.s

Top 00000000

Symbol: Top
   Definitions
      At line 1 in file Top.s
   Uses
      None



ARM Macro Assembler    Page 22 Alphabetic symbol ordering
Relocatable symbols

Comment: Top unused
absolute 00006A18

Symbol: absolute
   Definitions
      At line 7697 in file Top.s
   Uses
      At line 7347 in file Top.s
      At line 7459 in file Top.s

binary 00006B94

Symbol: binary
   Definitions
      At line 7829 in file Top.s
   Uses
      At line 7664 in file Top.s
Comment: binary used once
booth 00006A58

Symbol: booth
   Definitions
      At line 7721 in file Top.s
   Uses
      At line 7568 in file Top.s
Comment: booth used once
compare 000069F0

Symbol: compare
   Definitions
      At line 7685 in file Top.s
   Uses
      At line 7329 in file Top.s
      At line 7441 in file Top.s

normalize 00006A28

Symbol: normalize
   Definitions
      At line 7703 in file Top.s
   Uses
      At line 7357 in file Top.s
      At line 7469 in file Top.s
      At line 7571 in file Top.s
      At line 7667 in file Top.s
      At line 7711 in file Top.s
      At line 7716 in file Top.s

112 symbols
452 symbols in table
